<document>
  <zone label="GEN_OTHER">*</zone>
  <zone label="MET_AUTHOR">PYA--iJe.N,,.,tf.:PJnu</zone>
  <zone label="MET_BIB_INFO">International
ISSN J 828-6003
Review on Computers and Software (I.RE. CO.SJ. Vol. 8, N. 11
November 2013
Managing Software
Fuzzy Regression</zone>
  <zone label="MET_AFFILIATION">Project Risks (Design Phase)
Analysis Techniques with Fuzzy</zone>
  <zone label="MET_BIB_INFO">with
Proposed
Concepts</zone>
  <zone label="BODY_HEADING">Abdelrafe</zone>
  <zone label="MET_AUTHOR">Elzamly',Burairah
Hussin'</zone>
  <zone label="MET_ABSTRACT">Abstract - This Regardless how much effort we put for the success of software projects, many
software projects have very high failure rate. Risk is not always avoidable, but ii is controllable.
The aim of this paper is to present the new mining technique that uses the fuzzy multiple
regression analysis techniques with fuzzy concepts to managing the risks in a software project and
reducing risk with software process improvement. Top ten software risk factors in design phase
and thirty risk management techniques were presented to respondents. 17,e results show that all
risks in software projects were important in software project manager perspective, whereas all
risk management techniques are used most of time. and often. However, these mining tests were
performed using fuzzy multiple regression analysis techniques to compare the risk management
techniques to each of the software risk factors to determine if they are effective in mitigating the
occurrence of each software risk factor by usjng statistical package for the Social Science (SPSS)
for Manipulating and analyzing the data set, MATLAB 7.12.0 (R201 la}, wolfram mathematic 9.0,.
Also ten top software risk factors were mitigated by using risk management techniques except Risk
3 "Developing the Wrong User Interface". We referred the risk management techniques were
mitigated on software risk factors in Table XV. The study has been conducted on a group of
software project managers. Successful project risk management will greatly improve the
probability of project success. CopyrightÂ© 2013 Praise Worthy Prize S.r.L - All rights reserved.</zone>
  <zone label="MET_KEYWORDS">Keywords: Software Project Management, Software Risk Management, Design Phase, Software
Risk Factors. Risk Management Techniques, Fuzzy Multiple Regression Analysis
Techniques, Correlation Analysis, Statistical and Mining Techniques</zone>
  <zone label="GEN_OTHER">I.
Introduction</zone>
  <zone label="BODY_CONTENT">Despite much research and progress in the area of
software project management, software development
projects still fail to deliver acceptable systems on time
and within budget. For some of these reasons corrective
action is often difficult to cost-justify or to implement
efficiently in practice [I). Much of the failure could be
avoided by managers pro-actively planning and dealing
with risk factors rather than waiting for problems to
occur and then trying to react. Project management and
risk management has been proposed as a solution to
preserve the quality and integrity of a project by reducing
cost escalation [2].
Due to the involvement of risk management in
monitoring the success of a software project, analyzing
potential risks, and making decisions about what to do
about potential risks, the risk management is considered
the planned control of risk. Integrating formal risk
management with project management is a new
phenomenon in software engineering and product
management community. It requires that project
managers need to be involved in a project from the
concept phase to the product's retirement [3). In addition,
risk is an uncertainty that can have a negative or positive
effect on meeting project objectives.
Risk management is the process of identifying,
analyzing and controlling risk throughout the life of a
project to meet the project objectives (2). Clearly, the
success or failure of software projects are generally
assessed in three dimensions: budget, schedule, product
functionality and quality (4).
However, the goal of risk management at early
identification and recognition of risks and then actively
changes the course of actions to mitigate and reduce the
risk [5). ln the process of understanding the factors that
contribute to software project success, risk is becoming
increasingly important. This is a result of the size,
complexity and strategic importance of many of the
information systems currently being developed. Today,
we must think of risk is a part of software project
lifecycle and is important for a software project survival
(6J. On the other hand, risk management aims to read
risks as improvement opportunities and provide inputs to
growth plans (6). Risk management is well recognized as
an important means of mitigating software failure (7).
Also software projects are difficult to manage and too
many of them end in failure [8). Masticola described risk
management to mean any activity that is intended to help
software project managers to understand and manage the
risk of serious budget overruns in software projects [I].</zone>
  <zone label="BODY_HEADING">Manuscript received and revised</zone>
  <zone label="MET_AFFILIATION">October 201 J. accepted November 101 J</zone>
  <zone label="MET_COPYRIGHT">Copyright IO 201 J Praise</zone>
  <zone label="BODY_HEADING">Worthy Prize S.r.l. -All rights reserved</zone>
  <zone label="GEN_OTHER">2601</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="MET_TYPE">Hussin</zone>
  <zone label="BODY_CONTENT">In fact, software projects are various form and
probability more bard than other engineering projects as
they are described by high complexity and high chances
of project failure [9]. In addition, software projects fail to
meet the budget, schedule, scope, and quality
expectations is the risk related of requirements deriving
[ I OJ. Risk is associated with all phases of the software
project such as planning, analysis, design,
implementation, and maintenance.
In our paper, we identified risk factors and risk
management techniques that are guide software project
managers to understand and mitigate risks in software
development projects. However, Software Development
Life Cycle according to [ 11]. is the process of creating or
altering systems, and the models and methodologies that
people use to develop these systems. Also it includes
these phases as follow [ 1 I]: Planning, analysis, design,
implementation, and maintenance. In addition, we
focused on design phase: It involves the actual creation
and design of a system. This involves
the different pieces that will
According to Taylor we should
consistently throughout the
management process [ 12]. Risk management
of controlling risk and practice consists of processes,
methods, and tools for managing risks in a software
project before they become problems [13].
Therefore, Boehm talked about value-based risk
management, including principles and practices for risk
identification, analysis, prioritization, and mitigation
[ 14].
The objective of this study is: To identify the risk
factors of software projects in the Palestinian software
development organizations, to rank the software risk
factors according to their importance, severity and
occurrence frequency based on data source, to identify
the activities performed by software project managers to
manage the software project risks which identified, To
present models for predicting that mitigate software
project risks based on statistical and mining Techniques.
The organization of this paper as will be as follows.
Section 2 presents an overview of the literarure. Section
3 introduces the software risk factors (Design Phase)
relevant to the study. Section 4 introduces the common
risk management techniques to these risks. Section 5
presents the empirical work. Section 6 concludes the
article and glimpses on future work.
putting together
create the syste?.
be applied techniques
software project risk
is a practice
II.
Literature
Review
on a group
project success
of managers
[ 15].
We improved quality of software
participating companies while
affecting risks in IT software
that there were 40 common
IT companies in Palestine.
non-technical difficulties
risks were
projects of the
estimating the qualityprojects.
The results show
risks in software projects of
The amount of technical and
was very large. The most of the
very important. The study has been conducted
to improve the probability of
According to [ 16], they described an approach to
modelling software risk factors and simulating their
effects as a means of supporting certain software
development risk management activities.
This simulator is a tool designed specifically for the
risk management activities of assessment, mitigation,
contingency planning, and intervention. Also, the
development of a fuzzy decision support system (FDSS)
for risk assessment in e-commerce (EC) development
and a risk analysis model for EC development using a
fuzzy set approach is proposed and incorporated into the
FDSS (17]. Furthermore (18], they presented a risk
management supporting tool, detailing its functionality
and the user interface appearance as well as giving some
design and implementation details. The tool provides in
particular: Automatic risk identification from
interactively answered on-line checklists, qualitative risk
evaluation. However, why do software development
projects fail? Most researchers are considering this
equation. Although software has been successfully
applied in a large variety of areas, software development
project has a reputation for failure [ 19].
In addition, software projects are exposed to various
risk factors where risk factors are understood as a
possibility of loss, damage or disadvantage (18)-(20).
According to (21), they provided additional insights into
this phenomenon made by examining the impact on
software project performance by the interaction between
interpersonal conflict and requirement uncertainty.
Consequently, they surveyed the top 1600 companies
in Taiwan and the results indicated that requirements
instability would lead to possible interpersonal conflict
was directly related with requirements diversity which,
in tum negatively with final project performance has
been assigned. Furthermore (22], they described key
success software project factors in software organizations
which are software process and process improvement.
Therefore, without process, a software organization
cannot produce high quality, mitigating risk and it will
fail to reach its objectives. Software companies of
Bangladesh are facing the problem of specific in a
software process model. In addition, they identified a
number of risk factors such as missing in target set for
software process and improvement, low involvement of
quality control activities, and absence of standard
business expertise practice. Really, we put for the
success of software projects, many software projects
have very high failure rate. In addition, we presented a
new technique by which we can study the impact of
different control factors and different risk factors on
software projectsrisk. The new technique uses the chisquare
(X"')test to control the risks in a software project.
Fourteen risk factors and eighteen control factors were
used. The study has been conducted on a group of
managers {23]. In addition, we used new techniques the
regression test and effect size test proposed to manage
the risks in a software project and reducing risk with
software process improvement. Fourteen risk factors and
eighteen control factors were used in this paper.
Copyright() 201 J Praise
Worthy Prize S.r.l. -All rights reserved
International
Review on Computers and Software, Vol. 8, N. I J</zone>
  <zone label="GEN_OTHER">2602</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly. Burairah</zone>
  <zone label="BODY_HEADING">Russin</zone>
  <zone label="BODY_CONTENT">The nine of fourteen factors mitigated by using control
factors. The study has been conducted on a group of
managers [24]. Furthermore, we used the new stepwise
regression technique to managing the risks in a software
project. Top ten software risk fact.ors in implementation
phase and thirty control factors were presented to
respondents. These tests were performed using
regression analysis to compare the controls to each of the
risk factors to determine if they are effective in
mitigating the occurrence of each risk factor and
selecting best model [25]. Ref. [26], focused on
experienced project manager's perceptions of software
project risks and controls. This work reports on the more
significant risks and controls that are utilized to reduce
the occurrence of the risk factors. The effectiveness of
various controls to reduce the occurrence of risk factors
was also identified and discussed. According to [27],
described method associated with a special fuzzy
operator, namely a two-additive Choquet integral that
enables modeling different effects of importance ruyi
interactions among risks. The potential of the proposed
methodology is exposed through an empirical case study
conducted in a Turkish software company.
However, the methods and tools always used to
measure software risk factors and explain scores are be
defined. Also, scoring methods are important in the
qualitative, quantitative and mining analysis risk to
reduce the effects of subjectively and objectively
assigning a value to software risk factors. Also, the risk
assessment model, methods and techniques are widely
used to control risk in a software development[28).
Therefore, it is important to identify those software risk
factors that increase probability of success project. As
well as managing software project risks associate with
qualitative risk analysis techniques, quantitative risk
analysis techniques and mining risk analysis techniques.
Actually problem, how to estimate risk by methods and
techniques, so it is difficult to estimate risk due to some
of factor (29]. Furthermore, they designed to solve two
problems in the project risk management: What kind of
risk factors occurred in the software development process
(risk identification) and which of these factors did the
project managers consider most important (risk
assessment)?[30]. On the other hand, risk management
is not a discrete single activity but a dynamic process,
that is continuously more refined through its repetition
throughout a software project's life cycle (31J.
Respectively again risk management associated with all
activities, a conditions and events, which can affect the
organization, and its ability to achieve the organization's
goals [32]. However, risk management is to identify
risky situations and develop strategies to mitigate the
likelihood of occurrence and the negative effect of risky
events[33]. Risk management focuses on assessment the
likelihood of risk occurring, risk event drivers, risk
events, the likelihood of impact and the impact drivers
before the risk actually talces place (28].
Ref. [20), presented a process model-based approach
to software project risk identification.
Their approach involves explicit modelling of
software processes and identifying risk by two
techniques: Metrics of process structure and focuses on
the differences between the actual and the referential
model. Also Miler explained risk identification:
Identification of risk incidents threatening the success of
project as well as their risk factors, recognize of the risk
scenarios (4).
Consequently, risk prioritization requires analyzing
the potential effects of the risk event and impact value.
The degree of risk depends upon two properties: The
likelihood and impact on the software project if it works
[34]. Also, risk analysis contribute to analyze probability
and consequences in the risk identification phase and
estimate the impact, sensitivity, relationships of risks, the
relationship between risk factors and risk management
techniques with new techniques, analysis of risk
mitigation options, analyze a certain risk mitigation
strategy. In addition, risk analysis assesses the loss
likelihood and loss size impact for each identified risk
item and it assesses compound risks in risk-item
interactions. Therefore, techniques include performance
models, cost models, network analysis, statistical
decision analysis, and quality-factor analysis [35].
According to Deng and Bian (36), controlling risk can
be defined as that, in order to reduce the probabilities of
different kinds of risks, together with reducing losses
caused by risk incidences, project managers carry out
optimal techniques for holding identified risks. Only risk
controlling is done well, can say that enterprises have
succeeded in managing risks. Control- when a process of
continually monitoring and correcting the condition on
the project is used. This process involves the
development of a risk reduction plan and then tracking
the plan (37). Also, not every risk factor is fully
controllable, and several risk factors exceed the authority
of software managers (28]. Indeed, mitigation is to
reduce the risk exposure. This can be accomplished by
reducing the likelihood of the risk occuning, reducing
the cost of experiencing the risk, or both [38].
According to Dash and Dash (28], risk management
consists of the processes, methodologies and tools that
are used to deal with risk factors in the Software
Development Life Cycle (SDLC) process of Software
Project. Also dash described risk management is defined
as the activity that identifies a risk; assesses the risk and
defines the policies or strategies to alleviate or lessen the
risk. Also Oracle Corporation described risk management
solutions enable a standardized approach for identifying,
assessing and mitigating risk throughout the software
project lifecycle (39]. However, many authors are
defined risk management, but difficult in practice to
measure the likelihood of impact of risk factors and
determines risk management techniques, especially in
software development projects (40].
Finally, risk management methodology that has five
phases: Risk identification (planning, identification,
prioritization), risk analysis (risk analysis, risk
evaluation), risk treatment, risk controlling, risk</zone>
  <zone label="BODY_HEADING">Copyright il:l 2013 Praise
Worthy Prize S.r./. -All rights reserved</zone>
  <zone label="BODY_CONTENT">International
Review on Computers and Software, Vol. 8. N. J J</zone>
  <zone label="GEN_OTHER">2603</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="GEN_OTHER">Hussin</zone>
  <zone label="BODY_CONTENT">communication and documentation these relied on three
categories techniques as risk qualitative analysis, risk
quantitative analysis and risk mining analysis throughout
the life of a software project to meet the goals.
III.
Top 10 Software
(Design
Risk
Factors
Phase)
We displayed the top software risk factors in software
development project lifecycle (Design phase) that most
common used by researchers when studying the risk in
software projects. However, the list consists of the JO
most serious risks to a project ranked from one to ten,
each risk's status, and the plan for addressing each risk.
These factors need to be addressed and thereafter need
to be controlled. Consequently, we presented 'top-ten'
based on survey Boehm's 10 risk items 1991 on software
risk management[35], the top IO risk items according to
a survey of experienced project managers, Boehm 's l 0
risk items 2002 and Boehrn's 10 risk items 2006-20M,
Miler [4), The Standish Group survey [41], Addison and
Vallabh [26), Addison [42], Khanfar, Elzamly et al. (23],
Elzamly and Hussin [24), Elzamly and Russin (151,
Aloini et al.(43), Han and Huang (44)-[45), Aritua et al.
[46), Schmidt et al. [47], Mark Keil et al. [8), Nakatsu
and Iacovou [48), Chen and Huang [49], Mark Keil et al.
[50), Wallace et al. (51], Swnner [52], Boehem and Ross
(53), Ewusi-Mensah (54), Pare et al. [55), Houston et al.
[16), Lawrence et al.[56), Shafer and Officer [57], hoodat
and Rashidi [58), Jones et al. (59), Jones (60), Taimour
[61 ), and another scholars, researchers in software
engineering to obtain software risk factors and risk
management techniques, these software project risks are
shown in Table I.
IV.
Risk
Management
Techniques
Through reading the existing literature on software
risk management, we listed thirty control factors that are
considered important in reducing the software risk
factors identified; these controls are:
Cl: Using of requirements scrubbing, C2: Stabilizing
requirements and specifications as early as possible, C3:
Assessing cost and scheduling the impact of each change
to requirements and specifications, C4: Develop
prototyping and have the requirements reviewed by the
client, CS: Developing and adhering a software project
plan,C6: Implementing and following a communication
plan, C7: Developing contingency plans to cope with
staffing problems, CS: Assigning responsibilities to team
members and rotate jobs, C9: Have team-building
sessions, CIO: Reviewing and communicating progress
to date and setting objectives for the next phase, C 11:
Dividing the software project into controllable portions,
Cl2: Reusable source code and interface methods,
C13:Reusable test plans and test cases, Cl4: Reusable
database and data mining structures, Cl5: Reusable user
documents early, Cl6: Implementing/Utilizing
automated version control tools, C 17: Implement/ utilize
benchmarking and tools of technical analysis, CI 8:
Creating and analyzing process by simulation and
modeling, C 19: Provide scenarios methods and using of
the reference checking, C20: Involving management
during the entire software project lifecycle,
C21 :Including formal and periodic risk assessment,
C22:Utilizing change control board and exercise quality
change control practices, C23: Educating users on the
impact of changes during the software project, C24:
Ensuring that quality-factor deliverables and task
analysis, C25: Avoiding having too many new functions
on software projects, C26: Incremental
development(deferring changes to later increments),
C27: Combining internal evaluations by external
reviews, C28: Maintain proper documentation of each
individual's work, C29: Provide training in the new
technology and organize domain knowledge training,
C30: Participating users during the entire software
project lifecycle. The literature review revealed the
following question: Do experienced project managers
control software project risk factors by using the controls
identified in this paper? To answer this question, the
following objectives for the empirical work have been set
forth: Identify the risk factors of software projects in the
Palestinian software development organizations, to rank
the software risk factors according to their importance,
severity and occurrence frequency based on data source,
to identify the activities performed by software project
to manage the software project risks which
managers
identified.
TABLE I
ILLUSTRATE TOP TEN SOFTWAAÂ£ RISK FACTORS IN SOFTWARE PROJECT LIFECYCLE (DESIGPNi-!ASEBA)SEO ON RESEARCHERS
Dlmenslon No Software risk facton Frequency
l Introduction of new technology 5
2 Developing the wrong software functions and properties s
3 Developing the wrong user interface 4
4 Insufficient procedures to ensure security, integrity and availability of the database 4
s Lack of integrity/consistency 4
6 Lack of architecture, performance, quality software project 3
7 Absence of quality architectural and design documents 3
8 Failure to redesign and design (blueprints) software processes 2
9 Lack of effective software project team integration between clients, I
tbe supplier team and the supply chain
10 Misalignment of software project with local practices and processes I
Total fre uenc 32
Copyright Â© 2013 Praise
Worthy Prize S.r.l. -All rights reserved
International
Review on Computers and Software, Vol. 8, N I I</zone>
  <zone label="GEN_OTHER">2604</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="GEN_OTHER">Hussin</zone>
  <zone label="BODY_CONTENT">V.</zone>
  <zone label="BODY_HEADING">Empirical
Strategy</zone>
  <zone label="BODY_CONTENT">Data collection was achieved through the use of a
structured questionnaire and historical data for assist in
estimating the quality of software through determine
risks that were common to the majority of software
projects in the analyzed software companies. Top ten
software risk factors and thirty control factors were
presented to respondents.
The method of sample selection referred to as
'snowball' and distribution personal regular sampling
was used. This procedure is appropriate when members
of homogeneous groups (such as software project
managers, IT managers) are difficult to locate.
The seventy six software project managers have
participated in this study. The project managers that
participated in this survey are coming from specific
mainly software project manager m software
development organizations.
?espoodentwsere presented with various questions,
which used scalesl-7. For presentation purposes in th1's
paper and for effectiveness, the point scale as the
following: For choices, being headed 'unimportant' equal
one and 'extremely important' equal seven. Similarly,
seven frequency categories were scaled into 'never'
equal one and 'always' equal seven. All questions in
software risk factors were measured on a seven-point
Likert scale from unimportant to extremely important
and software control factors were measured on a sevenpoint
Likert scale from never to always.
Therefore, the more extreme categories were
combined in a way such that seven-point scale has been
reduced to five-point scale as the following: A category
called 'somewhat important' was created, combining the
two ratings very slightly important' and 'slightly
important'. Similarly, a category called 'very important'
combined the two ratings 'very important' and
'extremely important'. Similarly, seven frequency
categories were re-scaled into five sub-categories for
presentation purposes. 'rarely' combined the two ratings
'rather seldom' and 'seldom'. 'never', 'Sometimes' and
'often' was unchanged, while 'most of the time' '
combined the two ratings 'usually' and 'always'.
However to describe "software Development
Company in Palestine" that have in-house development
software and supplier of software for local or
international market, we depended on Palestinian
Information Technology Association {PITA) Members'
webpage at PITA's website [PITA 2012www.pita.ps/),
Palestinian investment promotion agency (PIPA 2012
http://www.pipa.gov.ps/) to select top IT manager and
software project managers. In order to find the relation
among risks that the software projects confronts and the
counter measures that should be done to reduce risks '
many researchers used different statistical methods.
Io this thesis, we used correlation analysis, fuzzy
multiple/simple regression analysis techniques with
fuzzy concepts by using statistical package for the Social
Science (SPSS) for Manipulating and analyzing the data
set, MATLAB 7.12.0 (R201 la), wolfram mathematic
9.0, excel 2010 and online equation
(http://www.nurnberempire.com/equatioosolver.php
18/2/2013).
solver
on</zone>
  <zone label="BODY_HEADING">Correlation analysis:</zone>
  <zone label="BODY_CONTENT">Clearly, the preceding analysis states that there are
correlations between determining variables besides
correlation between risk factors and all determining
control factors [50). However, the equation of
Correlation Coefficient is the following as [51 J . [52):
r =
n[L(XiÂ·Yi)]-CLx;)(LYi)
n(Lx/)-(Lx;)2]
[n(Ivl)-(Iv;/J
(I)</zone>
  <zone label="BODY_HEADING">Regression analysis model:</zone>
  <zone label="BODY_CONTENT">Regression modeling is one
statistical modeling technique
variable
(dependent)
(independent) variables
is dependent variable
independent variables. A linear
and many independent variables
may be expressed as:
of the most
as a
(52]. Indeed, software
while control
widely used
for fitting a response
function of predictor
risk factor
factors
are
equation between one
(multiple regression)
where bo. bi, b2 , . and b; are constants; x1, x2, â¢â¢ and x;
are the independent variables, and y is the dependent
variable. The values of b0, b1, b2 , â¢â¢ and b; of the
multiple regression equation may be obtained solving the
next linear equations system (52].
Regression Mode! with Fuzzy Concepts:
Fuzzy regression analysis is an extension of the
classical regression analysis in which some elements of
the models are represented by fuzzy numbers (62].
Additionally, mining algorithms usually assume that
the input data is precise and clean, which is unrealistic in
practical situations (63].
On the other words, fuzzy multiple regression model
in which response variable is fuzzy variable and part of
the covariates are crisp variables [64). Therefore, fuzzy
regression methods have considerably they are helpful or
widened the field of application of classical regression
methods in such a way that in determining regression
relations from fuzzy initial data, which can be either
quantitative and qualitative [65]. Also the same authors
explained, when one or some data points are greatly
influenced by random factors, there must be a difference
between the result gained and the actual values. At that
time, the classical regression analysis is not applicable.
Although real data tends to be imprecise, no previous
research has ever developed mining algorithms to find</zone>
  <zone label="BODY_HEADING">Copyright O 201 J Praise
Worlhy Prize S.r.l .â¢ All rights reserved</zone>
  <zone label="BODY_CONTENT">International
Review on Computers and Software. Vol. 8. N. / I</zone>
  <zone label="GEN_OTHER">2605</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly. Burairah</zone>
  <zone label="GEN_OTHER">Hussin</zone>
  <zone label="BODY_CONTENT">U1=
1
?e
a...;2,r
here, y express the mean value of random variables.
Obviously, the coefficient R2 describe the percentage
.2. .-..!.(Yi-Âµ(3))2 of variability and the value is between O and J; when an
a R2 is close to I, it indicates that this model can explain
variability in the response to the predictive variables, so
called there is a strong relationship between the
independent and dependent variables.</zone>
  <zone label="BODY_HEADING">According to this group</zone>
  <zone label="BODY_CONTENT">obtain the values of variables
gained by:
of equations, first we can
b1,b2, .. bk, and finally b0 is</zone>
  <zone label="BODY_HEADING">Coefficient of Determination:</zone>
  <zone label="BODY_CONTENT">Coefficient of determination is used to assess the
quality of estimation models and expressed by R2. The
coefficient R2calculated by (65):
(5)
(6)
Importance of risk/actors in Design phase:
All respondents indicated that the risk of "introduction
of new technology" was the highest risk factors and
important.
In fact, all risk factors were important; aggregating the
responses resulted in the following ranking of the
importance of the listed risks (in order of importance):
Risk!, Risk 2, Risk 4, Risk 5, Risk 7, Risk 8, Risk 3,
Risk 6, Risk 10, and Risk 9.
TABLEll
MEAN SCORE FOR EACH RISK FACTOR DESIGN PHASE
IUlk
t\
r2
r4
r5
r7
r8
r3
r6
rlO
r9
Total
N
76
76
76
76
76
76
76
76
76
76
Mnn
3.829
3.803
3.737
3.711
3.645
3.632
3.632
3.605
3.592
3.566
3.675
Std. De&lt;vlaffoll
0.737
0.633
0.772
0.708
0.725
0.709
0.69
0.784
0.615
0.736
0.451
76.579
76.053
74.737
74.211
72.895
72.632
72.632
72.105
71.842
71.316
73.5
Ranking of importance of risk factors for project
managers' experience:
As we see the results in the table show that most of the
risks are important the overall ranking of importance of
each risk factor for the three categories of project
managers' experience.
knowledge directly from imprecise data (63]. However,
identifies the various data types that may appear in a
questionnaire.
Then, we introduce the questionnaire data mining
problem and define the rule patterns that can be mined
from questionnaire data. A unified approach is developed
based on fuzzy techniques so that all different data types
can be handled in a uniform manner (66]. Therefore, in
order to discover rules from a questionnaire dataset, we
need a brand new approach that can deal with different
data types occurring (66].
Therefore the same authors explained all data types
could be represented and operated from fuzzy points of
view.
Furthermore, we must extend the crisp association
rules to fuzzy association rules from questionnaire data.
Fuzzy Concepts with Membership Function:
Fuzzy concepts help us to find the deviation
data from fitness equation, so we define
distribution membership function as follow
of each
a norm_gl
(67):
where Âµ is average of sample points and a is square root
of variance math. If we add fuzzy domain to regression
method, the effect of discrete data points on the fitness
result will be reduced and the effect of concentrated data
points on the fitness result will be enhanced.
Indeed, a membership function is a curve that defines
how each point in the input space is mapped to a
membership value (or degree of membership) between 0
and 1 (62].
Specifically, the simplest membership functions are
formed using straight lines such as triangular
membership function (specified by 3 parameters) and
trapezoidal membership function (50]-[56)Â· [57).</zone>
  <zone label="BODY_HEADING">Fuzzy Parameters:</zone>
  <zone label="BODY_CONTENT">fuzzy parameters
A group of equations to obtain
are provided as [53]-(58]:
here:
and:
sl !bl+ s12b2 + . + slkbk = sly
s21 bl +s22b2+
s31 bl +s32b2+
s41bl
+s42b2+
s51 bl +s52b2+
+s2kbk
+s3kbk
=s2y
=s3y
+s4kbk=s4y
+s5kbk=s5y
ski bl +sk2b2+
.
+skkbk e sky
the
(4)</zone>
  <zone label="GEN_OTHER">2606</zone>
  <zone label="BODY_HEADING">Copyright irJ 2013 Praise
Worthy Prize S.r.l. â¢ All rigltt.sreserved</zone>
  <zone label="BODY_CONTENT">International
Review on Comput?rs and Software. Vol. 8. N. I I
..._
15,
Â·?
Q
Esperitnce
Wxean
rt
r2
rlO
r8
r7
r4
r3
r5
r9
r6
E1pn1nce
6-llynn
r4
r2
rt
r3
r6
r5
r9
rS
r7
rlO
E1perlnct
&gt;JOyean
rt
r2
r5
r7
r6
r8
r4
rlO
r9
r3
Frequency of occurrence
Table rv shows the
for each control factor.
that most of the controls
often.
mean
The
of controls:
and the standard
results
are
used
deviation
most
of this paper show
of the time and
TABLE IV
THf. MEAN SCORE FOR EACH C01'n'ROL FACTOR
Control
Std. Dtttatloâ¢
%Dtrat11
0.803
0.907
0.668
0.755
0.7
0.612
0.767
0.718
0.653
0.741
0.786
0.726
0.726
0.718
0.639
0.736
0.728
0.756
0.621
0.756
0.683
0.721
0.693
0.841
0.739
0.757
0.783
0.66
0.665
0.754
88.15789
87.36842
83.68421
83.42105
83.42105
83.15789
83.15789
82.63158
82.36842
82.10526
81.84211
81.57895
81.57895
81.31579
81.31579
81.31579
81.05263
80.78947
80.78947
80.78947
80.26316
80.26316
80
79.73684
79.73684
79.73684
79.47368
78.68421
77.89474
77.36842</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="BODY_CONTENT">Hussin
TABLE III
TH! OvtkALL R1$X R.A.NKJNOOF EACH RISK FACTOR
TABLEV
OVERALL CONTROL FACTOR RANKING
Rbk
RI
R2
R3
R4
RS
R6
R7
RS
R9
R 10
c29
c30
c20
c27
c21
cl9
c28
c25
c26
c23
c22
cl8
clO
c17
c24
c8
cs
cl 1
cl5
c9
cl4
c7
cl6
cl2
c6
c4
c3
c2
cl
cl3
Mean
4.408
4.368
4.184
4.171
4.171
4.158
4.158
4.132
4.118
4.105
4.092
4.079
4.079
4.066
4.066
4.066
4.053
4.039
4.039
4.039
4.013
4.013
4
3.987
3.987
3.987
3.974
3.934
3.895
3.868
Coatnl
Cl
C2
CJ
C4
cs
C6
C7
C8
C9
ClO
Cit
Cl2
Cl3
Cl4
C15
Cl6
Cl7
Cl8
Cl9
C20
C21
C22
C23
C24
C25
C26
C27
C28
C29
CJO
t:1pmeoce
WJ:Nn
cl9
c30
cl7
cl8
c28
cl6
c27
cl9
c20
c26
c8
c2S
c23
c21
clS
c24
c22
c9
c7
cJJ
c14
cl 1
cs
c4
c3
cl2
clO
c6
cl
c2
!JperieDCt
6-IOz:!â¢n
c30
cJO
c29
c22
c20
c21
c25
c27
cl9
cs
clS
c6
c28
c26
c9
c8
cl I
c4
c24
cl4
c23
c12
cl8
cl7
c3
c16
c2
cl
c7
cl3
Â£Jperie11tt
&gt;10 2'.!!"
c29
c30
c7
c23
c21
c2
c27
c24
c20
cl I
c28
c26
c3
c6
cl9
cl2
clO
cS
c25
cl4
cl
c9
c22
c4
cl8
clS
cl3
c8
cl7
cl6
Relationships between
Regression technique
determine whether there
between control factors
risks
and
control
variables:
was performed on the data to
were significant relationships
and risk factors. These tests were
performed using fuzzy regression analysis
compare the controls to each of the risk
determine effective in
factor.
if they are mitigating
occurrence of each risk Relationships between
risks and controls, which were significant and
insignificant, any control is no significant, we are not
reported according to the fuzzy risk model.
modelling, to
factors
to
the
Rl: Risk of
Compared to Controls.
'Introduction
of
New
Technology'
ILLUSTRATE
TABLEVl
THE VALUE OP CORRELATION
Cl C2 Cl C4 cs
.215â¢ . 288Â· .513 . .346 . _347â¢â¢
Cl C9 CIO CII CIS
.256Â· .343Â·Â· .331Â·Â· .305 . .234Â·
â¢ CO&lt;Tclaiion is signifi=t â¢t the O.OS level (2-tailc&lt;l.)
. Correlation is signilicant at the 0.01 level (2-t:lilcd).
C6
.304Â·Â·
C23
.233Â·
C7
,)04â¢â¢
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among controls 1, 2, 3, 4, 5, 6,
7, 8, 9, I 0, 11, IS, 23 and risk I. Also control 3 has an
impact on the risk I. In addition, the results show that the
control 3 has a positive impact value of 0.513 and the
value of adjusted R2 is 0.066.
This interprets as a percentage of 6.6 % from the
dependent variable of risk 1.
The overall ranking of importance of each control
factor for the three categories of project managers'
experience. Shows that the controls (29, 30, 17, 18, 28,
16, 27, 19, 20 ,26 ,26 ,8 ,25 ,23 ,21 ,15 ,24) are the most
frequently used by the least experienced (2-5 years)
project managers, whereas the controls (22, 9, 7, 13, 14,
11, 5, 4, 3, 12) are used often and sometimes by them.
Also the controls
(30, 10, 29, 22, 20, 21, 25, 27, 19, 5,
IS, 6, 28, 26, 9, 8) are the most frequently used by the
experienced (6-10 years) project managers, whereas
remained the controls are used often by them. Also all
the controls are the most frequently used by the most
experienced (10 and above years) project managers.</zone>
  <zone label="BODY_HEADING">Copyright O 2013 Praise
Worthy Prize
S.r.l. -All rights reserved</zone>
  <zone label="BODY_CONTENT">International
Review 011 Compulers and Software, Vol. 8. N I I</zone>
  <zone label="GEN_OTHER">2607</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="GEN_OTHER">Hussin</zone>
  <zone label="BODY_CONTENT">According to the fuzzy concepts in multiple regression
analysis to produce fuzzy multiple regression model by
solving these equations, the final fuzzy model:
fuzzy Risk I =3.610150317+0.25294464JxC3
(7)
R2: Risk of 'Developing the Wrong Software Functions
and Properties' Compared to Controls.
TABLE VII
ILLUSTRATE TuE VALUE OF CORRELATION
C4 Cl9 C28
.276Â· .249â¢ .2s2â¢
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among control 4, 19, 28 and
risk 2. Also the control 4 has an impact on the risk 2.
In addition, the results show that the control 4 has
positive impact value of 0.276, and the value of R2 js
0.0356. This interprets as a percentage of 3.56 % from
the dependent variable of risk 2. According to the fuzzy
concepts in multiple regression analysis to produce fuzzy
multiple regression model by solving these equations, the
final fuzzy model:
Fuzzy Risk2 = 4.158787224
+ 0.136910247
xC4
(8)
RJ: Risk of 'Developing The Wrong User Interface'
Compared to Controls.
The result show that the significant value is greater
than the assumed value at the a = 0.05 level of
significance, so there is no relation among controls and
risk 3, We not reported controls that have not a relation
(no significant). Also we found the model is not fit.
R4: Risk of 'Insufficient Procedures
Security, Integrity and Availability of The
Compared to Controls.
to
Ensure
Database'
Cl
.274'
?3
.256'
JLLUSTUTE
C4
161Â·
?4
.213â¢
TABLEVIll
nm. VALtruOFCOM.a.ATION
Cl C9 CIO
.JOOâ¢â¢ ..22Sâ¢â¢
s - ??-Â·
.2s1â¢ .263Â·
Cl9
.33S .
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among controls 2, 4, 8, 9, 10,
19, 23, 24, 25, 26, 28 and risk 4. We described the
controls 19 and 24 have an impact on the risk 4.
In addition, the results show that controls 19, and 24
have a positive impact value of 0.335 and 0.273
respectively, also a multiple correlation value is 0.335,
and the value of R2 is 0.0565. This interprets as a
percentage of 5.65 % from the dependent variable of risk
4. According to the fuzzy concepts in multiple regression
analysis to produce fuzzy multiple regression model by
solving these equations, the final fuzzy model:
Fuzzy Risk4 = 2.892838896+
+ 0.223693596xCl9
+0.139313479xC24
(9)
RS: Risk of 'lack
to Controls.
of Integrity/Consistency' Compared
Cl
.246Â·
C9
.333 .
cl4
.387Â·Â·
TABLE IX
ILLUSTRATE THE VALUE OF CORRELATION
Cl Cl C4 C7
.Jnâ¢â¢ J89 . .26'7â¢ .2,14â¢
Clt CIJ cJf ell
.258Â· .226â¢ . 22sÂ· .235â¢
t15 c1, d7 ell
. 233â¢ .373 . .398Â·Â· .279Â·
Cl
.269Â·
cl3
.384 .
c29
.240Â·
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among controls 1, 2, 3, 4, 7, 8,
9, IO, 13, 19, 21, 23, 24, 25, 26, 27, 28, 29, and risk 5.
Also controls 24 and 27 have an impact on the risk 5.
In addition, the results show that the control 24, and 27
have a positive impact value of 0.387 and 0.398
respectively, also a multiple correlation value is 0.480,
and the value of R2 is 0.0730. This interprets as a
percentage of 7.30 % from the dependent variable of risk
5. According to the fuzzy concepts in multiple regression
analysis to produce fuzzy multiple regression model by
solving these equations, the final fuzzy model:
FuzzyRisk5=3.245067322+
0.19878942
xC24
+
+ 0.099091138xC27
R6: Risk of 'Lack of Architecture, Performance,
Quality Software Project' Compared to Controls.
---;.?
.324â¢â¢
c2J
.121Â·Â·
TABLEX
ILLUSTRATE iTlii, Â·VALUE 0.â¢CORREIA ;-,.:;;.Â·
c3 N clO
JJI0 J;?8... .2,?8â¢ .312..
cl4 cl6 ell c19
.)76Â·" .420.. .ll ?.. 140 â¢
ell
.241â¢
clO
.358 .
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among controls J, 2, 3, 4, I 0,
JI, 23, 24, 26, 28, 29, 30 and risk 6. Controls 26 and 30
have an impact on the risk 6. In addition, the results show
that controls 26, and 30 have a positive impact value of
0.420 and 0.358 respectively, also a multiple correlation
value is 0.474, and the value ofR2 is 0.0965.
This interprets as a percentage of 9.65 % from the
dependent variable of risk 6. According to the fuzzy
concepts in multiple regression analysis to produce fuzzy
multiple regression model by solving these equations, the
final fuzzy model:
Fuzzy Risk 6=2.648617968+
+0.273625288
x C26 +0.09512878
J x C30</zone>
  <zone label="BODY_HEADING">R7: Risk of 'Absence</zone>
  <zone label="BODY_CONTENT">Design Documents'
of Quality Architectural
Compared to Controls.
(IO)
and
( 11)
and</zone>
  <zone label="BODY_HEADING">Copyright IC }OJ 3 Praise
Worthy Prize S.r.l. - All righls reserved</zone>
  <zone label="BODY_CONTENT">International
Review on Computers and Software. Vol. 8. N. I I</zone>
  <zone label="GEN_OTHER">2608</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="GEN_OTHER">Hussin</zone>
  <zone label="BODY_CONTENT">Cl
.221..
TABLE XI
ILLUSTR.A TE THE VALUE OF COU.El.A TION
CZ C7 CIO C24
,;ssâ¢â¢ .241 â¢â¢ .2so.. .2s 1â¢â¢
C26
.2s3â¢â¢
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among controls 1, 2, 7, 10, 24,
26 and risk 7. Also controls 2 and 15 have an impact on
the risk 7. lo addition, the results show that a multiple
correlation value is 0.418, and the value ofR2 is 0.027.
This interprets as a percentage of 2.7 % from the
dependent variable of risk 7. According to the fuzzy
concepts in multiple regression analysis to produce fuzzy
multiple regression model by solving these equations, the
final fuzzy model:
Fuzzy Risk7 = 4.293730253
+
+ 0.160303774
xC2-0.0923
l 7336xC15
RB: Risk of 'Failure to
Redesign Software Processes'
Design (Blueprints)
Compared to Controls.
(12)
and
Cl
J 11 â¢â¢
en
.290Â·
TABLE Xll
ILLUTIU TE TIIE V ALUII OF COUF.LJ. TION
Cl C4 C9 Cll
.382Â°0 .379 . .280Â° .288Â·
C24 C27 C2I C29
.315Â°0 .254* .283* .407Â·Â·
ClO
.286Â°
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among controls 2, 3, 4, 9, 10,
20, 21, 24, 27, 28, 29 and risk 8. Also controls 4, 5, 24,
and 29 have an impact on the risk 8.
In addition, the results show that controls 4, 24 aod 29
have a positive impact value of 0.379, 0.315, and 0.407
respectively, also a multiple correlation value is 0.570,
aod the value of R2 is 0.145. This interprets as a
percentage of 14.5 % from the dependent variable of risk
8. According to the fuzzy concepts in multiple regression
analysis to produce fuzzy multiple regression model by
solving these equations, the final fuzzy model:
Fuzzy Risk8= -0.002345077
+ 0.3867xC4
+
+0.0172 x CS+
0.511 x C24 + 0.0002
xC29
(!3)
R9: Risk of 'Lack
Integration Between
The Supply Chain'
of Effective Software Project Team
Clients, The Supplier Team and
Compared to Controls.
C,
.J')6*
CM
J02â¢â¢
TABLE Xlll
IU.USTRAfl! THE VALUE OF COllllLA
Cl6 Cit C10
.2,1 â¢ .2Â·13â¢ .22,â¢
Cl7 CZÂ¥ Cl9
.331 . .2soâ¢ .169*
TION
CJ4
J61"
C30
.257*
C21.J
.llfl*
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among controls 4, 16, 19, 20,
24, 25, 26, 27, 28, 29, 30, and risk 9. Also controls 4, 24
and 27 have an impact on the risk 9. In addition, the
results show that controls 4, 24 and 27 have a positive
impact value of0.276, 0.368 and 0.332 respectively, also
a multiple correlation value is 0.526, and the value of R2
is 0. 117. This interprets as a percentage of 11. 7 % from
the dependent variable of risk 9. According to the fuzzy
concepts in multiple regression analysis to produce fuzzy
multiple regression model by solving these equations, the
final fuzzy model:
Fuzzy Risk 9 = - 0.003997482
- 0.0959 x Cl +
+0.4367xC4
+ 0.5532 x C24 + 0.0003 xC27
(14)
RJO: Risk of 'Misalignment
Local Practices and Processes'
of Software Project with
Compared to Controls.
lLLUS'llv\tt
CJ
.293 .
TABLE XJV
THE YA LUE OF CORRF.LATION
C13 Cl4
.324 . .309*â¢
Tables show that the significant value is less than the
assumed value at the a = 0.05 level of significance, so
there is a positive relation among controls 3, 13, 14 and
risk l 0. Also controls 3 and 13 have an impact on the risk
IO. In addition, the results show that a multiple
correlation value is 0.451, and the value ofR2 is 0.0781.
This interprets as a percentage of 7 .81 % from the
dependent variable of risk 10. According to the fuzzy
concepts in multiple regression analysis to produce fuzzy
multiple regression model by solving these equations, the
final fuzzy model:
Fuzzy Risk JO= 3.709819819951
+
+ 0.164126065xC3-0.088752354
+ O.l 16056172xCl3
xC8+
(15)
Software Risk factors identification checklists and
control factors (risk management techniques):
Table XV shows risk factors identification checklist
with risk software projects based on a questionnaire of
experienced software project managers. He can use the
checklist on software projects to identify and mitigate
risk factors oo lifecycle software projects by risk
management techniques.
VI.
Conclusion
The concern of our paper is the managing risks of
software projects. The results show that all risks in
software projects were important in software project
manager perspective, whereas all controls are used most
of time, and often. Therefore, the software risk factors in
design phase from risk number I, 2, 4, 5, 7, 8, 3, 6, IO, 9
were identified as important, aggregating the responses
resulted in the following ranking of the importance of the
listed risks (in order of importance): Risk I, Risk 2,
Risk4, Risk 5, Risk 7, Risk 8, Risk 3, Risk 6, Risk I 0,
and Risk 9.
CopyrightO 2013 Praise
Worthy Prize S.r.l. - All rights reserved
International
Review on Computers and Software. Vol. 8. N. J J</zone>
  <zone label="GEN_OTHER">2609</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="GEN_OTHER">Hussin</zone>
  <zone label="BODY_CONTENT">TABLE XV
S0FTWAAF. RJSK FACTORS MrTIGATEO BY RJSK M.ANAGEMENTTECHNI
I
2
4
5
6
7
8
9
10
lntroduction
of new technology.
Developing the wrong software functions and properties.
Developing the wrong user interface.
Insufficient procedures to ensure security, integnty and
availability of the database.
Lack of in1egrity/consis1ency.
Lack of architecrure.
project
performance, quality software
Absence
of quality arcbitecrural
and design documents.
Failure 10 design (blueprints) and redesign software
processes.
Lack of effective software project team integration
between clients, the supplier ream and the supply chaiw.
Misalignment of sofrwere
processes.
project with local practices and
The results of this paper show also that most of the top
ten controls are used most of the time. However,
"provide training in the new technology and organize
domain knowledge training" is the highest; aggregating
the responses resulted in the following ranking of the
importance of the listed controls (in order of
importance): C29, C30, C20, C27, C21, Cl9, C28, C25,
C26, and C23. These tests were performed using fuzzy
regression analysis with fuzzy concepts, to compare the
controls to each of the risk factors to determine if they
are effective in mitigating the occurrence of each risk
factor Relationships between risks and controls, which
were significant and insignificant, any control is no
significant, we are not reported.
However, we determined the positive correlation
between risk factors and risk management techniques,
then measure impact risk in software project lifecycle.
We used correlation analysis, fuzzy regression
analysis techniques proposed.
However, we referred the risk management techniques
were mitigated on software risk factors in Table XV.
Through the results, we found out that some control
haven't impact, so the important controls should be
considered by the software development companies in
Palestinian.
ln addition, we cannot obtain historical data form
database until using some techniques. As future work, we
will intend to apply these study results on a real-world
software project to verify the effectiveness of the new
techniques and approach on software project. We can
use more techniques useful to manage software project
risks such as neural network, genetic algorithm, Bayesian
statistics, and so on.
C3: Assening cost and scbeduhng the impact of each change 10
requirements and specifications.
C4: Develop prototyping and have the requirements reviewed
the client.
by
Cl9: Provide scenarios methods a.od usiog of the reference
checking, C24: Ensuring that quality-factor deliverables and task
analysis.
C24: Ensuring that quality-factor deliverables and task analysis,
C27: Cornbioing internal evaluations by external reviews.
C26: Incremental development (deferring changes to later
increments), C30; Participating users during the entire software
project lifccycle.
C2: Stabilizing requirements and specifications as early as
possible, C 15: Reusable user documents early.
C29: Provide traioing in the new tecb.nology and organize
domain knowledge training, C4: Develop prototyping and have
the requirements reviewed by the client, C24: Ensuring that
quality-factor deliverables and task analysis, CS: Developing and
adhering a software project plan.
C24: Ensuring that quality-factor deliverables and task analysis,
C4: Develop prototyping and have the requirements reviewed by
the client, Cl: Using of requirements scrubbing, C27: Combining
internal evaluations by external reviews.
Cl3: Reusable test plans and test cases, C3: Assessing cost and
scheduling the impact of each change to requirements and
specifications, CS: Assigning responsibilities to team members
and rotate 'obs.</zone>
  <zone label="BODY_HEADING">Appendix illustrates</zone>
  <zone label="BODY_CONTENT">in design phase briefly:</zone>
  <zone label="BODY_HEADING">Appendix</zone>
  <zone label="BODY_CONTENT">and
discuses
software risk factors
Risk 01: Introduction of new technology.
Introduction of new technology usually will bring
about a number of training needs. This technology may
be used operationally in such processes as packaging,
manufacturing, quality testing, money transmission,
etc[7 l ). Surely, the required technology may be
previously introduction of a new technology [71]- [72).
Also a shortage of technical know-how and concern is
with the level of expertise (Ewusi-Mensah, 2003).
Consequently, project involved the use of new
technology, high level of technical complexity [43)- (44].
In particular [6]: Caper Jones's Risk, slow technology
transfer and poor technology investments, technical
issues such as complexity and experience [74). Hence
technology illiteracy as being a major issue [40]-[74].
Also new technology being introduced[76). Likewise
Boehrn's Top IO Systems Engineering Risk Items:
Survey 2006-2007 referred to lack of technology
knowledge and technology maturity [77].</zone>
  <zone label="BODY_HEADING">Risk 02: Developing the wrong</zone>
  <zone label="BODY_CONTENT">and properties.
According to [28]-[34],
functions and properties. Also a
software project did an adequate
functionality [78].
software
functions
developing
good
job
the
many
on
wrong
other
software
Risk 03: Developing the wrong user interface.
Suggested by [28)- [34]- [72], developing the
wrong
Copyright O 1013 Praise
WorthyPrize S.r./. -All rights reserved
International
Review on Computers and Software. Vol. 8. N. I I</zone>
  <zone label="GEN_OTHER">2610</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="MET_TYPE">Hussin</zone>
  <zone label="BODY_HEADING">Likewise</zone>
  <zone label="BODY_CONTENT">Boehm's
user
interface.
referred
combined
functions
good many
functionality,
interface[78).
to
user
between
and
user
other
Top
interface
10
2002
mismatch.
In
Software
Risks
addition, they
but
development of the wrong software
interface(l3]. Therefore, explained a
projects did an adequate job software
created every unfriendly user
rusk
04: Insufficient
procedures
to ensure
security,
integrity and availability of the database.
According to(42), insufficient procedures to
security, integrity and availability of the database.
ensure</zone>
  <zone label="BODY_HEADING">Risk
05: Lack
However,</zone>
  <zone label="BODY_CONTENT">Develop
and
processes
standard
associated
that are
processes.
with failure
use
of Integrity/consistency.
integrated project management[79):
an integrated and defined set of
tailored from the of
of
organizations set
the main fact.ors
Also,
is lack
one
to
components(52]. According
degree of integration and
explianed lack of integration
and
processes
processes(80).
are
carried
out
of integration softwa?
(43), referred to low
in some
flexibility. Furthermore,
implementations
in isolation with other</zone>
  <zone label="BODY_HEADING">Risk
06:</zone>
  <zone label="BODY_CONTENT">Lack
of
architecture,
performance,
quality software
Certainly,
Caper Jones's
poor
Risk.
project.
process
and
standard
performance: Provide
quantitative models
processes(79].
software
On the
process
to understand
company structures[6):
other hand, organizational
performance data
the organization's
rusk
07:</zone>
  <zone label="BODY_HEADING">Absence
of</zone>
  <zone label="BODY_CONTENT">quality
architectural
and
design documents.
According to (6): Caper Jones's Risk, lack of reusable
documentation, inadequate system documentation.
Therefore, It is also important to recognize that the lack
of a well-designed and documented process is
characteristic of the initial level of maturity[8 I J.
a
Risk
08: Failure
to redesign
and
design (blueprints)
software
processes.
Develop a correction/recovery
the
design for identified
likelihood
for failures
Caper Jones's
Risk, lack
(43].
design
According
is very
develop to the greatest detail
component of the product.
of the system (81). However [6]:
of reusable designs (blueprints)
to (12), the phrase develop detailed
descriptive of the activity-it means to
possible the design for each
software
strategy
reduces
to ensure
or
delete
that
the
Risk
09:
Lack
of effective
software
project
team
integration between
supply chain.
The project selected
delivery partners,
their requirements
clients, the
supplier team
and
the
exiting suppliers as
the
main
and
did not seek a wider
evaluation
of
from
the
market.</zone>
  <zone label="BODY_HEADING">Although suppliers</zone>
  <zone label="BODY_CONTENT">on technical governance boards were represented, project
delays negatively on impacted working relationships and
there was a lack of communication channels [82].</zone>
  <zone label="BODY_HEADING">Risk
10:</zone>
  <zone label="BODY_CONTENT">Misalignment
of software
project
with
local
work practices despite the measures
the intensity of the risks related
practices and processes.
According to (83], aligning the new system and local
specified previously,
with the usability risk
dimension
remained
because
system
referred
of the
lack
and
local
work
to
initial
misalignment ofCIS
relatively high for most
of consistency between the
practices as mentioned.
Taxonomy of CIS Project
with local practices and processes.
Also (55]
Risks;
sites
new</zone>
  <zone label="BODY_HEADING">Acknowledgements
This
work
Communication
Malaysia Melaka</zone>
  <zone label="BODY_CONTENT">is supported by Faculty of Information
Technology, Universiti
(UTeM), Malaysia.
and</zone>
  <zone label="BODY_HEADING">Tek.nikal</zone>
  <zone label="GEN_REFERENCES">References
( I J S. Masticola, ''A Simple Estimate of tbe Cost of Software Project
Failures and the Breakeven Effectiveness of Project Risk
Management," 1007 First Int. Work. Econ. Softw. Comput., May
2007.
(2) K. Schwalbe, Information Technology Project Managemen),
Sixth. course techoology,ceogage learning, 2010, p. 490.
()) D. McNair, "Controlling risk," Magazine Ubiquity, vol. 2001, no.
January, ACM New York. NY, USA, 01-Jan-2001.
(4) J. Miler, "P H D T HESIS A Method of Software Project Risk
Identification and Analysis Jalcub Miler," GDANSK
UNIVERSITY OF TECHNOLOGY, 2005.
(5) J. Miler and 1. Gorski, "Supporting Team Risk Management in
Software Procurement and Development Projects," in 4rl,
National Conference on Software Engineering, 2002.
(6) C. R. Pandian, Applied software risk management: a guide for
software project managers. Auerbach Publications is an imprinl
of the Taylor&amp; Francis Group, an informs business, 2007, p. 246.
(7) W. Ma, L. Liu, W. Feng, Y. Shan, and F. Peng, "Analyzing
project risks within a cultural and organizational selling," in 2009
!CSE Workshop on leadership and Managemen1 in Software
Architecture, 2009, pp. 6-14.
(8) M. Keil, P. Cule, K. Lyytinen, and R. Schmidt. "Aframework for
Identifying Software: Project Risks," Commun. ACM, vol. 41, no.
11, 1998.
(9) L. Rodriguez-Repisoa, R. Setchib, and J. Salrneronc, "Modelling
IT projects success: Emerging methodologies reviewed,"
Technovation, vol. 27, no. 10, pp. 582-594, Oct. 2007.
[10) HA,. Chen, J. J, Jiang, G. Klein, and J. V. Chen, "Reducing
software requirement perception gaps through coordination
mechanisms," J. Syst. Softw., vol. 82, no. 4, pp. 650?55, Apr.
2009.
(11) J. Hoffer. J. George. and J. Valacich, Modern Systems Analysis
OJ1d Design, 6th ed. Prentice Hall, 2011, p. 575.
(12) J. Taylor, Managing Information Technology Projects: Applying
Project Management Strategies lo Software, Hardware, and
Integration Initiatives, AMACOM O 2004, 2004, p. 274.
(13) J. Sodhi and P. Sodhi, IT Project Management Handbook.
Management Concepts, 200 I. p. 264.
(14) B. Boehm, "Value-based software engineering," ACM SIGSOFT
Soflw. Eng. Notes. vol. 28, no. 2. p. 3, Mar. 2003.
(15) A. Ezamly and B. Hussin, "Estimating Quality-Affecting Risks in
Software Projects," Int. Manag. Rev . Am. Sch. Press. vol. 7. no.
2. pp. 66-83. 2011.
(16) 0. Houston, G. Mackulak, and J. Collofello, "Stochastic
simulation of risk factor potential effects for software
Copyright O 20/ J Praise
Worthy Prize S.r.l. â¢ All rights reserved</zone>
  <zone label="BODY_CONTENT">International
Review
on Computers and Software, Vol. 8. N. I I
261 I</zone>
  <zone label="MET_BIB_INFO">Abdelrafe Elzamly, Burairah</zone>
  <zone label="BODY_CONTENT">Hussin</zone>
  <zone label="GEN_REFERENCES">development risk management," J. Syst. Softw., vol. 59, no. 3. pp.
247-257, Dec. 2001.
(17) E. W. T. Ngai and F. K. T. Wat, "Fuzzy decision support system
for risk analysis in e-commerce development," Decis. Suppon
Sys:.â¢ vol. 40, no. 2, pp. 235-255, Aug. 2005.
( 18) J. Miler and J. Gorski. "Implementing risk management in
software projects," in Jrd National Conference on Software
Engineering, 2001.
( 19] P. Savolainen, J. Ahonen, and I. Richardson, "Software
development project success aod failure from the supplier ' s
perspective: A systematic literature review," Int. J. Proj. Monog.
p. 12, 2011.
(20) J. Miler and J. G6rski, "Identifying Software Project Risks with
the Process Model," io proc. of I 7rh Intemationol Conference
"Software &amp; Systems Engineering ond their Applications, " 2004,
no. 4, pp. 1-9.
(2 I) J. Liu, H.-G. Chen, C. Chen, and T. Sheu, "Relationships among
imerpersonal confhet, requirements uncertainty, and software
project performance," Int. J. Proj. Manag., vol. 29, no. 5, pp.
541-556, Jun. 2011.
(22] Z. Begum, M. S. A. Khan, M. Hafiz, M. S. Islam, and M.
Shoyaib, "Sofware Development Standard and Software
Engineering Practice: A Case Study of Bangladesh," J.
Bangladesh A cad. Sct., vol. 32, no. 2, pp. 131-139, May 2008.
(23) K. Khanfar, A. Elzamly. W. Al-Ahmad. E. El-Qawasmch, !&gt;Â·
Alsamara, and S. Abu lei I, "Managing Software Project Risks with
the Chi-Square Technique." Manage. Rev., vol. 4, no. 2, pp. IS29,
2008.
(24) A. Elzamly and 8. Hussin, "Managing Software Project Risks
with Proposed Regression Model Techniques and Effect Size
Technique," Int. Rev. Comput. Softw., vol. 6, no. 2 March, pp.
250-263, 2011.
(25) A. Elzamly and 8. Hussin, ''Managing Software Project Risks (
Implementation Phase ) with Proposed Stepwise Regression
Analysis Techniques," 1111.J. Inf. Technol., vol. I, no. 4, 2013.
(26) T. Addison and S. Vallabh, "Controlling Software Projccl Risks an
Empirical Study of Methods used by Experienced Projec!
Managers.," in Proceedings ofSAICSIT, 2002, pp. 128- 140.
(27) G. 8Gy0k6zkan and D. Ruan, "Chequer integral based
aggregation approach lo software development risk assessment,"
Inf Sci. (Ny)., vol. 180, no. 3, pp. 44 l-4S I, Feb. 2010.
(28) R. Dash and R. Dash, "Risk Asscs.sment Techniques for Software
Development," Eur. J. Sci. Res., vol. 42, no. 4, pp. 629-636,
2010.
(29) D. Galorath and M. Evans, Software Sizing. Esnmation, and Rislc
Management. Auerbach Publications, 2006, p. 541.
(30) X. Lu and Q. Ma, "Risk analysis in software development project
with owners and contractors," IEEE Jnr. Eng. Manag. Conj., vol.
4, pp. 789-793, 2004.
(31) T. Merna and F. AI-Thani, Corporate Risk Management and
Optimal Hedging Disclosure, Second, John Wiley and Sons,
2008.
(32) T. Aven, Risk Analysis: Assessing Uncertainties Beyond Expected
Values and Probabilities. John Wiley &amp; Sons , Inc., 2008, p. 204.
(33] M. Fan, N.-P. Lin, and C. Sheu, "Choosing a project riskhandling
stralegy: An analytical model," lnr. J. Prod. Econ., vol.
112, oo. 2, pp. 700-713. Apr. 2008.
{34) J. Hallows, Information Systems Project Management: How to
Deliver Function and Value in Information TechnologyProjects,
Secondi. AMACOM, 2005, p. 304.
[35) B. Boehm, "Software Risk Management: Principles and
Practices," Management, oo. January, 1991.
(36] J. Deng and Y. Bian, "Constructing a Risk Maoagemenl
Mechanism Model of ERP Project Implementation," in 1008
International Conference an Informauon Management,
Innovation Management and Industrial Engineering, 2008, pp.
72-77.
(37] J. Walcwski, "International Project Risk Assessment: Methods ,
Procedures , and Critical Factors," 2003.
[38) John Horeb, Practical Guide ta Software Q11alityManagement.
ARTECH HOUSE, INC., 2003, p. 286.
(39) Oracle, "A Standardized Approach to Risk Improves Project
Outcomes and Profitability," 2010.
(40) P. Bannerman, "Risk and risk management in software projects:
J. Sys,. Saftw. vol. 81, no.</zone>
  <zone label="BODY_CONTENT">12, pp. 2118-2133,
A reassessment,"
Dec. 2008.
[41) T. S. G. 1995
The Standish
with</zone>
  <zone label="GEN_REFERENCES">CHAOS. "THE STANDISH GROUP REPORT
Group 1995. Reprinted here for sole academic
purposes wrincn permission from The Standish Group.
CHAOS," 191112011, 1995 .
(42) T. Addison, "E-commerce project development risksO: evidence
from a Delphi survey I;Â· Jnr. J. inf. Manage., vol. 23, no. June
2001, pp. 25-40, 2003.
(43) D. Aloini, R. Ouh:nin, and V. MiniMo, "Risk management in
ERP project introduclion: Review of the literarure." Inf Manag.,
vol. 44, no. 6, pp. 547-567, Sep. 2007.
(44) W.-M. Han and S.-J. Huang, "An empirical analysis of risk
componcnu and performance on software projecis," J. Sysr.
Softw., vol. 80, no. I, pp. 42-50, Jan. 2007.
(45) S.-J. Huang and W.-M. Han, "Exploring the relationship bcrwccn
software project duration and risk exposure: A clus1er analysis,"
/11f.Mauag., vol. 45, no. 3, pp. 175-182, Apr. 2008.
(46) 8. Arirua, N. J. Smith, and O. Bower, ' What risks arc common to
or amplified in programmes: Evidence from U1&lt; public sector
infru1ructure schemes," lnr. J. Praj. Manag., vol. 29, no. 3, pp.
303-312, Jun. 2010.
[47) R. 0. Y. Schmidt, K. Lyytinen. M. Keil, and P. Cule, "Identifying
Software Project Risks: An International Delphi Study." J. tjf
Manag. Inf Sys/. /Spring, vol. 17, no. 4, pp. S-36, 2001.
(48) R. Naka1su and C. lae-0vou, "A e-0mpara1ivesrudy of impÂ°"ant
risk fac1ors involved in offshore and domeslic oulsourcing of
software dcvclopmcnl projecLS:A two-panel Delphi srudy," Inf.
Manag . vol. 46, no. I, pp. S7-68, Jan. 2009.
(49) J.-C. Chen and S.-J. Huang, "An empirical analysis of the imp3et
of software development problem factors on software
maintainability," J. Sysr. Saftw., vol. 82, no. 6. pp. 981-992, Jun.
2009.
[SO) M. Keil, A. Tiwana, and A. Bush, "Reconciling user and project
manager perceptions of IT projecl risk: a Delphi srudy I," Inf.
Sysl. J., no. April 1999, pp. 103-119, 2002.
(5 I) L. Wallace, M. Keil, and A. Rai, "How Software Project Risk
AfTccts Projecl Performance: An [nvcsligalion of the Dimensions
of Risk and an Exploratory Model," Decis. Sci., vol. 35, no. 2,
2004.
(52) M. Sumner, "Risk fac1ors in cntcrprise-widc/ERP projects,?J. Inf
Technol., vol. 15, no. 4, pp. 317-327, Dec. 2000.
(53) B. Boehm and R. Ross, "The-0ry-W Software Project
Management: Princiolcs and Examples," vol. IS, no. 7, pp. 902916,
1989.
(54) Kwclru Ewusi-Mensah, Software Development Failures: Anatomy
of Abandoned Projuts. The MIT Press, 2003, p. 276.
(55) G. Pare, C. Sie-0nc, M. Jaana, and D. Girouard, "Priori1izing
Clinical lnforma1ion Sys1cm Projccl Risk Factors '; A Delphi
Study," in Proceedings of the 41st Hawaii International
Confuence an Sysrem Sciences-, 2008, pp. 1-10.
(56) 8. Lawrence, K. Wicgcrs, and C. Eben, "The Top Risks of
Requirements Engineering," 200 I.
(57) D. Shafer and C. Officer, "Software Rislc: Wby must we keep
learning from experience? Where does Risk Occur in DP
So? Development?," in DYNAMIC POSITIONING
CONFER.ENCE, 2004, pp. 1-19.
(58) H. Hood.at and H. Rashidi, "Classificalion and Analysis of Risks
in Software Engineering," Eng. Technol., vol. 56, pp. 446-452,
2009.
(59) C. Jones, G. Glen, G. Anna, and 0. Miller, "Stra1egies for
improving sys1erru development project success," lswes Inf
Syst., vol. XI, DO. I, pp. 164-173, 2010.
[60) C. Jones, Applied Software Measuremenr Global Analysis of
Productivity and Quality, Third Edi!., no. Third Edition.
McGraw-Hill Companies., 2008, p. 662.
(61) A. Taimour, "Why IT Projecls Fail," 2005.
(62) M. falctor, K. Kritilcal, aod K.. Terjadinya, "Determining lhe
Cri1ical Sucass Facto? of Oral Caocer Susceptibility Prediction
in Malaysia Using Fuzzy Models," Sains Malaysiana, vol. 41, no.
5, pp. 633?40, 2012.
[63) Y.-L. Chen aod C.-H. Weog, "Mining association rules from
imprecise ordinal data," Fuzzy Sets SysL, vol. 159, DO. 4, pp. 460474,
Feb. 2008.
Copyright O 101 J Praise</zone>
  <zone label="BODY_HEADING">Worthy Prize</zone>
  <zone label="GEN_REFERENCES">S.r.l. - All rights reserved</zone>
  <zone label="BODY_CONTENT">lnternatianal</zone>
  <zone label="GEN_REFERENCES">Review on Computers ond Software, Vol. 8. N. I I</zone>
  <zone label="GEN_OTHER">2612</zone>
  <zone label="BODY_HEADING">Abde/rafe
Elzamly, Burairah</zone>
  <zone label="BODY_CONTENT">Hussin</zone>
  <zone label="GEN_REFERENCES">[64] J.-G. Lin, Q.-Y. Zhuang, and C. Huang, "Fuzzy Statistical
Analysis of Multiple Regression with Crisp and Fuzzy Covariates
and Applications in Analyzing Economic Data of China
important," Comput. Econ., vol. 39, no. I, pp. 29-49, 2012.
(65) X. Gu, G. Song, and L. Xiao, "Design of a Fuzzy Decisionmaking
Model and Its Application to Software Functional Size
Measurement," in nternational Conference on Computational
Intelligence for Modelling Control and Automation.and
International Conference on Intelligent Agents, Web Technologies
and Internet Commerce (CJMCA-IA WTIC'06), 2006.
[66] Y.-L. Chen and C.-H. Weng, "Mining fuzzy association rules
from questionnaire data," Knowledge-Based Syst., vol. 22, no. I,
pp. 46-56, Jan. 2009.
(67) V. Marni and M. A. Seyycdi, "Fuzzy Multiple Regression Model
for Estimating Software Development Time," International
Journal of Engineering Business Management, vol. I, no. 2, pp.
31-34, 2009.
[68) K. Aali, M. Parsinejad, and B. Rahmani, "Estimation of
Saturation Percentage of Soil Using Multiple Regression .ANN.
and ANFIS Techniques," Comput. Inf Sci., vol. 2, no. 3, pp. 127136,
2009.
[69] W. lr.Wahidin, "Chapt3 Membership Function," in in knowledge
based systems, 2009.
(70) C. Popescu and M. Giuclca, "A MODEL OF MULTIPLE
LINEAR REGRESSION," Publ. house Rom. Acad., vol. 8, no..,2,
pp. 1-8, 2007.
(71J R. Buckley and J. Caple, Tlie Theory &amp;cPractice of Training, 6th
editio. kogan page London and Pbitadelphia, 2009, p. 369.
(72] T. Clancy, "The standish group report." 1995.
(73J D. Surie, "Evaluation and Integration of Risk Management in
CMMT and ISO I IEC 15504," in 8th Student Conference In
Computing Science, Umed, Sweden, May 28, 2004, 2004, p. 14.
(74] E. Bcnnatan, Catastrophe Disentanglement: Gelling Software
Projects Back on Track. Addison Wesley Professional, 2006, p.
288.
[75) B. Boehm and V. Basili, "Software Defect Reduction Top JO
List," 2001.
(76) A. Maglyas, "EVALUATING THE SUCCESS OF SOFTWARE
DEVELOPMENT PROJECfS fN RUSS[A , UKRATNE , AND
BELARUS," LAPPEENRANTA UNIVERSITY OF
TECHNOLOGY FACULTY OF TECHNOLOGY
MANAGEMENT, 2009.
[77) B. Boehm, "USC CSSE Workshop Overview: Top 3 SoftwareIntensive
Systems Risk hems," 2007.
[78) R.. Selby, Software Engineering: Barry W Boehm 's lifetime
Contributions to Software Development, Management, and
Research (Practitioners}, I edition. Wiley-IEEE Computer
Society, 2007, p. 832.
[79] R. Fairley, MANAGING AND LEADING SOFTWARE
PROJECTS. A JOHN WILEY &amp; SONS, INC., 2009, p. 492.
[80) C. Rudd, Planning to Implement Service Management ( PISM ),
First., no. March. TSO (The stationery office), 2010, p. 305.
[81) A. Ahmed, Software Project Management: A Process-Driven
Approach, I edition. Auerbach Publications, 2011, p. 456.
[82) G. Britain, Public Accounts Committee The National Offender
Management Information System, no. June. Parliament: House of
Commons: Committee of Public, 2009, p. 41.
[83) K. Yogcsan, P. Breit, and M. Gibbons, Handbook of Digital
Homecare Series in Biomedical Engineering. Springer-Verlag
Berlin Heidelberg, 2009, p, 366.</zone>
  <zone label="BODY_HEADING">Authors'</zone>
  <zone label="BODY_CONTENT">information
,.2UniversitiTeknikal</zone>
  <zone label="BODY_HEADING">Malaysia Melaka (UTeM). Malaysia.</zone>
  <zone label="BODY_CONTENT">d1Jmly'ii "â¢hw ,:,â¢m
'Departmentof Computer Science, Faculty of Applied Sciences,
Aqsa University Gaza, Palestine, P.O.BOX: 405 t
Tel.:+ 9708/2130044
Mobile No.: +970599855174
E-mail: abJ
Al'Fakulti
Teknologi Maklumat
Malaysia Melak.a, Locked
Post Office 76109 Durian
Phone: +606 331 6675</zone>
  <zone label="BODY_HEADING">E-mailÂ· lnla1[l'lhJi;UtrniNU oiy</zone>
  <zone label="BODY_CONTENT">&amp; Komunikasi,
Bag 1752, Durian Tunggal,
Tunggal, Melaka Malaysia.
Universiti
Teknikal
Abdelrafe Elzamly is currently studying a
Ph.D. in Software and Information Systems
Engineering from Faculty of Information and
Communication Technology at Technical
University Malaysia Melaka (UTeM), Born in
November 30, 1976, Gaza. Palestine. He
received his B.Sc. degree computer in 1999
from Al-Aqsa University, Gaza, his Master's
degree computer information system in 2006 from Faculty of
Information Systems and Technology al The University ofBanldng and
Financial Sciences. He is working as lecturer in Computer Science at
Al-Aqsa University from 1999 to 2013 as a full time and worked as
lecturer in Islamic University in Gaza from 1999 to 2007 as part time.
Also He worked as a manager in The Mustafa Center for Studies and
Scientific Research-Gaza from 2010 to 2012. His research of interest is
risk management, quality software, software engineering, and data
mining.
Buralrab Huuln got a Ph.D. in Management
Science -Condition Monitoring Modelling from
University of Salford, UK in 2007. He received
bis M.Sc. Degree in Numerical Analysis and
Programming from University of Dundee, UK
in 1998. He received his B.Sc. Degree in
Computer Science from University Technology
Malaysia in 1996. He is currently working as
associate professor in University Technical Malaysia Melaka (UTeM).
he is the Coordinator for Centre for Advanced Computing
Technologies (C-Acn in Faculty of Information Technology and
Communication, FTMK and he worked as Deputy Dean (Research and
Post Graduate), Faculty of Information and Communication
Technology at Technical University Malaysia Mclaka (UTeM). His
research interests are in data analysis, data mining, maintenance
modelling, artificial intelligent, risk management, numerical analysis.
and computer network advisor and development.</zone>
  <zone label="BODY_HEADING">CopyrightÂ© 201 J Praise
Worthy Prize S.r./. - All rights reserved</zone>
  <zone label="BODY_CONTENT">International
Review on Computers and Software, Vol. 8. N. I I</zone>
  <zone label="GEN_OTHER">2613
?vwiJe;
?w...,</zone>
  <zone label="BODY_CONTENT">?
W-vv't?kvij1-e;
111111II1II
1828-(,()11(201311l)18;:1-5
CopyrightÂ© 2013 Praise Worthy Prize S.r.L â¢ Alf rights reserved
in Fuzzy Time-Interval
(SCI) and Genetic</zone>
  <zone label="MET_BIB_INFO">Sequential Patterns
Algorithm (GA)
Management
Genetic Algorithm (GA)</zone>
  <zone label="BODY_HEADING">Mining Approach</zone>
  <zone label="BODY_CONTENT">Search
with
FCM</zone>
  <zone label="GEN_OTHER">Approach Using Kernel</zone>
  <zone label="GEN_REFERENCES">PCA for Large Datasets</zone>
  <zone label="BODY_HEADING">Contents
Mining the Change of Customer
with Aid of Similarity Computation
byL Mory GladenÂ«, T. Ravi</zone>
  <zone label="BODY_CONTENT">Behavior
Index
RFID Data Encoding Scheme in Supply Chain
with Aid of Orthogonal Transformation and
byMaria A1111 V., G. S. .Anandha Mola
Tree-Based Weighted Interesting
for Human Interaction Pattern
byS. Uma,J. Suguna
Pattern
Discovery
;
FCM-FCS: Hybridization
for High Dimensional Data
by Golda GeorgeL, atba Parthiban
of Fractional Cuckoo
Clustering Process
Hybrid Model Based Feature Selection
by]. V 'andar K.J,zPaliS,. V engaJOIJ.fala111
Review on Software Metrics Thresholds for Object-Oriented
i?JAbubaleAr D. Ba/ear,Ab11 B. Sultan, HaZfiraZ11lz.alJia/m,i/ah Din
Software
Managing Software Project rusks (Design Phase) with Proposed
Fuzzy Regression Analysis Techniques with Fuzzy Concepts
byAbdelrajeElz.amly,B11rairah Hussin
A Cluster Based Routing Protocol
bySachin Paraifape,M11le11S/utaone
Propose Approach for UDP
Based on the Connection
byMohammed Anbar, Surew,mm
Random
Failure
Interlinking of Communication
Using Network Simulator
l?JK M11f'llgano11dVa.mP,alaniJan!J
Performance Analysis of Cross
to Improve Throughput and
l?JK Kolai Kumar, E. Babwaj
Layer Communication
Utility Maximization
Sern-Rank: a Page Rank Algorithm
by V. VijayadeepaD, . K Gho1h
with</zone>
  <zone label="GEN_OTHER">Mobility Prediction
for Mobile</zone>
  <zone label="BODY_HEADING">Sensor</zone>
  <zone label="BODY_CONTENT">Networks
and</zone>
  <zone label="GEN_OTHER">Sequential Scanning Detection</zone>
  <zone label="BODY_HEADING">Messages</zone>
  <zone label="BODY_CONTENT">Ramada.JI,Selvalemnar Maniclemn,Alhamz.aM1111therE,sraa Alomari
Protocols
Through WA:P Gateway Technologies
in Wireless
Sensor
Network
Based
on Semantic
Relevancy for Efficient
Web
Search
A Study on Web Accessibility in Perspective of Evaluation
byB. Gohin, Vi.JiVinod
Tools
Corporate e-Leaming Environment Using Concept Maps: a Case Study
byNaz.uhA. Chat;uheh, .Anas R Nqjdawi,Mua'ad M. .Abu-Faroj,Houa111 Fans
New Discovery of P2P Botnets Attack Pattern within Host-and-Network
byRaibana S.J'OhiraAhbdullah, Faiz.alM. A., Zul Az.ri M11hmnad Noh</zone>
  <zone label="BODY_HEADING">Atmosphere</zone>
  <zone label="GEN_OTHER">Â®
'PYlviJe: W1rvt h'Pjnu</zone>
  <zone label="MET_BIB_INFO">International</zone>
  <zone label="MET_TYPE">Review</zone>
  <zone label="GEN_OTHER">on</zone>
  <zone label="BODY_CONTENT">Computers and Software
(IRE COS)
2552
2562
2570
2576
2586
2593
2601
2614
2624
2628
2634
2642
2648
2655
2663</zone>
  <zone label="GEN_OTHER">(continued)</zone>
</document>