<document>
  <zone label="MET_BIB_INFO">First International Symposium on Empirical Software Engineering and Measurement</zone>
  <zone label="MET_TITLE">A Survey of Enterprise Software Development Risks in a Flat World
Jesal Bhuta1, 2, Sudeep Mallick3, S. V. Subrahmanya3</zone>
  <zone label="MET_AUTHOR">1Infosys Consulting, Inc.
jesal_bhuta@infosys.com</zone>
  <zone label="MET_AFFILIATION">2University of Southern California
jesal@usc.edu</zone>
  <zone label="MET_AUTHOR">3Infosys Technologies Ltd.
{sudeepm, subrahmanyasv}@infosys.com</zone>
  <zone label="MET_ABSTRACT">Abstract
COTS-based development and global delivery are
two major disruptors in modern software development
arena. Economic benefits offered by these disruptors
cannot be neglected by organizations of any size.
Unfortunately, alongside these benefits are several risk
factors, which if ill-managed can cost the
organizations both in terms of revenue and time. At
Infosys, one of India's leading software services
organizations, built upon global delivery model we
conducted a study by interviewing representatives from
23 projects to identify risks pertinent to COTS-based
development in a global setting. We found 6 frequently
occurring risks that will be summarized in this paper.</zone>
  <zone label="BODY_HEADING">1. Introduction</zone>
  <zone label="BODY_CONTENT">Global delivery is a leading modern day disruptor in
software development arena. In 2004 the top 3
software service organizations in India - TCS, Infosys
and Wipro generated combined services revenue of US
$4.5 billion, up by 47 percent from 2003, almost all
from foreign customers. Such competition from Indian
companies has compelled both Accenture and IBM to
significantly increase their presence in India. In
addition, with the increasing wages in India both
Indian and foreign organizations have also committed
resources to building a presence in emerging markets
such as China, Malaysia, Brazil and Eastern Europe
[6]. Global software development process involves a
minimum of two teams working in sync: a skeleton
team working at the client location responsible for
project coordination, analysis and planning etc. and a
larger team working at the offshore development center
responsible for design, coding, testing etc.
Another significant disruption in the software
development space occurred in late 1980s with the</zone>
  <zone label="MET_BIB_INFO">0-7695-2886-4/07 $20.00 Â© 2007 IEEE
DOI 10.1109/ESEM.2007.74</zone>
  <zone label="GEN_OTHER">476</zone>
  <zone label="BODY_CONTENT">introduction of Commercial-Off-The-Shelf (COTS)
software products. This gave rise to a whole new
paradigm of 'buy vs. build' [5]. Such an approach
allows the vendor to distribute COTS software
development and evolution costs across multiple
customers, resulting in lower cost per deployment. At
the same time customers can acquire and deploy the
software much more rapidly than having to build it
themselves. Several organizations have opted to buy
software components and in several cases entire
solutions are made up of COTS software products. The
Standish group survey for 2000 indicates over 54% of
the software systems surveyed utilized significant
number of COTS software packages [7].
Unfortunately, developing software using COTS
products is not without risks [2]. Researchers have
identified several risks faced when developing
software using COTS software. They have also
proposed resolutions [1][8] that have been successfully
applied in software development projects.
P1: Business
Process
Engineering
P2: COTS
Product
Selection
P3: COTS
Tailoring and
Testing
P4: COTS
Solution
Deployment
P5: Solution
Maintenance
and Support
Figure 1: Global COTS-Based Software
Development Process
Together both these disruptors have created
significant cost-saving opportunities for organizations.
To obtain these benefits organizations utilize processes
that implements best-practices from both these
disruptors (example shown in Figure 1). In Figure
1activities P1, P2, and P4 are primarily conducted on
client location, while activities P3 and P5 are executed
from offshore development centers.
At Infosys headquarters and primary offshore
development center in Bangalore, India we interviewed
representatives from 23 software development and
maintenance projects to identify major risks faced by
such COTS-based global delivery engagements for
clients in US and European Union. These projects were
a part of the enterprise solutions practice within
Infosys which is responsible for developing solutions
using extremely large COTS products such as SAP and
Oracle applications. Our preliminary results indicate
several frequently occurring risks and causes of their
occurrence which we will present in this paper. Where
available, we have also included mitigation and risk
avoidance strategies that have been successfully
applied in these projects.</zone>
  <zone label="BODY_HEADING">2. Research Methodology</zone>
  <zone label="BODY_CONTENT">The enterprise solutions practice at Infosys is
divided into 9 sub-groups. Each sub-group is
specialized in a specific COTS product or business
domain. We conducted interviews in 7 of the 9 subgroups.
Two groups not considered were recently
established and had less than 2 years of experience. A
summary of the number development and maintenance
projects involved in each of these groups is given in
Table 1. We applied a 4 step process for identifying
risks confronted by these projects:</zone>
  <zone label="BODY_HEADING">Step 1 - Artifacts Collection: involved meeting with</zone>
  <zone label="BODY_CONTENT">the project representatives (usually manager) to
identify the artifacts relevant to this research. These
identified and agreed upon artifacts are made available
to the researcher at the end of the meeting.
Step 2 - Artifact Review: involved reviewing these
artifacts to identify risks faced by these projects.
Step 3 - Risk Analysis: involved a second interview
with the representative to determine the roots of risks
and the mitigation strategies that were applied to
resolve them.</zone>
  <zone label="BODY_HEADING">Step 4 - Pattern Recognition: involved reviewing</zone>
  <zone label="BODY_CONTENT">risks, their origins and mitigations from all 23 projects
to identify commonly occurring risk patterns.
Table 1: Projects Analyzed within the Enterprise
Solutions Group at Infosys
Implementation Maintenance
&amp; Enhancement &amp; Support
2 0
Enterprise Solutions Sub-Groups
Business Intelligence (BI)
Customer Relationship Management
(CRM)
Enterprise Application Integration
(EAI)
Human Capital Management (HCM)
Oracle
SAP
Supply Chain Management (SCM)
5
3
1
2
1
0
0
1
2
4
1
1</zone>
  <zone label="GEN_OTHER">477</zone>
  <zone label="BODY_HEADING">3. Global Software Development Risks</zone>
  <zone label="BODY_CONTENT">During our exercise we identified 20 risks that
occurred in a minimum of 2 projects out of the 23
projects surveyed. This section highlights the 6 risks
that occurred most frequently in the 23 projects. It is
important to note that the risks defined here are from
the perspective of an implementer or an integrator of
COTS products. Figures listed next to the risk indicate
the number of projects where the specific risk was
identified.
R1: Lack of adequate infrastructure support or
infrastructure is unavailable (12): Global delivery
model relies exceedingly upon available network
infrastructure that links the offshore development
centers with the client locations. A failure in
infrastructure leaves unutilized resources at the
offshore development centers, resulting in wasted
revenues and project delays. Note that the
infrastructure needs will vary by the engagement, and
should be evaluated before starting of the project. To
reduce the probability of occurrence of this risk,
available infrastructure service providers should be
selected after detailed evaluation. Alternately, if the
infrastructure service provider has been recommended
by the client appropriate measures should be taken
during contract negotiation phase to address such
failure scenarios.
R2: Delay in support from interfacing systems,
resulting delays in present system implementation
(6): Large-sized systems are frequently implemented
by multiple integrators. Typically, in such cases one
part of the system depends upon the interfaces
provided by another part. Several times because
different integrators are involved for each of the
system parts, and every integrator has their distinct
priorities, support from the other integrator will be
delayed, resulting in schedule delays for the present
integrator. For such risks one risk transfer strategy [4]
that can be applied is specifying adequate clauses
pertinent to response times for such support requests in
the engagement contract.</zone>
  <zone label="BODY_HEADING">R3: Unavailability of skilled resources - lack of
technical or domain knowledge (10): Large scale</zone>
  <zone label="BODY_CONTENT">COTS products are usually packaged with exceptional
tailoring or configuration support. Unfortunately, the
configurations and tailoring language for each COTS
product is distinct and can change significantly for new
COTS releases. Moreover on an average a COTS
product undergoes a major release every 9 months [2].
This results in lack of personnel with adequate
experience in using specific COTS product.
Correspondingly, there are numerous similarities in
processes and operations within business domains such
as high tech, banking and finance and human
resources. Knowledge of such processes is usually
gained over several years of working in those domains,
and can significantly speed up the process of
understanding the clients' system requirements. Again,
such experienced personnel are scarce. This risk
further increases with high employee turnover rate. To
reduce the impact caused by this risk teams are
designed so that they include a combination of
experienced and less-experienced personnel.
R4: COTS not functioning as advertised or vendor
not responding to product related issues (6): Now
and again COTS vendors have been known to have
over advertised their products. This leaves the
development team to discover functions which were
advertised as complete are either incomplete or do not
function as expected. In such a scenario, the teams are
forced to either cancel implementing that specific
function (if the function has a low-priority) or build
custom extensions to the COTS in order to satisfy the
functionality (in case of high priority functions). In
addition, often times development teams identify bugs
in the COTS product, which were not identified by the
vendor during their testing phase. Frequently, the
vendor does not deliver a patch on time or does not
respond to the implementer's service requests. This can
significantly impact the project schedule, especially if
the bug hinders the development of a critical feature.
Such a risk can be identified and its impact reduced if
the development team includes members who have
pervious experience in tailoring and deploying the
COTS product.
R5: Undocumented system architecture and
business processes (4): Several maintenance, support
and enhancement engagements are initially developed
by a different organization. These projects are often
times plagued by inadequate documentation of system
architecture and business processes implemented by
the systems. Such risks increase the time required by
the maintenance teams to understand the system
operations. Moreover, because of personnel turn-over
on the project it becomes essential to reverse engineer
the documentation out of pervious meeting notes, and
any such available data.</zone>
  <zone label="BODY_HEADING">R6: High quality of service expectations from the</zone>
  <zone label="BODY_CONTENT">COTS products being used by the client (3): Often
times the COTS product selection step is executed by a
third-party organization (step P2 in Figure 1) that has
limited experience in implementing solutions using the
selected COTS product. In such scenarios, they assure
the client that their recommended COTS product will
meet the quality of service (QoS) parameters required
for the system. In practice however, the COTS may not
be able to meet these required QoS parameters. It is up
to the implementing organization (performing steps P3
and P4 in Figure 1) to curtail client expectations for the</zone>
  <zone label="GEN_OTHER">478</zone>
  <zone label="BODY_CONTENT">QoS parameters supported by the system. This is a risk
which often becomes a problem when there has been
little or no prototyping done during the COTS selection
phase. At this point the client is left with 2 options:
make do with the QoS provided by the selected COTS
product, or go back and choose another COTS product.
Prior knowledge of such commonly occurring risks
is vital to success of projects developing COTS-based
systems in a global setting.</zone>
  <zone label="BODY_HEADING">4. Conclusion</zone>
  <zone label="BODY_CONTENT">COTS-based development in a global setting is a
challenging undertaking. Organizations with limited
outsourcing experience frequently stumble upon
several risks which eventually increase the project
budget and schedule. Our interviews with
representatives from 23 projects at Infosys revealed
some commonly occurring risks pertinent to global
delivery and COTS-based development. These risks,
their impact on the project and mitigation strategies
have been highlighted in this paper. Prior knowledge of
these risks will forearm both organizations using the
global-delivery model to provide client services, and
clients outsourcing and off shoring software
development and implementation projects.</zone>
  <zone label="BODY_HEADING">5. Acknowledgements</zone>
  <zone label="BODY_CONTENT">We would extend our sincere gratitude to the project
representatives at the enterprise solutions group in
Infosys who contributed to this study and the Instep
internship program that funded this study.</zone>
  <zone label="GEN_REFERENCES">6. References
[1] Albert C. and Brownsword L., âEvolutionary Process
for Integrating COTS-Based Systems (EPIC): An
Overview,â Software Engineering Institute Technical
Report, CMU/SEI-2002-TR-009, July 2002.
[2] Basili V. and Boehm B., âCOTS-Based Systems Top 10
List,â IEEE Computer, Volume 34, Issue 5, May 2001.
[3] Boehm B. and Basili V., âGaining Intellectual Control
of Software Development,â IEEE Computer, Volume 23,
Issue 5, May 2000.
[4] Boehm B., âSoftware Risk Management: Principles and
Practices,â IEEE Software, Volume 8, Issue 1, Jan
1991.
[5] Brooks F., "No Silver Bullet: Essence and Accidents of
Software Engineering," Computer, Volume 20, Issue 4
April 1987.
[6] Burgelman R. and Capur A., âInfosys Consulting in
2006: Leading the Next Generation of Business and
Information Technology Consulting,â Stanford Graduate
School of Business Case study No. SM151, May 2006.
[7] Standish Group, âExtreme Chaos,â TR, 2001.
[8] Yang Y., Bhuta J., Boehm B. and Port D., âValue-Based
Processes for COTS-Based Applications,â IEEE
Software, Volume 22, Issue 4, July 2005.</zone>
</document>