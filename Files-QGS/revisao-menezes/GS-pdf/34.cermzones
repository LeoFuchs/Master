<document>
  <zone label="MET_BIB_INFO">2014 8th Malaysian Software Engineering Conference (MySEC)</zone>
  <zone label="MET_TITLE">Identifying Usability Risk: A Survey Study</zone>
  <zone label="MET_AFFILIATION">Jayaletchumi T. Sambantha Moorthy, Suhaimi bin Ibrahim, Mohd Naz'ri Mahrin
Advanced Informatics School,
Universiti Teknologi of Malaysia (UTM)
Kuala Lumpur, Malaysia.
tsmjayaletchumi2@live.utm.my, suhaimiibrahim@utm.my, mdnazrim@utm.my</zone>
  <zone label="MET_ABSTRACT">Abstract-As defined in various quality models, usability is
recognized as an important attribute of software quality.
Failing to address usability requirements in a software product
could lead to poor quality and high usability problems in
software product. Research is still in progress to introduce the
best methods for reducing usability problems and increase the
rate of successful usable software products. Studies have
shown that problems in software products can also be
controlled using Software Risk Management methods, even
though these problems cannot be eliminated totally. Using
Software Risk Management, problems in software products
are dealt before it occurs. This paper presents usability
problems as a risk factor and by managing usability risk at
earlier phases of the development process, successful and high
usability software products can be developed. Unfortunately,
currently there is little effort in identifying, analyzing and
prioritizing potential usability risks at earlier phases of the
development process. This paper focuses on usability risk
identification as it is the first stage in usability risk
management. This paper presents the results of an industry
survey based on the opinion of Malaysian Public Sector
involving sample size of 330 software developers and software
projects managers regarding potential usability risk that could
occur during Software Development Life Cycle (SDLC). Our
finding has identified 42 potential usability risks, defined as a
list for further risk analysis in future.</zone>
  <zone label="MET_KEYWORDS">Keywords-usability; usability risk; risk management; risk
identification.</zone>
  <zone label="GEN_OTHER">I.</zone>
  <zone label="BODY_CONTENT">INTRODUCTION
Usability is one of the significant factors of software
product quality [1]. The most referenced usability standard,
ISO 9241-11: Guidance on Usability [2] defines usability as
“the extent to which a product can be used by specified
users to achieve specified goals with effectiveness,
efficiency and satisfaction in a specified context of use”.
Lack of emphases on usability elements in a software
product leads to various usability problem that eventually
contributes to the failure of the software product. Generally,
usability problem is perceived as an aspect of the system
and/or a demand on the user which makes it unpleasant,
inefficient, onerous, perturbing or impossible for the user to
achieve their goals in typical contexts of use [3].
Reducing usability problems in a software product after
its development is very challenging and it is not
recommended because of cost and time factor [4]. Hence,</zone>
  <zone label="MET_BIB_INFO">978-1-4799-5439-1/14/$31.00 ©2014 IEEE</zone>
  <zone label="GEN_OTHER">148</zone>
  <zone label="BODY_CONTENT">usability problems should be overcome during software
products development.
Usability problems are considered as a risk factor in
development of usable software product and using risk
management, potential usability risks can be defined at
earlier phases of the development process before risk
control activities could be implemented. Currently,
development team is facing challenges in predicting
usability risks earlier in the development process due to lack
of efforts in identifying, analyzing and prioritizing usability
risks.
This paper puts forward a survey to identify potential
usability risk during SDLC, taking software developers and
software project managers in Malaysian Public Sector as the
respondents. We present a list of potential usability risk
during SDLC. Project managers, quality managers, risk
management team and the software development team may
benefit by ensuring identified usability risks are eliminated
in each phase of software development lifecycle. This
contributes to development of more usable and productive
software product.
II.</zone>
  <zone label="MET_ABSTRACT">RELATED WORK</zone>
  <zone label="BODY_CONTENT">The concept of risk management has been a popular
approach in non-software domain for several decades and it
has been adopted in the software domain since the last few
years [5, 6]. Using risk management concept, risk can be
identified, analyzed, prioritized, mitigated and controlled
[7]. This paper concerns research on risk identification steps
as it is the initial step in the risk management process.</zone>
  <zone label="BODY_HEADING">A. Risk Identification</zone>
  <zone label="BODY_CONTENT">The objective of risk identification is to determine the
risk that may affect a project or product. Early identification
of risk helps in minimizing and preventing the effects of the
risk. Risk can be identified using techniques such as
interview, brainstorm, assumption analysis, survey,
voluntary reporting, decomposition, utilization of risk
taxonomies and critical path analysis [8].
Risk identification using interview is used when selected
experienced project managers or experts in the field are
involved. Their experiences will provide adequate
information in identifying risk [9] . The drawback of this
technique is it time consuming. Besides interview,
brainstorming is an alternate technique used to identify risk.
It is followed when a group of respondents are involved
together to generate ideas or find a solution for a specific
problem [10]. It needs detailed planning and could be
hassled. Other risk identification techniques include Delphi,
time a fact-finding, checklist and diagram techniques [11,
12]. The Delphi technique involves selecting experts and
their anonymous participation in reaching consensus on a
subject such as project/product risk [13]. The Delphi
technique can reduce single influence on the outcome and
can reduce preconception as well, but it is a costly
technique.
Survey is also a popular technique to identify risk.
Generally the survey is used to identify the probability of
occurrences of selected risk. Survey was utilized to analyze
133 projects in the process of risk identification [14]. Even
though this technique is time consuming, it contributes to
the completeness of the outcome.
Other techniques which are used to identify risks are
observation, and documentation analysis [15], Strengths,
weaknesses, opportunities and threats (SWOT) analysis
[16], Fault Tree Analysis (FTA), Event Tree Analysis
(ETA), Hazard and Operability study (HAZOP) and Failure
Mode Effect Analysis (FMEA) [17], use of tools, providing
risk scenario or risk description and applying continuous
and early identification method [18].</zone>
  <zone label="BODY_HEADING">B. Usability Risks</zone>
  <zone label="BODY_CONTENT">The search for the term 'usability risk' shows that this
term is not widely used. The term 'usability risk' was first
introduced and used in studies involving of e-commerce and
World Wide Web services in 1999 [19]. Some studies on
mobile application had used this term in their studies as it
involves extensive involvement of user [20-22].
Usability risk can be understood as potentially a chosen
action or activity lead to an undesirable outcome or loss
which could affect usability of a software product. An
occurrence of usability risk could develop negative user
experiences and leads to software product failure [20].
Many scholars investigate usability problem in their studies
and not on usability risk. Usability problem can be
perceived as a risk factor in producing usable software
product since it is a threat to an optimal user experience [23,
24] where else user experience, in general includes many
aspect such as human factors, design, ergonomics, Human
Computer Interaction (HCI), accessibility, marketing as well
as usability.
Fig. 1 summarizes usability problem as a risk factor for
producing usable software product and any effort to identify
usability risk can be achieved by taking usability problem as
the usability risk factor.
Usability problem
risk factor
User Experiences
Usability
Fig 1. Usability problem as risk factor</zone>
  <zone label="GEN_OTHER">149</zone>
  <zone label="BODY_HEADING">III. RESEARCH DESIGN
A. Research Questions</zone>
  <zone label="BODY_CONTENT">This study has one research question as stated below.</zone>
  <zone label="BODY_HEADING">What are the usability risks that occur during SDLC?</zone>
  <zone label="BODY_CONTENT">This research question is intended to identify potential
usability risks by empirically validate through survey the
occurrences of usability risk during SDLC.</zone>
  <zone label="BODY_HEADING">B. Research Methods</zone>
  <zone label="BODY_CONTENT">To answer the research question, a survey was carried
out. A questionnaire was constructed with usability risk
factors that were derived from usability attributes and sub
attributes defined in software quality models [25]. This
questionnaire was distributed to 330 respondents consist of
software developers and software project managers from
Malaysian Public Sector.
Respondents are chosen from Malaysian Public Sector
because it was reported in a survey by Malaysian
Administrative Modernization and Management Planning
Unit (MAMPU) in 2011 that usage of online services in
government is only 40% of the overall online services
provided and this shows users are exposing to higher
usability problem in using online services. This environment
is adequate and sufficient to verify usability risk factors
identified from software quality models.
Data from survey are then analysed to obtain potential
usability risk factors that have been agreed by the
respondents as important factor that shows the occurrence of
usability risk.</zone>
  <zone label="BODY_HEADING">C. Survey Design
• Recruiting Respondents</zone>
  <zone label="BODY_CONTENT">•</zone>
  <zone label="BODY_HEADING">Developing Questionnaire</zone>
  <zone label="BODY_CONTENT">Survey respondents were chosen among software
developers and software project managers who have
experience in software development process and
responsible in dealing with risks during software
development. Respondent is recruited from 23
ministries and Malaysian Administrative
Modernization and Management Planning Unit
(MAMPU) in Malaysian Public Sector. MAMPU is
included in this survey as it is the responsible
government agency to oversee the functions of
administrative modernization and human resource
planning for the public sector.
The questionnaire was designed based on seven
stages provided in [26]: identify the research
objectives, identify and characterize the target
audience, design the sampling plan, design and write
the questionnaire, pilot test the questionnaire,
distribute the questionnaire, and analyze the results
and write a report.
It is structured in two sections, A and B. Section A
contains questions on demography of the
respondents such as ministry, gender, age, service
scheme, experience in software development and
knowledge on usability practices in software
development.
Section B lists 38 various usability risk factors
which could contribute to usability risk. These
usability risk factors were derived from usability
attributes and sub attributes stated in Table I. This is
aligned with the idea that factors affecting the quality
of software can be identified from attributes defined
in software quality models [4]. Usability attributes
used for the purpose of constructing the
questionnaire are Effectiveness, Efficiency,</zone>
  <zone label="BODY_HEADING">Satisfaction, Comprehensibility and Safety with</zone>
  <zone label="BODY_CONTENT">attribute Effectiveness consists of nine questions,
Efficiency with seven questions, Satisfaction with
seven questions, Comprehensibility with nine
questions and Safety with six questions. Respondents
are also given opportunity to express their suggestion
on potential usability risk.
Five point Likert scales are provided for each
usability risk factors in the questionnaire: strongly
agree, agree, neither, disagree and strongly
disagree, with '1' representing strongly disagree,
and '5' representing strongly agree [27]. Each
usability risk factors are written in an optimistic
manner, whereby if a usability risk factor is ranked
closer to strongly agree, it is more likely that it
contributes to the occurrences of usability risk occurs
during the software development process.
Only usability risk factors with point of strongly
agree and agree is considered as factors contributing
to usability risk and likely occurs during the software
development process. The questionnaire is not
accessible in this paper due to the space limitation.
Following the explanation given above, any
inability to achieve characteristics defined in
usability attributes a sub attributes leads to
occurrence of usability risks and in this context we
had defined a preliminary list of 40 potential
usability risks in our previous study [28]. This list
has been updated as shown in Table II.
TABLE I. USABILITY ATTRIBUTES AND SUB ATTRIBUTES
Attributes
Effectiveness
Efficiency
Comprehensibility
Satisfaction
Safety
Usability
Sub Attributes
Task Accomplishment, Operability, Universality,
Flexibility, Error
User Effort, Finance, Resource Utilization,
Performance
Clarity, Learnability, Memorability, Helpfulness
Likeability, Comfort, Attractiveness, Trustfulness
User Safety, Third Party Safety and
Environmental Safety
Code
E1
E2
E3
E4
E5
E6
E7
E8
E9
E10
F1
F2
F3
F4
F5
F6
F7
S1
S2
S3
S4
S5
S6
S7
C1
C2
C3
C4
C5
C6
C7
C8
C9
T1
T2
T3
T4
T5
T6
TABLE II. POTENTIAL USABILITY RISK DERIVED FROM USABILITY
ATTRIBUTES
Potential Usability Risk
Effectiveness (E)
Low percentage of task accomplishment
Inappropriateness of the task output
Incorrect task execution
Incomplete functionalities to perform a task
Low usage by persons with some disabilities
Lack of cultural diversity in user interface
Inability to adapt to changing user preferences and environment
High ratio of failure resulted from human errors
High ratio of failure resulted from execution errors
Lack of user control
Efficiency (F)
Incorrect or inaccurate result produced
Low estimation of cost in development
Inadequate budget [project funding uncertainty]
Low estimation of cost of human resources in development
Lack of utilization of command
Longer execution time of a task
Maximum usage of memory while executing a task in software
Satisfaction (S)
Software not preferred or liked by the user
Lack of software stability
Lack of trust on software
Unable to fulfil initial intention of user towards the software
Bad response from user after using the software
Confusing design (including the search facilities)
Lack of aesthetic features and good UI design
Comprehensibility (C)
Lack of clarity in system's properties and functionalities
Lack of skills for user and developer
High complexity in design and architecture
Inability to understand the software
Inadequate training for user
Longer time to learn the software
Unable to remember elements and functionality of the software
Incomplete and Inadequate documentation/ user manuals
Lack of design documentation
Safety (T)
Loss of information/data
High vulnerability to threat
High prone to system failure/corruption
Working environment prone to hazards
Unable to avoid risk and damage to individuals other than the
user when the system is in use
Change in working environment
C10
Insufficient support system (help)</zone>
  <zone label="GEN_OTHER">150</zone>
  <zone label="BODY_HEADING">D. Data Collection</zone>
  <zone label="BODY_CONTENT">Since the respondents for these surveys are carefully
chosen from the area of software development, nonprobability
samples are employed in this survey. Stratified
sampling was reasonable to use in collecting data since 24
organization (23 ministries and MAMPU) were involved in
this survey. The population of software developers and
software project managers in Malaysian Public Sector has
been identified as 2514 people. Hence, the sample size of
the respondents has been determined as 330 people using a
software called G*Power.
Respondents were invited by email, which was
forwarded to the Head of Information Technology
Department in each organization. Of the 330, 270 (81%)
respondents completed the survey and 19% of the
respondents either did not provide any response or did not
complete the survey. Each respondent was given choice to
choose the mode of the questionnaire either thru online, soft
copy or hard copy. From 270 completed surveys, 28.5%
questionnaires are collected online, 66.7% was collected as
hard copy and the rest collected thru email. To avoid bias,
respondents were informed that data collection was fully
anonymous and kept unknown to others.</zone>
  <zone label="BODY_HEADING">IV. RESULT AND DISCUSSION</zone>
  <zone label="BODY_CONTENT">In this section, answer to our research question, How to
identify usability risks that occur during SDLC? are
discussed. The occurrences of usability risks are identified
from respondents feedback on the usability risk factors
listed in the survey. All usability risk factors that were either
agree or strongly agree by respondent shows the
occurrences of related usability risk.</zone>
  <zone label="BODY_HEADING">A. Demography</zone>
  <zone label="BODY_CONTENT">Out of 270 respondents who have completely answered
the questionnaire, 63% were female and 65% were between
the age group of 30-40 years. In terms of experience in
software development, most respondents (40.4%) have 1-5
years of experience and about 51.1% of total respondents
have more than 5 years of experiences, which are sufficient
to answer our questionnaire effectively. Almost 80.7% of
the respondents have knowledge on usability practices
which are an important aspect in our survey. This ensures
that most respondents are able to understand and answer the
questionnaire honestly.</zone>
  <zone label="BODY_HEADING">B. Consistency of Constructs</zone>
  <zone label="BODY_CONTENT">To detect any inconsistency in the construction of the
questionnaire, Cronbach's Alpha value was calculated. A
factor is considered consistent when its risk factors yield a
Cronbach's Alpha greater or equal to 0.7 [29]. Table III
shows Cronbach's Alpha for our questionnaires.
The alpha coefficient for the 38 items is 0.905,
suggesting that the items have relatively high internal
consistency.
TABLE III. CRONBACH'S ALPHA VALUE
Cronbach's
Alpha
0.905
N of Items
(number of questions in the questionnaire
38</zone>
  <zone label="GEN_OTHER">151
•
•
•
•
•
•
•
•
•
•</zone>
  <zone label="BODY_HEADING">C. Occurrences of Usability Risk Factors</zone>
  <zone label="BODY_CONTENT">Occurrence of usability risk factors in the survey reflect
on the occurrences of usability risks itself. Occurrence of
usability risk factors is determined by analyzing
respondent's agreement (option 'agree' and 'strongly agree'
in the survey).
It has been found that all usability risk factors listed in
the questionnaire have more than 50% respondents agree
that these usability risk factors contribute to occurrences of
usability risk.
Eighteen factors are listed below and it is agreed by
more than 90% of the respondents as contributing factor for
usability risk:</zone>
  <zone label="BODY_HEADING">Ability of software to accomplish more tasks
Appropriate way of showing task output (result)</zone>
  <zone label="BODY_CONTENT">Ability of software to perform task correctly
• Providing complete functionalities to perform a task
• Stability in software
• Software's ability to produce correct and accurate result
in return for user effort
• Software's ability in adapting to changing user
preferences and working environment
• Software's ability to fulfill initial intention of users
towards the software
Good response from users after using the software</zone>
  <zone label="BODY_HEADING">Clear design (including search facilities)</zone>
  <zone label="BODY_CONTENT">Aesthetic features and good user interface design in
software
Clarity in software's properties and functionalities</zone>
  <zone label="BODY_HEADING">The skill of users and</zone>
  <zone label="BODY_CONTENT">development
developers in software
• Providing adequate training for user leads
The ability of user to learn to use the software easily and
faster
Complete and adequate documentation and user manual
• Sufficient support system in software such as “help”
• Safety of information or data
Hence, usability risk contributed from the above listed
usability risk factors can be considered of having high
occurrences during software development process and
intense attention is needed in avoiding these risks.
Besides this, about 45 suggestions from respondents on
usability risk factor were gathered from this survey.
Suggested usability risk factors are analyzed and mapped
with a preliminary list of potential usability risks in Table II.
The purpose of this mapping is to eliminate redundant
(explicitly and implicitly) usability risks and to identify new
usability risk.
Six additional usability risk factors have been identified as:
i. Detailed software penetration tests.
ii. Maintenance method.
iii. Updated software/ tools to develop a system.
iv. Developer's readiness to update the software from
time to time to fulfill user needs.
v. Proper handling of request to update software to help
on software maturity from time to time
vi. Changing version of software, can effected usability to
user.
From these six usability risk factors, two new potential
usability risk (N) has been identified as
•
•</zone>
  <zone label="BODY_HEADING">N1 - Lack of detailed testing</zone>
  <zone label="BODY_CONTENT">N2 - Lack of maintenance method
Lack of detailed testing such as usability testing and
security testing is considered as usability risk because
without proper and incomplete testing, usability features in a
software product cannot be improved [30]. Detailed testing
is also essential to ensure software, is secure and fulfills the
initial requirement of the software.</zone>
  <zone label="BODY_HEADING">Lack of maintenance methods [31] also contributes to</zone>
  <zone label="BODY_CONTENT">usability risk. With good maintenance method, usability
problems can be fixed with effective fixes such problems
can be prevented from reoccurring in the future.
Maintenance method includes updating activities in a
software or system.</zone>
  <zone label="BODY_HEADING">Some opinions such as Lack of ownership from the user</zone>
  <zone label="BODY_CONTENT">side and Poor study on user requirements are not reckoned
as usability risk factor because either it is not related, too
generic and not specific, and ambiguous.
In summary, ICT practitioners have agreed and
identified that all potential usability risk stated in Table II
does occur during SDLC. Furthermore, two new usability
risks have been defined and added to the initial list of
potential usability list making total potential usability risk
identified in this study is 42 risks. List of potential usability
risk found in this study is as shown in Table IV.</zone>
  <zone label="BODY_HEADING">V. THREAT TO VALIDITY
In this section, threat to validity of construct, internal
and external for the literature search and survey were
discussed.
A. Construct validity</zone>
  <zone label="BODY_CONTENT">To prevent construct validity problems in the survey,
questionnaires were designed based on usability attributes
and sub attributes defined in previously published quality
model [25]. The questionnaire was pre tested with pilot test.
Pilot test was carried out by distributing 30 questionnaires
to software developers. Their feedback on content validity
and readability was gathered. The questionnaire is then
amended to ensure reliability and constructs validity in the
questionnaire. Also, experts' opinions are considered in
implementing the survey as the content validity.
Code
E1
E2
E3
E4
E5
E6
E7
E8
E9
E10
F1
F2
F3
F4
F5
F6
F7
S1
S2
S3
S4
S5
S6
S7
C1
C2
C3
C4
C5
C6
C7
C8
C9
T1
T2
T3
T4
T5
T6
N1
N2
TABLE IV. LIST OF POTENTIAL USABILITY RISKS
Potential Usability Risk
Effectiveness
Low percentage of task accomplishment
Inappropriateness of the task output
Incorrect task execution
Incomplete functionalities to perform a task
Low usage by persons with some disabilities
Lack of cultural diversity in user interface
Inability to adapt to changing user preferences and environment
High ratio of failure resulted from human errors
High ratio of failure resulted from execution errors
Lack of user control
Efficiency
Incorrect or inaccurate result produced
Low estimation of cost in development
Inadequate budget [project funding uncertainty]
Low estimation of cost of human resources in development
Lack of utilization of command
Longer execution time of a task
Maximum usage of memory while executing a task in software
Satisfaction
Software not preferred or liked by the user
Lack of software stability
Lack of trust on software
Unable to fulfil initial intention of user towards the software
Bad response from user after using the software
Confusing design (including the search facilities)
Lack of aesthetic features and good UI design
Comprehensibility
Lack of clarity in system's properties and functionalities
Lack of skills for user and developer
High complexity in design and architecture
Inability to understand the software
Inadequate training for user
Longer time to learn the software
Unable to remember elements and functionality of the software
Incomplete and Inadequate documentation/ user manuals
Lack of design documentation
Safety
Loss of information/data
High vulnerability to threat
High prone to system failure/corruption
Working environment prone to hazards
Unable to avoid risk and damage to individuals other than the
user when the system is in use
Change in working environment
Others
Lack of detailed testing
Lack of maintenance method
C10
Insufficient support system (help)</zone>
  <zone label="GEN_OTHER">152</zone>
  <zone label="BODY_HEADING">B. Internal validity</zone>
  <zone label="BODY_CONTENT">Threats to internal validity are minimal in the survey
because only descriptive statistical were used to identify
potential usability risk. Demography data of respondents
provide initial information to ensure the respondents are
within the defined sample. There were about nine inquiries
of respondents before and after completing the
questionnaire, showing that most respondents understand
questionnaire questions and answered the questionnaire
truthfully.</zone>
  <zone label="BODY_HEADING">C. External validity</zone>
  <zone label="BODY_CONTENT">Threats to external validity may reduce by the fact that
the survey does not have very huge sample size and was
only conducted in the Malaysian Public Sector.</zone>
  <zone label="BODY_HEADING">VI. CONCLUSION</zone>
  <zone label="BODY_CONTENT">This paper presents a survey analysis that provides better
understanding of potential usability risks, in the context of
the Malaysian Public Sector. This survey, which is based on
the use of Likert-scale questionnaires, is analyzed using
descriptive analysis to determine the percentage of
respondent that agrees on the occurrences of usability risk
factors that could contribute to usability risk during software
development process. Being so, the question proposed in the
beginning of this paper; How to identify usability risks that
occur during SDLC? are fully answered by the output of the
survey.
In future, usability risk identified from this survey will
be reconciled with usability risk found in the literature to
ensure risks with the same meaning are considered only
once. After the process of reconciliation, finalized list of
usability risks is then used in development of questionnaire
to collect information on usability risk's impact and
likelihood on software development phases for future
analysis. All of these aim at development of more usable
and successful software product.</zone>
  <zone label="BODY_HEADING">ACKNOWLEDGEMENT</zone>
  <zone label="BODY_CONTENT">This research is funded by the RU-Tier1 Research grant
of Universiti Teknologi Malaysia (UTM) in collaboration
with the Malaysian Ministry of Education (MOHE) under
the Vot no. 08H28. The authors would like to thank the
Research Management Centre of UTM and MOHE for their
support and cooperation including students and other
individuals who are either directly or indirectly involved in
this project. Our special thanks to the respondents, consists
of software developers and software project managers who
have participated in the survey that we have conducted.</zone>
  <zone label="GEN_REFERENCES">[1]
[2]
[3]
[4]
[5]
[6]
REFERENCES
Xenos, M. Usability perspective in software quality. in Usability
Engineering Workshop, The 8th Panhellenic Conference on
Informatics with International Participation. 2001. Southern Cyprus.
DIN, E., 9241-11. Ergonomic requirements for office work with
visual display terminals (VDTs)-Part 11: Guidance on usability.
1998, International Organization for Standardization.
Lavery, D.a.C., Gilbert Representing Predicted and Actual Usability
Problems. in Proceedings of International Workshop on
Representations in Interactive Software Development 1997. QMW
College, London
Sharma, A.K., A. Kalia, and H. Singh, An Analysis of Optimum
Software Quality Factors. IOSR Journal of Engineering, 2012. 2(4):
p. 663-669.
Tianyin, P. Development of software project risk management
model review. on 2011 2nd International Conference in Artificial
Intelligence, Management Science and Electronic Commerce
(AIMSEC), 2011: IEEE.
Misra, S.C., V. Kumar, and U. Kumar, Different techniques for risk
management in software engineering: a review, in ASAC 2006.
2006, Eric Sprott School of Business Carleton University Banff:
Alberta.</zone>
  <zone label="GEN_OTHER">153</zone>
  <zone label="GEN_REFERENCES">[7] Boehm, B.W., Software risk management: principles and practices.
Software, IEEE, 1991. 8(1): p. 32-41.
[8] Westfall, L., Software Risk Management, in International
Conference on Software Quality. 2011: San Diego, California.
[9] brand, L., et al. The Emergence of Information Infrastructure Risk
Management in IT Services. in 2012 45th Hawaii International
Conference on System Science (HICSS),. 2012.
[10] Sommerville, I., Software Engineering. 7th Edition ed. International
Computer Science Series. 2007, Harlow, England: Addison Wesley
[11] Xiang, W., Software Engineering Project Management. 2nd Edition
ed. Study Book. 2007, Austalia: University of Southern Queensland.
[12] Miler, J., A Method of Software Project Risk Identification and
Analysis, in Faculty of Electronics,Telecommunications and
Informatics. 2005, GDAŃSK University of Technology.
[13] Liu, S., et al., Comparing senior executive and project manager
perceptions of IT project risk: a Chinese Delphi study. Information
Systems Journal, 2010. 20(4): p. 319-355.
[14] Kusumo, D.S., et al. Risks of off-the-shelf-based software
acquisition and development: A systematic mapping study and a
survey. in 16th International Conference on Evaluation &amp;
Assessment in Software Engineering (EASE 2012),. 2012.
[15] Lobato, L.L., et al. Risk management in software product lines: An
industrial case study. in 2012 International Conference on Software
and System Process (ICSSP), 2012.
[16] Hillson, D., Extending the risk process to manage opportunities.
International Journal of Project Management, 2002. 20(3): p. 235240.
[17] Mokhtari, K., et al. A preliminary research on risk management for
marine industry applications. in 2012 International Conference on
Quality, Reliability, Risk, Maintenance, and Safety Engineering
(ICQR2MSE), 2012.
[18] Lobato, L.L., et al., Risk Management in software engineering: A
scoping study. 2012.
[19] Platt, A.B. The usability risk. in Proceedings of the 18th IEEE
Symposium on Reliable Distributed Systems, 1999, 1999.
[20] Ketola, P., Integrating usability with concurrent engineering in
mobile phone development. 2002: University of Tampere.
[21] Jones, T.C., Assessment and Control of Software Risk. 1994, New
York: Prentice-Hall.
[22] Jin, B., et al., A Study for Usability Risk Level in Physical User
Interface of Mobile Phone, in Usability and Internationalization.
HCI and Culture, N. Aykin, Editor. 2007, Springer Berlin
Heidelberg. p. 327-335.
[23] Inversini, A., L. Cantoni, and D. Bolchini, Connecting usages with
usability analysis through the user experience risk assessment
model: A case study in the tourism domain. 2011. p. 283-293.
[24] Josang, A., et al. Security Usability Principles for Vulnerability
Analysis and Risk Assessment. in Computer Security Applications
Conference, 2007. ACSAC 2007. Twenty-Third Annual. 2007.
[25] Dubey, S.K., A. Gulati, and A. Rana, Integrated Model for Software
Usability. International Journal on Computer Science and
Engineering, 2012. 4(3).
[26] Kasunic, M., Designing an effective survey. 2005, DTIC Document.
[27] Phyllis Tharenou, R.D., Brian Cooper, Management Research
Methods. 2007: Cambridge University Press.
[28] Sambantha Moorthy, J.T., S. Ibrahim, and M. Naz'ri Mahrin,
Identifying Potential Usability Risk During Software Development
Process. Open International Journal of Informatics, 2013. 1: p. 2945.
[29] Joseph F. Hair, J., et al., Multivariate data analysis (6th ed.): with
readings. October 2005: Prentice-Hall, Inc. 745.
[30] Kessner, M., et al. On the reliability of usability testing. in CHI'01
extended abstracts on Human factors in computing systems. 2001:
ACM.
[31] Vilbergsdottir, S.G., E.T. Hvannberg, and E.L.-C. Law, Assessing
the reliability, validity and acceptance of a classification scheme of
usability problems (CUP). Journal of Systems and Software, (0).</zone>
</document>