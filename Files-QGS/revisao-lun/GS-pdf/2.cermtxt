Stealthy Deception Attacks on Water SCADA Systems
Saurabh Amin
Department of CEE
UC Berkeley, CA, USA
amins@berkeley.edu
S. Shankar Sastry
Department of EECS
UC Berkeley, CA, USA
sastry@coe.berkeley.edu
Xavier Litrico
Cemagref, UMR G-EAU
Montpellier, France
xavier.litrico@cemagref.fr
Alexandre M. Bayen
Department of CEE
UC Berkeley, CA, USA
bayen@berkeley.edu
ABSTRACT
This article investigates the vulnerabilities of Supervisory
Control and Data Acquisition (SCADA) systems which monitor
and control the modern day irrigation canal systems.
This type of monitoring and control infrastructure is also
common for many other water distribution systems. We
present a linearized shallow water partial differential equation
(PDE) system that can model water flow in a network of
canal pools which are equipped with lateral offtakes for water
withdrawal and are connected by automated gates. The
knowledge of the system dynamics enables us to develop a
deception attack scheme based on switching the PDE parameters
and proportional (P) boundary control actions, to
withdraw water from the pools through offtakes. We briefly
discuss the limits on detectability of such attacks. We use
a known formulation based on low frequency approximation
of the PDE model and an associated proportional integral
(PI) controller, to create a stealthy deception scheme capable
of compromising the performance of the closed-loop
system. We test the proposed attack scheme in simulation,
using a shallow water solver; and show that the attack is indeed
realizable in practice by implementing it on a physical
canal in Southern France: the Gignac canal. A successful
field experiment shows that the attack scheme enables us
to steal water stealthily from the canal until the end of the
attack.
Categories and Subject Descriptors
K.6.5 [Management of Computing and Information
Systems]: Security and Protection-physical security, unauthorized
access; J.2 [Physical Sciences and Engineering]:
Earth and atmospheric sciences
General Terms
Security
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that copies
bear this notice and the full citation on the first page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior specific
permission and/or a fee.
HSCC'10, April 12-15, 2010, Stockholm, Sweden.
Copyright 2010 ACM 978-1-60558-955-8/10/04 ...$10.00.
161
1. INTRODUCTION
Numerous parts of the world are now using automation
methods for management of their water distribution systems.
For example, modern day irrigation systems are monitored
and controlled by Supervisory Control and Data Acquisition
(SCADA) systems. SCADA systems enable the
management agencies to remotely monitor water levels and
velocities at desired locations as well as control the water
flow through automated hydraulic structures. Based on the
information gathered by level and velocity sensors, the control
actions are generated by the SCADA system. Operators
can also respond to faults by taking the necessary maintenance
actions. The architecture of SCADA systems for irrigation
canal networks is similar to that of many physical
infrastructure systems such as waste-water treatment plants,
oil and gas distribution, and process control systems.
SCADA systems are often commercially sold and deployed
by information technology (IT) companies which use commodity
solutions such as off-the-shelf operating systems, embedded
devices and networking technology. Increasingly,
these systems are being made accessible to remote users
via corporate networks and the Internet. Even if these systems
were designed to be closed, connectivity through uncontrolled
connections can occur (e.g., via mobile devices).
Wireless sensor and actuator networks are now allowing the
managing agencies to monitor a larger number of events and
operations. Thus, it can be concluded that SCADA systems
inherit many of known IT vulnerabilities and threats. Many
of these vulnerabilities now form a part of public-domain
knowledge. Indeed, with the increasing complexity of monitoring
and control systems, cyber-attacks are now becoming
an attractive choice for the attacker; they are cheaper, less
risky for the attacker, and are easier to execute.
1.1
The Gignac SCADA system
The Gignac irrigation canal network is located in South
France and irrigates about 2800 hectares of agricultural land.
The canal network can be used as an experimental testbed
for research in hydrodynamic modeling and automatic control
for canal network management. The canal network is
equipped with level and velocity sensors at different sites to
collect measurement data, and motorized gates with local
slave controllers to control the flow of water. The canal is
monitored and controlled by the SCADA system which comprises
of a centralized base station communicating with the
field devices through radio and telephone communication [1].
The functionalities of the Gignac SCADA system include:
1) monitoring of the hydraulic state of the canal as well as
providing alarm status indicating malfunctioning resulting
from faults, 2) changing parameters of local slave controllers
that are programmed in the remote terminal units (RTUs),
3) Activating local slave controllers, sending manual gate
movements, 4) Modifying operational objectives in terms of
discharges or water levels. The full set of functionalities is
available to the canal manager who can authorize one or
more functionalities to other users. In order to develop and
implement automatic control methods ranging from simple
proportional (P) and proportional integral (PI) controllers
to more advanced controllers on the canal, the canal management
team has developed a software interface between
the SCADA system and the SIC software [14]. SIC is a hydrodynamic
simulation software that can test the controllers
in simulation before implementing them on the real canal.
Recently, several attacks have been reported on the Gignac
canal. For example, the solar panels that power radio communication
systems used for data transmission from sensors
to the base station were stolen. This resulted in loss of critical
control functionalities. In a second attack, miscreants
damaged the monitoring bridge on which a local gate controller
was supported. This resulted in malfunctioning of
gate controller. Finally, farmers who use the canal water for
irrigation have made repeated attempts to steal water from
the canal by tampering water offtakes and installing additional
pumps to withdraw water. This threat remains a challenge
for the management agency. Although these attacks
were primarily physical, they directly affected the functioning
of the SCADA system. In addition, several cyber-attacks
on other water SCADA systems have been reported, for e.g.,
the Tehama colusa canal incident, Maroochy water breach
incident, and Harrisburg water filtering plant incident.
1.2
Stealthy deception attacks
An adversary's motivation to attack a water SCADA system
may be financial, malicious or even anti-social. An adversarial
user wanting financial gains may want to steal the
water without having to pay the charge for its use. Also,
the adversary may steal the field devices and the communication
system equipment to sell them for profit. An insider
who is disgruntled with the water SCADA managing agency
or a user who wants to gain advantage over other users are
examples of adversaries with malicious intent. Finally, the
adversary may be a miscreant who is just interested in causing
any harm to the water distribution system.
In this article, we will consider deception attacks on sensors
and controllers. During a deception attack, the adversary
sends false information from (one or more) sensors
or controllers. The false information can include: an incorrect
measurement, the incorrect time when the measurement
was observed, or the incorrect sender id. The adversary can
launch these attacks by obtaining the secret keys used by
the devices, or by compromising some sensors or controllers.
1.3
Focus of the article
During the past decade, several automatic control methods
were developed and implemented into SCADA systems
for regulatory control of canal networks [13]. These SCADA
systems use sensor measurements to compute control actions
based on a given hydrodynamic model and set-points
provided by the canal supervisor (who decides the supervi162
sory control actions). The hydrodynamic models range from
simple algebraic equations to more complex one-dimensional
shallow water equations. Canal control methods range from
frequency-domain based (robust) PI controllers to more sophisticated
methods such as H∞, ℓ1, linear quadratic regulator
(LQG), and model predictive control (MPC).
Despite significant developments in the automatic control
methods for canal systems with desired performance guarantees
and robustness margins, we have at best little understanding
of the resilience or defenses of SCADA systems
under malicious attacks [11]. The methods for detection
and diagnosis of random component failures are often not
sufficient to deal with actions of an active adversary. Unfortunately,
management agencies often assume that insiders
are trustworthy, and only worry about outsider attacks.
In contrast, IT security solutions traditionally deal with
prevention mechanisms such as authentication, access control,
software security; detection mechanisms such as intrusion
detection and malware filtering as well as resilient architectures
such as separation of duty [9]. However, the
computer security community has not analyzed adversarial
actions that can compromise sensor and control data to affect
the intended goal of automatic control methods.
In view of the aforementioned discussion, the aim of the
present article is to characterize the effect of adversarial actions
on the sensor and control data on the performance of
the canal system. In particular, we aim to
a) Investigate the stealthy deception attacks on sensor and
control data that can disrupt the intended purpose of
commonly used P and PI controllers by increasing water
loss and decreasing operational efficiency.
b) Characterize the difficulty in the detection of attacks
due to slow and distributed nature of the system.
c) Illustrate the effect of deception attacks on SCADA
performance by conducting a field operational test on
a physical canal controlled by PI controllers.
This article is organized as follows: Section 2 discusses
PDE models for a cascade of canal pools that is typical for
a canal network. The adversary's actions are modeled by
switching hyperbolic systems and an analysis on stability
and performance of resulting a proportional control scheme
is presented in Section 3. Section 4 discusses PI control design
for a low frequency approximation of the PDE model
and forms the basis of our experiments. Results from deception
attacks conducted in simulation and in field operational
experiment are presented in Section 5. Finally, we discuss
the salient point of our analysis in Section 6.
2. SCADA REGULATORY CONTROL
2.1
Model of cascade canal system
We consider an irrigation canal system represented as a
cascade of m individual canal pools as shown in Figure 1.
Each canal pool is represented by a portion of canal in between
two automated sluice gates. We will assume that each
pool is prismatic, with a rectangular cross-section of constant
width T in (m), length X in (m) and bed slope Sb in
(m/m). For pool i, we denote Ui−1(t) and Ui(t) the opening
of the upstream and downstream sluice gates in (m) respectively
at time t.
Yup
ξ−,1
t
0 x
V1(t, x)
Y1(t, x)
U0(t)
Reach 1
P1(t)
V2(t, x)
Y2(t, x)
U1(t)
Reach 2
P2(t)
ξ+,1 ξ−,2
ξ+,2
0 x
0 x
Figure 1: (a) Cascade of canals operated by underflow
sluice gates. (b) Characteristic variables for
each reach.
2.1.1
Networked Shallow Water Equations
The unsteady flow dynamics of each canal pool are classically
modeled with the one-dimensional shallow water equations
(SWE) [3]. The SWE are nonlinear hyperbolic partial
differential equations describing evolution of the average
cross-sectional velocity Vi(x, t) in (m/s) and the water
depth Yi(x, t) in (m) as a function of space variable
x ∈ (0, X) and time variable t ∈ R+. The SWE for pool i is
stated as
∂
∂t
Yi
Vi
∂
+ F (Yi, Vi) ∂x
Yi
Vi
Vi Yi
g Vi
for (x, t) ∈ (0, X) × R+ with
F (Yi, Vi) =
,
H(Yi, Vi, Pi) =
= H(Yi, Vi, Pi)
(1)
−Pi/T
g(Sb − Sfi)
where g is the gravitational acceleration (m/s2), Pi(x, t) is
the distributed lateral outflow per unit length of pool i in
(m2/s) (Pi(x, t) < 0 for inflow at (x, t)), and Sfi the friction
slope for pool i in (m/m). The friction slope is given by
Sfi =
4
Vi2η2(T + 2Yi) 3
4
(T Yi) 3
,
where η is the Manning's roughness coefficient (sm−1/3). We
will henceforth assume that flow in the canal pools is subcritical,
that is, Vi2 < gYi. For notational convenience, we
will denote F (Yi, Vi) as Fi and H(Yi, Vi, Pi) as Hi.
We have measurements of water levels Y at the upstream
and downstream of each canal pool, i.e. Yi(0, t) and Yi(X, t).
The control actions are imposed by actuators that can change
the gate openings Ui−1(t) and Ui(t). The discharge relationships
for the upstream and downstream sluice gates are given
by
V1(0, t)Y1(0, t) = U0(t)pYup − Y1(0, t),
Vm(X, t)Ym(X, t) = Um(t)pYm(X, t) − Ydo,
where the water levels Yup and Ydo are assumed to be constant.
For the intermediate gates i = 1, . . . , m − 1,
Vi(X, t)Yi(X, t) = Ui(t)pYi(X, t) − Yi+1(0, t),
Vi(X, t)Yi(X, t) = Vi+1(0, t)Yi+1(0, t),
where the second equation results from flow conservation
at each gate. Equations (2)-(5) specify the 2m boundary
conditions for (1). The flow in (m3/s) at any cross-section is
defined as Qi = T · Yi · Vi; thus, equations (2)-(5) imply that
we can impose flows Qi(0, t) and Qi(X, t) at the upstream
(2)
(3)
(4)
(5)
Yi
Vi
=
Yi
Vi
(ξ+,i−ξ−,i)2 !
16g
ξ−,i+ξ+,i
2
.
and downstream of each pool i. The initial conditions are
given by
Yi(x, 0) = Y0,i(x) and Vi(x, 0) = V0,i(x).
(6)
2.1.2
Riemann Coordinates
System (1) is strictly hyperbolic if the matrix Fi has real
and distinct eigenvalues given by λ±,i = Vi ± √gYi. These
eigenvalues are called characteristic velocities and for subcritical
flow, they satisfy λ−,i < 0 < λ+,i. We now diagonalize
the system (1) in the Riemann coordinates. Consider
the following change of coordinates
ξi =
ξ−,i
ξ+,i
:=
Vi − 2√gYi
Vi + 2√gYi
whose Jacobian matrix
 −q Ygi
Di =  +q g
Yi
1 
1 
diagonalizes the matrix Fi in (1) such that
DiFiDi−1 = Λi where Λi =
When necessary, we will use the notation Φi = 2√gYi. Thus,
we can write ξi = (Vi − Φi, Vi + Φi)⊤. The change of coordinates
can be inverted as
λ−,i
0
0
λ+,i
.
(8)
U2(t) Um−1(t)
Vm(t, x)
Ym(t, x)
Um(t) Ydo
Reach m
Pm(t)
ξ−,m
ξ+,m
(7)
(9)
(10)
1
1
.
163
where
and
E(ξi, Pi) =
Pre-multiplying equation (1) with D, noting (8), and using
the definition (7) we obtain
∂ ∂
∂t ξi = Di ∂t
,
∂ ∂
∂x ξi = Di ∂x
Yi
Vi
we obtain the SWE model in Riemann coordinates
∂ ∂
∂t ξi + Λ(ξi) ∂x ξi = E(ξi, Pi),
Λ(ξi) =
3ξ−,i+ξ+,i
4
0
0
ξ−,i+3ξ+,i
4
!
,
4gPi
T (ξ+,i − ξ−,i)
+1
−1
+ g(Sb − Sf (ξi))
Here Λ(ξi) and Sf (ξi) respectively denote Λi and Sfi expressed
in ξi coordinates.
2.1.3
Linearized Shallow Water Equations
Under constant gate openings U0(t) = U¯0, U1(t) = U¯1,
¯
. . . , Um(t) = Um and constant withdrawal rates P (t, x) =
P¯i(x), the SWE (1) achieves a steady state. The discharge,
water level, velocity, and friction slope of pool i corresponding
to steady state are denoted by Q¯i(x), Y¯i(x), V¯i(x) and
S¯fi(x). We will omit henceforth the dependence on x for
the sake of conciseness. The steady state solution (Y¯i, V¯i)
satisfies
∂∂t VY¯¯ii = 0, ∂∂x VY¯¯ii = F −1(Y¯i, V¯i)H(Y¯i, V¯i, P¯i),
and can be easily obtained by solving the ODEs
By defining
dQ¯i = −Pi
¯
dx
T dY¯i =
dx
Q¯i2
gY¯i − (T Y¯i)2
−1
gT Y¯i(Sb − S¯fi) +
Q¯iP¯i
T Y¯i
,
and noting that V¯i = (T Y¯i)−1Q¯i. The steady state solution
in the Riemann coordinates (ξ¯−,i, ξ¯+,i) can now be obtained
as ξ¯−,i = (V¯i − 2pgY¯i) and ξ¯+,i = (V¯i + 2pgY¯i). Indeed,
following (10), ξ¯i = (ξ¯−,i, ξ¯+,i)⊤ satisfies
∂∂t ξ¯i = 0,
∂∂x ξ¯i = Λ(ξ¯i)−1E(ξ¯i, P¯i).
We now linearize (10) around the steady state (ξ¯i, P¯i). For
a given term f (ξi, P ) of (10), we use the approximation of
Taylor's expansion:
f (ξi, Pi) ≈ f (ξ¯i, P¯i)+
∂f
∂ξ−,i
∂f
∂ξ+,i
ζ−,i+
ζ+,i+
∂f
∂Pi
pi
where we define ζ−,i = (ξ−,i − ξ¯−,i), ζ+,i = (ξ+,i − ξ¯+,i)
eavnadlupait=ed(aPti s−tePa¯di)y; satnadte(¯c·)onindditicioantes.s Ltheattζial:l=q(uζa−n,tii,tζi+es,i)a⊤re.
Using (7), we can express ζi in terms of physical variables
ζi =
Vi − V¯i − 2(√gYi − pgY¯i) ! =:
Vi − V¯i + 2(√gYi − pgY¯i)
vi − ϕi
vi + ϕi
,
with vi = Vi − V¯i and ϕi = Φi − Φ¯ i.
Referring to equation (32) in the Appendix A, the linearized
SWE around the steady state (ξ¯i, P¯i)
∂ ∂
∂t ζi + Λ¯i(x) ∂x ζi + B¯i(x)ζi = C¯i(x)pi,
(11)
where Λ¯ i(x), B¯i(x), and C¯i(x) are used to denote Λ(ξ¯i),
B(ξ¯i, P¯i), and C(ξ¯i) respectively.
For each canal pool, we impose the boundary control actions
of the form
ζ+,i(0, t) = −g0,iζ−,i(0, t), ζ−,i(X, t) = −gX,iζ+,i(X, t),
(12)
or equivalently
Vi(0, t) = V¯i(0) Vi(X,
t) = V¯i(X) +
1 − g0,i
1 + g0,i
1 − gX,i
1 + gX,i
(Φi(0, t) − Φ¯ i(0))
(Φi(X, t) − Φ¯ i(X)),
(13)
where 0 < g0,i and 0 < gX,i.
The change in gate openings ui(t) := (Ui(t) − U¯i) can now
be expressed as feedback boundary control actions in terms
of the local gate openings using (13) and linearized gate
equations; see the system of equations (36) in Appendix B.
Note that the boundary control actions are of proportional
(P) type and are decentralized in nature, i.e. they are locally
computed using water level sensor measurements.
The initial data is specified as
ζ¯i(x) =
Vi(x, 0) − V¯i(x) − (Φi(x, 0) − Φ¯i(x))
Vi(x, 0) − V¯i(x) + (Φi(x, 0) − Φ¯i(x))
. (14)
164
ζ− = (ζ−,1, . . . , ζ−,m)⊤, ζ+ = (ζ+,1, . . . , ζ+,m)⊤,
Λ¯ − = diag(λ¯−,1, . . . , λ¯−,m),
Λ+ = diag(λ¯+,1, . . . , λ¯+,m),
¯
ζ =
ζζ+
,
Λ¯(x) =
Λ¯0
0
¯
Λ+
,
we can assemble the individual equations (11) for all canal
pools to obtain the linearized SWE for the cascade of canals
∂
ζ + Λ¯(x)
∂t
∂ ζ + B¯(x)ζ = C¯(x)p,
∂x
where p = (p1, . . . , pm)⊤, and the matrices B¯(x) and C¯(x)
are 2m × 2m and 2m × m dimensional matrices obtained by
assembling B¯i(x) and C¯i(x) respectively.
Assembling (12) we obtain the boundary conditions
ζ+(0, t) = ΓLζ−(0, t), ζ−(X, t) = ΓRζ+(X, t),
(16)
where we define
ΓL = −diag(g0,1, . . . , g0,m),
ΓR = −diag(gX,1, . . . , gX,m),
and assembling (14), we obtain the initial condition
ζ(x, 0) = ζ¯(x)
where ζ¯(x) = (ζ¯−,1(x), . . . , ζ¯−,m(x), ζ¯+,1(x), . . . , ζ¯+,m(x))⊤.
Equations (15)-(17) specify the hyperbolic initial boundary
value problem (IBVP) and models the cascade of canals
pools with offtakes.
3.
3.1
ANALYSIS OF DECEPTION ATTACKS
Modeling attacks as switching PDE
We now extend the model (15)-(17) to include the actions
of an adversary that influences the lateral water outflow
through offtakes and also manipulates sensor data.
3.1.1
Modeling water withdrawal of the attacker
We assume that the canal pool i has Ji offtakes and that
the j−th offtake of the i−th canal pool is present along
length x, where 0 < xi,j ≤ x ≤ xi,j < X. The lateral outflow
along the length of the i−th canal pool can be expressed
as
pi(x, t) =
(pi,j(t) x ∈ [xi,j, xi,j], j = 1 . . . , Ji
0 otherwise
where pi,j(t) is the outflow per unit length of the j−th offtake
of the i−th canal pool. We define the indicator Xi,j(x)
for the j−th offtake of the i−th canal pool by
Xi,j(x) =
(1 if x ∈ [xi,j, xi,j]
0 otherwise .
Using this notation, we can express the total lateral withdrawal
from all the Ji offtakes for i−th canal pool as
(15)
(17)
(18)
(19)
(20)
Ji
pi(x, t) = X pi,j(t)Xi,j(x).
j=1
Defining the Pim=1 Ji−dimensional vector as
⊤
ρ(t) = (p1,1, . . . , p1,J1 , . . . , pm,1, . . . , pm,Jm ) ,
and assembling the offtakes for all canal pools we obtain
p(x, t) = Ξ(x)ρ(t)
where Ξ(x) is a m × Pim=1 Ji matrix function defined using
(19). Plugging the expression of p in equation (15), we
obtain
∂
∂t
∂
∂x
ζ + Λ¯(x)
ζ + B¯(x)ζ = C¯(x)Ξ(x)ρ(t).
We now assume that the adversary can influence withdrawal
of water through one or more of the Ji offtakes located
along the length of each canal pool i. A reasonable
model of water withdrawal through offtakes is to assume
a piecewise-constant switching signal because water is
withdrawn by discretely opening/closing the offtake gates.
Thus, we assume that under the influence of the adversary,
the offtake withdrawal vector ρ(t) switches discretely among
a set of modes Q = {1, . . . , N } according to a piecewiseconstant
switching signal σ(·) : R+ → Q. Thus, following
switching PDE models the offtake withdrawal under discrete
open/close actions of the adversary
∂
∂t
ζ + Λ¯ (x)
∂ ζ + B¯(x)ζ = Ξ¯(x)ρσ(t).
∂x
(21)
where Ξ¯ := C¯Ξ.
3.1.2
Modeling sensor deception attacks
We now illustrate the model of a deception attack on
sensor measurements which are water level measurements
for upstream Yi(0, t) and downstream Yi(X, t) of each canal
pool and the gate openings Ui(t). Since we operate in linearized
domain, this is equivalent to the deception attacks
on ϕi = 2√g(√Yi − pY¯i) and ui = Ui − U¯i. We simply
refer to ϕi as the transformed water level and ui as the gate
opening.
For the ease of presentation, we will only explain the case
of deception attacks on the transformed upstream water
level ϕ1(0, t) and the gate opening u1(t) of the first canal
pool and generalize to the case of attacks on other sensor
measurements later. Using (12) and (33) in Appendix B, we
can write
ζ+,1(0, t) = −g0,1(v1(0, t) − ϕ1(0, t))
= −g0,1 ((k1,0 − 1)ϕ1(0, t) + ku0 u0(t))
Now suppose that the adversary conducts deception attacks
on ϕ1(0, t) and u0(t); the values manipulated by the adversary
are denoted ϕ˜1(0, t) and u˜0(t) respectively. Under
attack, ζ+,1 becomes
ζ+,1(0, t) = −g0,1 ((k1,0 − 1)ϕ˜1(0, t) + ku0 u˜0(t)) .
We can now conclude that the effect of deception attack
on sensor measurements is equivalent to changing boundary
control parameter g0,1 to g˜0,1 where
(k1,0 − 1)ϕ˜1(0, t) + ku0 u˜0(t)
g˜0,1 = g0,1 (k1,0 − 1)ϕ1(0, t) + ku0 u0(t)
.
The same argument can be extended to capture the effect of
deception attacks on other sensor measurements; that is,
the deception attacks of water level ϕi(0, t) and ϕi(X, t)
and gate sensors ui(t) can be equivalently characterized by
changing the boundary control parameters g0,i and gX,i.
As for the case of water withdrawal through offtakes, we
can now assume the adversary conducts deception attacks
165
on sensor measurements according to a piecewise-constant
signal σ(t). We can now model the effect of deception attack
on sensor measurements as boundary control actions that
switch among a set of modes Q = {1, . . . , N } according to
a piece
ζ+(0, t) = Γσ(t)ζ−(0, t), ζ−(X, t) = ΓσR(t)ζ+(X, t), (22)
L
We conclude that the switching hyperbolic system (21),
(17), (22) models the adversary's action on water withdrawal
from offtakes and deception attack on sensor measurements.
Thus, under the adversary's action, the water withdrawal
rates ρ and the proportional control parameters ΓL and ΓR
switching system are known to satisfy
(ρ, ΓL, ΓR) ∈ {(ρj , ΓjL, ΓjR) : j ∈ Q}
adversary.
aoft manoydetsimaendt, >for0a,llwjhe∈reQQ, ρ=j, Γ{1jL,,.Γ.jR., Nare} cishoasefinnbitye tsheet
3.1.3
Stability under switching caused by adversary
We now characterize stability of the cascade canal pool
under switching cause by adversary. Referring to [7], we note
that given a non-zeno switching signal σ(·), the solution of
the switching system (21), (17), (22) exists and is unique.
In particular, under certain regularity assumptions on the
matrix functions Λ¯(x), B¯(x), and Ξ¯(x), there exists a unique
solution
ζ(·, t) ∈ L∞(R+; L∞((0, X); R2m)).
The switching system is said to be exponentially stable
(with respect to a norm k · k∞) if there exist constants c ≥ 1
and β > 0 such that the solution ζ(t, ·) satisfies
kζ(t, ·)k∞ ≤ c exp(−βt)kζ(0, ·)k∞, t ≥ 0.
(23)
We say that the switching system is absolutely exponentially
stable (with respect to a norm k · k∞) if (23) holds for all
non-zeno σ(·) with constants c ≥ 1 and β > 0 independently
of σ(·).
Following the theory presented in [7], we can state the stability
result under switching caused by adversary. In particular,
if a spectral radius condition is jointly satisfied for the
left and right boundary data and all pairs of modes j, j′
then sufficiently small bounds on kB¯(x)k∞ and kΞ¯(x)ρj∈k∞Q
exist such that the switching system is absolutely exponentially
stable with respect to the norm k · k∞. We define
the spectral radius ̺(M ) of a non-negative matrix M as the
absolute value of the largest eigenvalue of M.
Theorem 1. Suppose that for j, j′ ∈ Q the following condition
holds:
̺
" 0
j
|ΓL|
j′ #!
|ΓR |
0
< 1.
(24)
Then there exists an ǫ1 > 0 and ǫ2 > 0 such that if kB¯(s)k∞ <
ǫ1 and kΞ(x)ρjk∞ < ǫ2 for all x ∈ [0, X] and j ∈ Q, the
switching system (21), (17), (22) is absolutely exponentially
stable with respect to the norm k · k∞.
Proof. The result is obtained by deriving L∞ bounds
on the solution of the switching system based on method of
characteristics and is a straightforward generalization of the
result presented in [7].
Even though the conditions of Theorem 1 are only sufficient
and not necessary, we note that the switching caused
due to adversary's action can easily lead to instability. We
refer the reader to a simple example in [8] of an unstable
switching system resulting from switching between two exponentially
stable subsystems. Next, we will qualitatively
argue that even though the switching system resulting from
the adversary's action is stable, detecting the attack just
based on the boundary measurements may be an inherently
difficult problem.
3.2
Limits on detectability of attacks
We now argue the difficulty in detection of attack by using
the method of characteristics. For each mode j ∈ Q, the
PDE subsystems
∂ ζj + Λ¯(x) ∂ ζj + B¯(x)ζj = Ξ¯(x)ρj
∂t ∂x
ζ+j(0, t) = ΓjLζ−j(0, t), ζ−j(X, t) = ΓjRζ+j(X, t)
can be transformed into an equivalent set of ODEs. In particular,
for each i, where i = 1, . . . , 2m, and each point
(x∗, t∗), the ODE
ddt zij(t) = λi(zij(t)), zij(t∗) = x
∗
has a unique solution, defined for all t. We say that t 7→
zij(t; x∗, t∗) passing through (x∗, t∗) is the i−th characteristic
curve for the j-th subsystem.
Equations (25) and (26) imply that ζij, i = 1, . . . , 2m,
satisfy
Υ
ddt ζij(t, zij(t; x∗, t∗)) = X υiϑ(zij(t; x∗, t∗))ρjϑ
ϑ=1
2m
− X bik(zij(t; x∗, t∗))ζkj (t, zij(t; x∗, t∗))
k=1
along almost every characteristic curve zij(t; x∗, t∗). Here
bik(·) corresponds to the i-th row and k-th column of B¯(·),
υiϑ(·) corresponds to the i−th row and ϑ−th column of Ξ¯(·),
and Υ = Pm
l=1 Jl.
It is clear from (26) and (27) that at any change in the
water withdrawal strategy via offtakes (switching from ρj to
′
ρj ) will affect the solution ζ of the switching PDE; however,
the slope of the characteristic paths do not change under
offtake switching. As observed by [10], the change in transformed
water level ϕi at the gate locations could be very
small under the effect of changing offtake withdrawals. Secondly,
the withdrawals from different offtakes may have very
similar effect on the downstream water level and it might
be necessary to measure water level at multiple points along
the canal pools to distinguish between different offtake withdrawal
strategies of the adversary. Lastly, even if the effect
of offtake withdrawal is observed by water level sensors, the
adversary can conduct deception attacks on these sensors.
These qualitative arguments suggest that detecting change
in offtake withdrawal strategy can be very difficult, especially
under the influence of an adversary that can manipulate
water level sensor readings.
4.
CONTROL USING APPROX. MODEL
We now discuss the proportional integral (PI) controller
based on a frequency domain approximation of the PDE
(25)
(26)
(27)
166
system (15)-(17). For a link between characteristic curve
approach introduced in the last section and the frequency
domain approach, the reader is referred to [12]. The PI
controllers are well-suited for field implementation and can
be easily tuned by standard tuning methods such as the
auto-tuned variation method [15]. We will use PI controller,
so tuned, for the actual implementation of deception attack
scenario on a physical canal pool of the Gignac canal system
in the next section. The PI controller also achieves desired
robustness margins based on a standard frequency domain
approach [13]. From the adversary's point-of-view, this theory
points toward synthesis of attack vectors based on only
an approximate knowledge of canal hydrodynamics instead
of full PDE models.
4.1
Integrator-delay model for canal cascade
For the case in which the effect of water withdrawals is
lumped at the downstream end of each canal pool, the system
(15)-(17), can also be analyzed in the frequency domain
using the Laplace transform. Using the upstream and downstream
discharges as control input variables, and the downstream
water level as controlled variable, the input-output
relationship for each canal pool i is given by:
yi(s) = Gi(s)μi(s) + G˜i(s)[μi+1(s) + pi(s)]
(28)
where Gi(s) and G˜i(s) are infinite dimensional transfer functions
and where s is the complex Laplace variable 1. Here,
yi denotes the downstream water level, and upstream, pi denotes
the perturbation, and downstream discharge variables
are denoted as μi and μi+1 respectively. The regulatory
control aim is to regulate yi to a set-point ri. This representation
assumes that the problem of converting the discharge
at the boundary of each pool μi into actual gate openings ui
can be handled locally by a slave controller on each gate,
and the effect of all the offtakes along the canal pool can be
lumped into a single perturbation pi acting near the downstream
end of the pool. For low frequencies, these transfer
functions can be approximated by an Integrator Delay (ID)
model (see [13], Chap. 4, Sec. 4.1 and 4.2, and also [4]).
The ID model is classically used to design PI controllers [6].
The transfer functions for the ID model are given by
Gi(s) =
exp (−τis)
Ais
,
1
G˜i(s) = − Ais
(29)
where τi is the propagation delay of the i−th canal pool (in
s) and Ai is the backwater area (in m2). By assembling (28)
for individual pools, the multi-pool representation of canal
can be obtained as
y = Gμ + G˜p.
4.2
Local upstream PI control of single pool
Frequency domain PI controllers based on ID model perform
satisfactorily in most practical settings [13]. Two classical
canal control policies are commonly used: local upstream
control and distant downstream control. Local upstream
control of a canal pool consists of controlling the
downstream water level yi using the downstream discharge μ2
1For the case when Λ¯(x) and B¯(x) do not vary with x
and when C¯(x) = 0, these transfer functions belong to the
Callier-Desoer algebra [5].
as control action variable. Distant downstream control consists
of controlling y1 using the upstream discharge μ1 as
control action variable.
Let the tracking error be defined as ǫ1 = r1 − y1, and let
the transfer functions of the distant downstream controller
and the local upstream controller be defined as K1(s) and
K2(s) respectively. We have μ1(s) = K1(s)ǫ1 and μ2(s) = 0
for the distant downstream control, μ1(s) = 0 and μ2(s) =
K2(s)ǫ1 for the local upstream control. Then, the tracking
error e1 can be expressed as
ǫ1 =
((1 + G1(s)K1(s))−1[r1 − G˜1(s)p1(s)]
(1 + G˜1(s)K2(s))−1[r1 − G˜1(s)p1(s)] for local u.s.
distant d.s.
Thus we note that disturbance rejection is characterized by
the modulus of the transfer function G˜1(s)(1+G1(s)K1(s))−1
for the case of distant downstream control and by the modulus
of G˜1(s)(1 + G˜1(s)K2(s))−1 for the case of local upstream
control. The control objective is to choose the resopfe|Gc˜t1iv(se)l(i1n+eaGr
1c(osn)tKro1l(lse)r)s−K1|1aanndd|G˜K12(ss)u(c1h+tGh˜a1(tst)hKe2m(so))d−u1li
|
are close to 0 over largest frequency bandwidth. In comparison
to distant downstream control, the local upstream control
has higher performance because there is no time-delay
in G˜1(s) and the achievable bandwidth is only limited by actuator's
limitation. On the other hand, the local upstream
control has low water efficiency because it propagates all perturbations
downstream of the canal pool without managing
the upstream discharge.
We now briefly describe the PI controller tuning for local
upstream control; the design of distant downstream controller
follows similar principles [13]. Writing (29) for a single
canal pool
y1(s) = G1(s)μ1(s) + G˜1(s)[μ2(s) + p1(s)]
with G1(s) = exp (−τ1s)/A1s and G˜1(s) = −1/A1s. For
local upstream control, K1(s) = 0 and
K2(s) = kp 1 +
1
Tis
,
with kp the proportional gain and Ti the integral time. Referring
to [6], we state the following tuning rules for local PI
controller based a relay experiment in order to obtain a gain
margin ΔG dB and a phase margin of ΔΘ◦:
kp = πA1 10−ΔG/20 sin
2τ1
Ti = 2τ1 10ΔG/20 tan
π
π
180
π
180
ΔΘ +
ΔΘ +
π 10−ΔG/20
2
π 10−ΔG/20
2
(30)
(31)
where the phase margin2 satisfies ΔΘ < 90(1 − 10−ΔG/20).
5.
EXPERIMENTAL RESULTS
In order to demonstrate the feasibility of stealthy deception
attacks, we implement deception attacks to compromise
the local upstream controller for the Avencq cross-regulator,
located at 4.5 km from the head gate on the right back of the
2We recall that the gain margin (resp. phase margin) is the
maximum multiplicative (resp. additive) increase in the gain
(resp. phase) of the system such that the system remains
closed-loop stable. These robustness margins in frequency
domain are directly related to the time domain performance
of the system.
167
Figure 2: Upstream of the Avencq station with level
sensor, offtake, and sluice gate with local controller.
Gignac canal (see [1] for a geographical map and Figure 2 for
a picture of the site). The cross-regulator is equipped with
a 1 m wide sluice gate which regulates the upstream water
level to reject the perturbations caused by an offtake located
just upstream. The set-point for the upstream water level is
set to r1 = 79 cm. The upstream water level is measured every
120 s. The parameters of the ID model were obtained by
the relay-feedback auto-tuning method proposed by ˚Astro¨m
and Ha¨gglund [15]. The method uses a single relay experiment
to determine the frequency response of the canal pool
at phase lag of 180◦, which in turn determines the parameters
τ1 and A1 of the ID model. Using the tuning rules (30)
and (31), for classical values of gain margin 10 dB and phase
margin 43◦, we obtain the proportional gain kp = −2.9 and
the integral time Ti = 360 s.
We test our approach for stealthy deception attacks first in
simulation and then in a field test performed directly on the
Gignac canal facility. The stealthy deception attack compromises
the water level sensor measurements y1 to send false
information to the PI controller implemented on the SCADA
system. The goal of the adversary is to withdraw water from
the offtake such that the SCADA system does not respond
to counter adversarial action. In order to achieve this goal,
the adversary injects false data a1 into water level measurement
y1 such that the resulting deviation from set-point is
very close to zero (in fact, during the attack duration attacked
level measurement at each time is effectively set to a
zero mean random noise sample). Upon receiving incorrect
sensor data, the PI controller does not react to the error
which is negligible. This results in degraded performance
with respect to the actual control requirement of perturbation
rejection due to offtake opening. We show next that it
is indeed possible to design an attack vector such that the
adversary is able to affect controller performance without
getting detected even after the attack ends.
5.1
Simulation of Attack Scenarios
The SIC software developed at Cemagref implements an
efficient numerical scheme to fully solve nonlinear shallow
water equations and allows us to choose from a set of preprogrammed
controllers or to test performance of any new
controller implemented in Matlab or FORTRAN [2]. The
second use of the SIC software is that it provides an interface
capability for SCADA real-time control of a physical canal
network, in particular, the Gignac canal. Thus, a controller
tested in simulation can be directly implemented to control
a physical canal without the need to re-code the control algorithm.
This method of testing controller in simulation
first and then implementing on physical canals greatly limits
the possibility of errors due to programming and logical
mistakes.
We now describe two stealthy deception attack scenarios
on water level sensor for the Avencq pool of the Gignac
canal using SIC software as a simulator. In the first attack
scenario, shown in Figure 3, the offtake is opened to
about 3 cm at time t = 15 min after the beginning of the
test. The PI controller reacts rapidly by opening closing the
sluice-gate and rejects the perturbation in about 40 min. At
t = 75 min, the offtake is closed. The controller achieves
good closed-loop performance and rejects the perturbation
in about 45 min by opening the sluice gate as shown in Figure
4. The offtake is again opened and closed at t = 255 min
Figure 3: Offtake opening and additive attack with
no recovery on upstream water level in SIC.
and t = 315 min, - this time under the influence of adversary's
action. The adversary injects an additive deception
attack on water level sensor measurements such that the difference
of resulting sensor measurement with the set point
is effectively zero (see figure 3). Therefore, the PI control
does not react to the opening of the offtake3. The effect of
additive attack on the performance of local upstream controller
is shown in Figure 4. Even after the closing of the
offtake at t = 315 min, the adversary continues the deception
attack until t = 495 min when the water level - evolving
in open-loop - comes close to the set point r1 = 79 cm. At
t = 495 min the adversary stops the deception attack and PI
controller reacts to the residual error. The SCADA may be
able detect the occurrence of attack a posteriori because the
residual error at the end of attack is not negligible. We note,
however, that for the canal manager monitoring SCADA
supervisory interface it may be still difficult to distinguish
between the residual error resulting from an attack or an error
resulting from a small perturbation in the offtake. The
amount of water the adversary manages to withdraw from
the offtake during t = 255 min and t = 315 min can be
3This is also equivalent to saying that the control actions
are subject to denial-of-service attacks.
168
Figure 4: Performance of local upstream PI controller
at Avencq cross-regulator under attack with
no recovery (SIC simulation).
computed by integrating the gate discharge equation
Qp = UgpY (X, t),
where Y (X, t) is the actual water level and Ug is the actual
gate opening scaled by CdLg√2g, with Cd the discharge coefficient,
Lg the width, and Ug the opening of the offtake
gate. Note that under our assumptions, the adversary has
the knowledge of actual water level and the opening of offtake
gate.
Our second attack scenario consists of increasing the duration
of the deception attack so as to bring the residual
error at the end of attack negligibly close to zero. The adversary
achieves this by continuing to manipulate the water
level measurements from t = 495 min until t = 675 min such
that the residual error gradually becomes negligible by the
end of attack. We call this period the recovery period. As
shown in Figure 5, the PI controller is unable to detect any
deviation from set-point even after the attack ends. This
illustrates that an deception attacks on sensors can indeed
be made stealthy in that they remain undetected well after
the end of attack.
5.2
Field test on the Gignac canal
We now illustrate the feasibility of carrying out deception
attacks on canal SCADA systems in real-life with an experiment
conducted on the Avencq cross-regulator on October
12th, 2009 with the help of real-time SCADA interface of the
SIC software. This experiment was intended to be a proofof-concept
experiment and so we carried out the adversarial
actions directly by modifying the sensor measurements
sent from real-time SCADA interface of SIC to the Matlab
code that implements PI controller for computing the control
action for the sluice-gate. Thus for the purpose of this
experiment, we played the adversarial role. This will have
the same effect as a hypothesized deception attack on the
radio communication link between the level sensor and the
SCADA system.
At the start of experiment, we allowed the PI controller
to react by changing set-points every few minutes and then
Figure 5: Performance of local upstream PI controller
at Avencq cross-regulator under attack with
recovery (SIC simulation).
letting the water level stabilize close to set-point in closedloop.
As shown in Figure 6, at t = 90 min, the offtake is
opened and the adversary injects additive attack to water
level measurement such that the PI controller fails to react
to perturbation. At around t = 184 min the offtake was
Figure 6: Offtake opening and additive attack upstream
water level during the field operational test.
fully opened and then fully closed at around t = 190 min by
a physical intervention at the Avencq cross-regulator. This
effect is captured in the sudden drop in the actual water level
as shown in Figure 7. From t = 190 min until t = 360 min,
we (the adversary in this case) continue the deception attack
resulting in open-loop response of actual water level, The
recovery period lasts from t = 360 min to t = 510 min
using the same recovery action as in the case of simulation
experiment described above. However, a residual error still
remains after the end of recovery period (which is also the
end of attack) and the PI controller reacts to this error. As
seen in Figure 7, it is difficult to distinguish between the
response of PI control after the attack ends from a normal
reaction to perturbation in the case of no attack.
169
Figure 7: Performance of local upstream PI controller
at Avencq cross-regulator under attack (field
operational test).
6.
CONCLUDING REMARKS
In this article, we used the theory of switching boundary
control of PDEs to model deception attacks on SCADA
systems managing a cascade of canal pools. We presented
an extension of a well known stability mechanism for hyperbolic
PDE systems as a sufficient condition to guarantee
exponential stability under proportional control, and noted
that synthesis of adversarial actions leading to instability
can be worked out easily. We qualitatively argued that an
adversary can evade detection by stealthily manipulating
certain sensor measurements. In order to demonstrate the
effect of deception attacks on an actual SCADA system, we
presented results from a field operational test on the Gignac
canal system in France and also analyzed the performance
degradation of PI controller designed for a low-frequency approximation
of the more general PDE model. Our results
indicate that it is possible for an adversary to withdraw water
from the canal while evading detection.
Our synthesis of deception attacks to stealthily withdraw
water for a single canal pool can be extended to the case of
multiple canal pools. This could be done by approximating
the effect of water withdrawal at the downstream canal pool
and subsequently manipulating the sensor readings of the
downstream pool to deceive the local controller such that it
does not react to the actual perturbation. Although we only
implement attacks for a local upstream controller, similar
analysis could be done for a distant downstream controller
as well as for decentralized multi-variable controllers [13].
An interesting research question is then to characterize the
trade-off between the effort of adversary versus the impact
of resulting deception attack. Such control theoretic characterization
can help in evaluating the robustness of practical
control methods under attacks and point toward the design
of better attack detection methods.
7.
ACKNOWLEDGMENTS
This work was supported in part by Cemagref, the FranceBerkeley
Fund, and the TRUST (Team for Research in Ubiquitous
Secure Technology), which receives support from the
National Science Foundation (#CCF-0424422) and the following
organizations: AFOSR (#FA9550-06-1-0244), BT,
Cisco, DoCoMo USA Labs, EADS, ESCHER, HP, IBM,
iCAST, Intel, Microsoft, ORNL, Pirelli, Qualcomm, Sun,
Symantec,TCS, Telecom Italia, and United Technologies.
The authors are grateful to Celine Hugodot, David Dorchies,
Alvaro A. C´ardenas, and Falk M. Hante for their help.
8. REFERENCES
[1] Experiment Station Research for the modernization of
irrigation canals.
http://gis-rci.montpellier.cemagref.fr/.
[2] SIC 3.0, a simulation of irrigation canals.
http://www.canari.free.fr/sic/sicgb.htm.
[3] J. de Halleux, C. Prieur, B. Andrea-Novel, and
G. Bastin. Boundary feedback control in networks of
open channels. Automatica, 39(8):1365-1376, 2003.
[4] X. Litrico and V. Fromion. Analytical approximation
of open-channel flow for controller design. Applied
Mathematical Modeling, 28(7):677-695, 2004.
[5] X. Litrico and V. Fromion. Boundary control of
hyperbolic conservation laws using a frequency domain
approach. Automatica, 45(3), 2009.
[6] X. Litrico, P.-O. Malaterre, J.-P. Baume, P.-Y. Vion,
and J. Ribot-Bruno. Automatic tuning of PI
controllers for an irrigation canal pool. Journal of
irrigation and drainage engineering, 133(1):27-37,
2007.
[7] S. Amin, F. Hante, and A. Bayen. Exponential
stability of switched hyperbolic systems in a bounded
domain. Technical report, UC Berkeley, 2008.
[8] S. Amin, F. M. Hante, and A. M. Bayen. On stability
of switched linear hyperbolic conservation laws with
reflecting boundaries. In HSCC, pages 602-605, 2008.
[9] R. Anderson. Security Engineering. Wiley, 2001.
[10] N. Bedjaoui, E. Weyer, and G. Bastin. Methods for
the localization of a leak in open water channels.
Networks and Heterogeneous Media, 4(2):189-210,
2009.
[11] A. Cardenas, S. Amin, and S. Sastry. Research
challenges for the security of control systems. In 3rd
USENIX workshop on Hot Topics in Security (HotSec
'08). Associated with the 17th USENIX Security
Symposium, July 2008.
[12] X. Litrico and V. Fromion. A link between riemann
invariants and frequency domain approaches for
boundary control of open channel flow. In 47th IEEE
Conference on Decision and Control, December 2008.
[13] X. Litrico and V. Fromion. Modeling and Control of
Hydrosystems. Springer, 2009.
[14] P. Malaterre and C. Chateau. SCADA interface of the
sic software for easy real time application of advanced
regulation algorithms. In Second Conference on
SCADA and Related Technologies for Irrigation
System Modernization, Denver, Colorado, 2007.
[15] ˚Astro¨m and Ha¨gglund. PID controllers: Theory,
design, and tuning. Instrument society of America,
1995.
170
APPENDIX
A.
LINEARIZATION OF SWE
Linearizing (10) around the steady state (ξ¯i, P¯i) we obtain
∂t(ξi − ξ¯i) = ∂tζi
Λ(ξi)∂xξi − Λ(ξ¯i)∂xξ¯i = Λ(ξ¯i)∂xζi + B1(ξ¯i)ζi
E(ξi, Pi) − E(ξ¯i, P¯i) = B2(ξ¯i, P¯i)ζi + B3(ξ¯i)ζi + C(ξ¯i)pi,
where
B1(ξ¯i) =
1
4
B2(ξ¯i, P¯i) =
B3(ξ¯i) = −g
C(ξ¯i) =
∂xξ¯−,i
∂xξ¯+,i
3∂xξ¯−,i
3∂xξ¯+,i
4gP¯i
T (ξ¯+,i − ξ¯−,i)2
∂ξ−,i Sfi
∂ξ−,i Sfi
4g
T (ξ¯+,i − ξ¯−,i)
+1
−1
,
.
−1 +1
+1 −1
∂ξ+,i Sfi
∂ξ+,i Sfi
,
!
,
We now obtain the linearized SWE in ζi coordinates as
∂tζi + Λ(ξ¯i)∂xζi + B(ξ¯i, P¯i)ζi = C(ξ¯i)pi.
(32)
where B(ξ¯i, P¯i) = (B1(ξ¯i) − B2(ξ¯i, P¯i) − B3(ξ¯i)).
B.
GATE CONTROL EQUATIONS
Linearizing (2)-(5) expressed in V and Φ variables around
the steady state (V¯i, Φ¯ i, U¯i), we obtain
v1(0, t) = k1,0ϕ1(0, t) + ku0 u0(t)
vm(X, t) = km,X ϕm(X, t) + kum um(t)
vi(X, t) = ki,X ϕi(X, t) + ki+1,0ϕi+1(0, t) + kui ui(t)
(33)
and
where
αi,X vi(X, t) + βi,X ϕi(X, t)
= αi+1,0vi+1(0, t) + βi+1,0ϕi+1(0, t)
(34)
where the index i varies as i = 1, . . . , m − 1. The coefficients
in (33) and (34) depend on the steady state. Using (13),
(34), and noting vi = Vi − V¯i, ϕi = Φi − Φ¯ i, we obtain
Φi+1(0, t) = Φ¯ i+1(0) +
γi,X (Φi(X, t) − Φ¯ i(X))
γi+1,0
(35)
γi,X = βi,X + αi,X
γi+1,0 = βi+1,0 − αi+1,0
1 − gX,i
1 + gX,i
1 − g0,i
1 + g0,i
.
Now using (13) and (35) in the linearized boundary conditions
(33) gives us the gate control actions:
1
u0(t) = − ku0
1 − g0,i + k1,0 (Φ1(0, t) − Φ¯ 1(0)),
1 + g0,i
um(t) =
1
kum
1 − gX,m
1 + gX,m
ui(t) = Kui (Φi(X, t) − Φ¯ i(X)),
− km,X (Φm(X, t) − Φ¯ m(X)),
(36)
1−gX,i γi,X
where the coefficient Kui = ku1i 1+gX,i − ki,X − ki+1,0 γi+1,0 .