2015 European Control Conference (ECC)
July 15-17, 2015. Linz, Austria
Further results on fault detection and isolation of malicious nodes
in Multi-hop Control Networks
A. D'Innocenzo, F. Smarra and M. D. Di Benedetto
Abstract- A Multi-hop Control Network (MCN) consists
of a LTI system where the communication between sensors,
actuators and computational units is supported by a (wireless)
multi-hop communication network and data flow is performed
using scheduling, routing and network coding of sensing and
actuation data. In this paper we extend our previous results
in [6] on the Fault Detection and Isolation (FDI) problem
over a MCN where the plant is a MIMO system and the
communication nodes are subject to permanent failures and
malicious attacks. In particular, we provide necessary and
sufficient conditions such that the FDI problem can be solved
with much milder assumptions on the malicious signal.
I. INTRODUCTION
Networked control systems (NCS) are distributed control
systems where the communication between sensors, actuators,
and computational units is supported by a possibly
wireless communication network. The use of wireless NCS
in industrial automation results in flexible architectures and
generally reduces installation, debugging, diagnostic and
maintenance costs with respect to wired networks (see e.g.
[13], [12] and references therein). However modeling, analysis
and design of wireless NCS are challenging open research
problems since they require to take into account the joint
dynamics of physical systems, communication protocols and
network infrastructures. Recently, a huge effort has been
made in scientific research on Networked Control Systems
(NCSs), see e.g. [2], [26], [9], [16], [25], [15], [11], [18]
and references therein for a general overview. Also, as
can be inferred from the survey [10], fault tolerant control
is one of the most challenging issues in NCSs, see e.g.
[27], [20], [5], [3]. In general, the literature on NCSs
addresses non-idealities (such as quantization errors, packets
dropouts, variable sampling and delay and communication
constraints) as aggregated network performance variables
or disturbances, neglecting the dynamics introduced by the
communication protocols. In particular in [1] a simulative environment
of computer nodes and communication networks
interacting with the continuous-time dynamics of the real
world is presented. To the best of our knowledge the first
formal model of a NCS that models the joint dynamics of a
dynamical control system and of the MAC (scheduling) and
Network (routing) layers of a time-triggered communication
protocol over a shared multi-hop wireless network has been
presented in [22]. This framework also models wireless
industrial control protocols such as WirelessHART and ISA100:
note that many on-market engineering products are
Center of Excellence DEWS, Dept. of Information Engineering Computer
Science and Mathematics, Univ. of L'Aquila, Italy. {alessandro.dinnocenzo,
francesco.smarra, mariadomenica.dibenedetto}@univaq.it.
978-3-9524269-3-7 ©2015 EUCA
1860
based on these protocols, see e.g. the Siemens SITRANS
AW200, SITRANS AW210 and IE/WSN-PA Link.
In [7] we defined a Multi-hop Control Network (MCN)
M, that consists of a continuous-time SISO LTI plant P
interconnected to a controller C via two multi-hop communication
networks R (the controllability network) and O (the
observability network), as illustrated in Figure 1. Because
of wireless networking a MCN is subject to failures and/or
malicious attacks in the communication nodes: we will call
malicious cluster any set of communication nodes subject
to a failure or malicious attack and denote by F the set
of all malicious clusters. In [7] we addressed and solved,
for SISO LTI systems, the problem of designing a set of
controllers and the communication protocol parameters, so
that it is possible, only using sensing and actuation data (i.e.
without adding further data communication among nodes for
fault detection), to detect and isolate on-the-fly the malicious
cluster of the controllability and observability networks: this
allows reconfiguring the scheduling only for the neighbor
of the faulty or malicious nodes (which requires much less
communication cost and time w.r.t. reconfiguring all nodes)
and applying an appropriate controller to stabilize the reconfigured
system. In particular, we proposed a solution
to the above problem by solving the following two subproblems.
Problem 1: Assume that the current malicious cluster
f ∈ F is known, and let Mf be the corresponding MCN
dynamics (which consists of the cascade of the controllability
network, the plant and the observability network) due to a
scheduling re-configuration that isolates the faulty nodes. We
address the co-design problem of scheduling and routing so
that, for any malicious cluster f ∈ F , the MCN Mf is
controllable and observable.
If Problem 1 can be solved, then the existence and computation
of a stabilizing controller Cf for any malicious cluster
can be guaranteed using standard techniques.
Problem 2: Assume that the current malicious cluster is
unknown. We address the problem of exploiting the MCN
input and output signals to detect and isolate the current
malicious cluster.
The above problem separation deliberately neglects the
switching dynamics of the closed loop system since it is
based on the assumption that failures/attacks occur with a
time scale much greater than the sampling time, namely we
only consider permanent failures and not transient failures
(e.g. packet losses) [28].
In [6] we solved Problem 2 for MCN where the plant
is a MIMO LTI system, by using some assumptions on
Fig. 1. Control scheme of a MCN subject to node failures and malicious attacks.
the failure/malicious attack signal. In this paper we solve
Problem 2 strongly relaxing such assumption: in particular,
while the results in [6] allowed to detect only a zero-volume
set of malicious signals, the results in this paper allow to
detect all but a zero-volume set of malicious signals.
Notation: We will denote by N, R, R+, R0+ respectively
the sets of natural, real, positive real and non-negative real
numbers. Given n ∈ N, we denote by n the set n =.
{1, 2, . . . , n}. Given a finite set F and a subset H ⊆ F , we
define |H| and |F | their cardinalities, F \ H the difference
set and 2F the power set. Given a matrix A, we denote
by |A| its determinant. We denote by diag(A1, . . . , An)
the n × n diagonal matrix whose diagonal consists of the
elements A1, . . . , An. We denote by 0n×m the matrix of
zeros with n rows and m columns and by In the identity
matrix of dimension n. We denote by F (z) the Z-transform
of a signal f (k) and by diag(F1(z), . . . , Fn(z)) the n × n
diagonal transfer matrix whose diagonal consists of the scalar
transfer functions F1(z), . . . , Fn(z). Given a directed graph
(V , E ) we define path an alternating sequence of vertices and
edges. A path is said to be simple if no vertices are repeated.
A set of paths is said to be vertex disjoint if each two of them
consist of disjoint sets of vertices. A vertex disjoint set of r
simple paths from a set V1 ⊆ V to a set V2 ⊆ V is said to
be an r-linking from V1 to V2.
II. MODELING OF MCNS
Definition 1 below allows modeling time-triggered communication
protocols that specify mixed TDMA, FDMA
and/or CDMA (resp. Time, Frequency and Code Division
Multiple Access) access to a shared communication resource,
for a set of communication nodes interconnected by an
arbitrary radio connectivity graph. In these standards the
access to the shared communication channel is specified
as follows: time is divided into slots of fixed duration ∆
and groups of Π time slots are called frames of duration
T = Π∆ . For each frame, a communication scheduling
allows each node to transmit data only in a specified time
slot. The scheduling is periodic with period Π, i.e. it is
repeated in all frames.
Definition 1: A MIMO Multi-hop Control Network is a
tuple M = (P, G, W, η, )∆ where:
P is a continuous-time MIMO LTI system, with n, m and
ℓ respectively the dimensions of the internal state, input and
output spaces.
G = (GR, GO). GR = (VR, ER) is an acyclic connected
graph, where the vertices correspond to the communication
nodes of the network and an edge from v to v′ means that
node v′ can receive messages transmitted by node v through
the wireless communication link (v, v′). We denote by vc
the special node of VR that corresponds to the controller
and by vu,i ∈ VR, i ∈ m, the special nodes that correspond
to the actuators of the inputs ui, i ∈ m. GO = (VO, EO) is
defined similarly to GR. We denote by vc the special node
of VO that corresponds to the controller and by vy,i ∈ VO,
i ∈ ℓ, the special nodes that correspond to the sensors of the
outputs yi, i ∈ ℓ.
W = (WR, WO). WR = {WRi }i∈m, where WRi :
ER → R+ is a weight function for the input i that associates
to each link a positive constant. WO = {WOi }i∈ℓ is defined
similarly to WR. The role of W will be clear in the following
definition of η.
η = (ηR, ηO). ηR = {ηRi }i∈m, where ηRi : N → 2ER
is the controllability scheduling function for the input i that
associates to each time slot of each frame a set of edges of
the controllability radio connectivity graph GR. Since in this
paper we only consider a periodic scheduling, that is repeated
in all frames, we define the controllability scheduling functions
by ηRi : {1, . . . , Π} → 2ER . The integer constant Π is
the period of the controllability scheduling. The semantics
of ηRi is that (v, v′) ∈ ηRi (h) if at time slot h of each
frame the data associated to input i and contained in node
v is transmitted to the node v′, multiplied by the weight
WRi (v, v′). For any ηRi , we assume that each link can be
scheduled only one time for each frame. ηO = {ηOi }i∈ℓ
is defined similarly to ηR. We remark that the scheduling
period of ηO is the same as that of ηR.
∆ is the time slot duration. As a consequence, T = Π∆
is the frame duration.
Definition 2: Given a controllability graph GR and
scheduling ηRi , we define GR (ηRi (h)) the sub-graph of GR
induced by keeping the edges scheduled in the time slot h.
We define GR(ηRi ) = !Π
h=1 GR(ηRi (h)) the sub-graph of
GR induced by keeping the union of edges scheduled during
the whole frame. We say that the pair (GR, ηRi ) is jointly
connected if there exists a path from the controller node vc
to the actuator node vu,i in GR (ηRi ). Such definition can
be given similarly for GO and ηOi .
1861
U"i(z)
Ui(z) .
= Ri(z) =
D#Ri γRi (d)
d=1
zd
Designing a scheduling function in the above model
induces a communication scheduling and a routing of the
communication protocol. As in [19] our model exploits data
redundancy, i.e. sending control data through multiple paths
in the same frame and then merging these components
according to the weight function, to render the MCN fault
tolerant and to allow FDI. As illustrated in [6], the dynamics
of a MCN M can be modeled by the interconnection of
blocks as in Figure 1. The block P is characterized by the
discrete-time transfer matrix P (z) obtained by discretizing
the system P with sampling time T = Π∆ . The block
R models the dynamics introduced by the flow of the
actuation data of all control inputs ui, i ∈ m through the
communication network represented by GR according to the
applied controllability scheduling functions ηRi , i ∈ m. The
reader is referred to [7] for a mathematical description of
such dynamics. In particular, as a straightforward extension
to the MIMO case of Proposition 1 of [7], and since the
data flow semantics decouple the components of the input
variables u and u˜, the transfer function that models the
input/output behavior of ui(kT ) with respect to u˜i(kT ) can
be expressed as follows, for any i ∈ m:
(1)
where χRi (d) is the set of paths of GR(ηRi ) characterized
by delay d, DRi ∈ N is the maximum delay introduced
by the paths of GR(ηRi ) and ∀d ∈ {1, . . . , DRi − 1},
+
γRi (d) ∈ R0 , γRi (DRi ) ∈ R+. By abuse of notation,
we denote by WRi (ρ) = WRi (vc, v1) · WRi (v1, v2) · . . . ·
WRi (vn−1, vn) · WRi (vn, vu,i) the product of weights of all
links that generate path ρ = vc, v1, . . . , vn, vu,i of GR(ηRi ).
Given Ri(z), i ∈ m, and since ∀i ∈ m, Ui(z) =
Ri(z)U"i(z), the block R can be modeled by the transfer
matrix R(z) = diag(R1(z), . . . , Rm(z)).
Proposition 1: [23] The characteristic polynomial associated
to R(z) is δR(z) = zDR , where DR = $m
i=1 DRi .
The transfer matrix O(z) = diag(O1(z), . . . , Oℓ(z)) of
the block O and the associated characteristic polynomial
δO(z) = zDO , with DO = $iℓ=1 DOi , can be derived
similarly. The dynamics of a MIMO MCN M in the nominal
case (i.e. when no node failures/attacks occur) can be
modeled by the cascade of the transfer matrices R(z), P (z)
and O(z), as illustrated in Figure 1, which is given by
M(z) = O(z)P (z)R(z).
We provide a modeling framework for the MCN dynamics
induced by malicious clusters that have not yet been detected,
which we will use to address Problem 2 in Section III; in
particular, we will state (generic) conditions for detection and
isolation of malicious clusters on a MCN exploiting the formalism
of structured systems [14], which we now introduce.
Given a system characterized by a state space representation
S = (A, B, C, D) we can define the associated structured
system by defining the matrices Sλ = (Aλ, Bλ, Cλ, Dλ) so
that each entry is either zero (if the corresponding entry
in the original matrix is zero) or a free parameter (if the
, γRi (d) =
WRi (ρ),
#
ρ∈χRi (d)
corresponding entry of the original matrix is non-zero). For
instance, consider a system S given by A = [1, 2; 0, 0],
B = [0, 1]⊤, C = [1, 0]: the corresponding structured system
Sλ is given by A = [λ1, λ2; 0, 0], B = [0, λ3]⊤, C = [λ4, 0],
where λ1, . . . , λ4 are free parameters. A structured system
can also be represented by a directed graph (VSλ , ESλ )
whose vertices correspond to the input, state and output
variables, and with an edge between two vertices if there
is a non-zero free parameter λi relating the corresponding
variables in the equations. The graph representation of the
example above is given by VSλ = {u, x1, x2, y}, and ESλ =
{(x1, x1), (x2, x1), (u, x2), (x1, y)}.
The model of a MCN M is the cascade of the blocks
R, P and O, hence its structured graph representation
(VMλ , EMλ ) is given by the union of the structured graph
representations of Rλ, Pλ and Oλ. Since failures/attacks
are assumed to occur in the network nodes we denote by
(VPλ , EPλ ) the structured graph representation of the plant
UP˜ ,=.wh{eu˜r1e, .th.e. ,su˜emts}ofa nindpYu˜t =and{y˜o1u,t.p.u.t, ny˜oℓ}d.es are respectively
.
An undetected failure/attack to a communication node v ∈
VR can be modeled by a set of arbitrary signals fv,i(k), for
any i such that there exist v′ ∈ VR, h ∈ Π with (v, v′) ∈
ηRi (h), each summed to the i-th input component routed
via node v. This general framework, as illustrated in [7] and
[21], models several node failures (a node stops sending data
or sends random data) as well as a wide set of malicious
attacks (an arbitrary signal is injected that overrides/sums
to the original data due to e.g. stealth, false-data injection
and replay attacks). Following the same reasoning as in the
definition of Ri(z), we can define the transfer function from
fv,i(k) to u˜i(k) as follows:
(2)
Tfv,i,u˜i (z) =. U"i(z) =
Fv,i(z)
D#v,i γv,i(d)
zd
,
1862
d=1
where Dv,i ∈ N is the maximum delay introduced by
the (routing) paths from v to the actuator node vu,i and
∀d ∈ Dv,i, γv,i(d) ∈ R, with γv,i(Dv,i) ̸= 0. By the
properties of GR(ηRi ) it follows that ∀v ∈ VR, Dv,i ≤ DRi .
The following proposition formalizes the structured graph
representation of the block R when a set of malicious signals
is applied to communication nodes.
Proposition 2: [6] Given GR, ηR and a set of faulty nodes
V¯ ⊆ VR, the structured graph representation (VRλ , ERλ ) of
the block R is as follows:
VRλ =. {u1, . . . , um} ∪ {u˜1, . . . , u˜m} ∪ ! {xi,d} ∪ !
i ∈ m, d ∈ DRi v ∈ V¯ , i ∈ m
∀i ∈ m, ∀d ∈ DRi , (ui, xi,d) ∈ ERλ ⇔ γRi (d) ̸= 0,
∀i ∈ m, ∀d ∈ DRi , ∀v ∈ V¯ , (fv,i, xi,d) ∈ ERλ ⇔ γv,i(d) ̸= 0,
∀i ∈ m, ∀d1, d2 ∈ DRi , (xi,d1 , xi,d2 ) ∈ ERλ ⇔ d1 = d2 + 1,
∀i ∈ m, (xi,1, u˜i) ∈ ERλ .
Note that fv,i is a variable associated to a (malicious)
signal fv,i(k) injected into the i-th component of the actuation
data routed via node v. Also note that xi,d is a
variable associated to the i-th input component that will
be delivered with a delay d to the actuator node vu,i,
{fv,i},
R!"#
u1
$R1(1)
$R1(DR1)
$R1(2)
x1,1
x1,2
x1,DR1
u˜1
$v,1(1)
$v,1(2) fv,1
$v,1(DR1)
R!"m
$Rm(1)
$Rm(DRm)
xm,1
xm,2
xm,DRm
um
$Rm(2) $v,m(2) fv,m
u˜m
$v,m(1)
$v,m(DRm)
Fig. 2. Graph representation of Rλ when a failure/attack in the node v
occurs.
and that U =. {u1, . . . , um} and U˜ =. {u˜1, . . . , u˜m} are
respectively the sets of input and output variables. Figure
2 provides an example of the graph representation of Rλ
when a failure/attack in the node v occurs. The edges of
ERλ labeled with γRi (d) (resp. γv,i(d)) are present in the
graph if and only if the corresponding variables γRi (d) in
Equation (1) (resp. γv,i(d) in Equation (2)) are not equal to 0.
Note that (VRλ , ERλ ) is composed by m weakly connected
components, each associated to the data flow of the i-th input
component. The same holds for defining the structured graph
representation (VOλ , EOλ ) of block O, whe.re the sets of
input and output nodes are respectively Y˜ = {y˜1, . . . , y˜ℓ}
and Y =. {y1, . . . , yℓ}. Note that in the structured graph
representation (VMλ , EMλ ) of a MCN M all nodes in U˜
and Y˜ are bridges since the removal of one of them increases
the number of weakly connected components.
III. FAULT DETECTION AND ISOLATION ON MCNS
In this section we provide a methodology to detect and
isolate a malicious cluster in a MCN using the input signal
of the controllability network and the output signal of the
observability network. We first provide some basic definitions
on FDI for structured systems, and then address the
FDI problem for MCN.
Let a structured system Sλ be given in the form:
x(k + 1) = Ax(k) + Bu(k) + E1d(k) + L1f (k),
y(k) = Cx(k) + Du(k) + E2d(k) + L2f (k),
where d(k) is a vector of disturbance signals and f (k) =
[f1(k), . . . , fr(k)]⊤ is a vector of r malicious signals. In [4]
necessary and sufficient conditions have been derived on the
graph representation of Sλ that (generically) guarantee the
existence of a bank of Luenberger observers, which takes
as inputs u(k), y(k), generates as output the residual signals
vector fˆ(k) = [fˆ1(k), . . . , fˆr(k)]⊤ and is characterized by
the diagonal transfer matrix
[Fˆ1(z), . . . , Fˆr(z)]⊤ = diag (T11(z), . . . , Trr(z)) [F1(z), . . . , Fr(z)]⊤,
where ∀i ∈ r, Tii(z) ̸= 0. Moreover, conditions in [4]
are also given to guarantee that the transfer function from
the disturbances to the residuals can be made zero, i.e.
so that the disturbances do not affect the residuals at all.
Characterizing the existence of such a bank of observers is
called the observer-based diagonal FDI problem.
It is intuitive, and trivial to show from the conditions in
[4], that in our setting the transfer function from disturbances
1863
applied to sensors and actuators to the outputs of the bank of
residual generators cannot be made exactly zero: however,
once the bank of residual generators has been designed
using the methods in [17], such transfer function can be
directly computed and classical methods for sensitivity analysis
and disturbance rejection can be directly applied to our
framework. As a consequence, in this paper we will not
consider the disturbance (i.e. E1 = E2 = 0) and leave such
generalization to further work. Also, it is well known [14]
that the control input effects can be taken into account in the
observer structure, therefore we will consider without loss
of generality B = D = 0. The theorem below characterizes
the observer-based diagonal FDI problem when there are no
disturbances, and is a particular case of Theorem 3 in [4].
Theorem 3: [4] The observer-based diagonal FDI problem
is generically solvable for a system S if and only if (i) S
is structurally observable and (ii) k = r, where k is the
maximum number of fault-output vertex disjoint paths in the
graph representation of Sλ.
Note that, if the conditions of the above theorem are satisfied,
there might be a zero-volume set of carefully chosen malicious
signals that hide in the zero dynamics, being therefore
undetectable: for example in [24], [21] the role of invariant
zeros in detecting malicious attacks has been characterized
for consensus networks.
In [23] we proved that, given a MIMO MCN M and if the
plant P is controllable and observable, it is always possible
to design a weight function W such that M is controllable
and observable, thus we assume in this paper that Mλ is
structurally observable - see [4] for the formal definition.
Given a MCN M subject to failures/attacks in the communication
nodes, if the observer-based diagonal FDI problem
is generically solvable for node failures/attacks in Mλ,
then the residual signals can be used to detect and isolate
possibly simultaneous occurrence of node failures/attacks. In
this section, in order to design the network configuration
of a MCN M to enable FDI of malicious clusters, we
state a formal relation between the network topology G and
scheduling/routing η of M, and the solvability conditions
of the observer-based diagonal FDI problem for malicious
clusters. We first show that if no assumptions are given
on the malicious signals then the observer-based diagonal
FDI problem is generically solvable for malicious clusters
in Mλ only for trivial network topologies. Then we will
raise a (weak) assumption on the malicious signals and
show by means of necessary and sufficient conditions that,
with this assumption, much more general network topologies
guarantee FDI of malicious clusters.
In general, a failure/attack of a node v ∈ VR ∪ VO affects
all the input components routed via v with possibly different
signals {fv,i(k)}i∈φ(v), where
φ(v) =. " {i ∈ m : (∃v′ ∈ VR, ∃h ∈ Π : (v, v′) ∈ ηRi (h))}
{i ∈ ℓ : (∃v′ ∈ VO, ∃h ∈ Π : (v, v′) ∈ ηOi (h))}
if v ∈ VR
if v ∈ VO
represents the set components routed via node v. Since we
aim at isolating malicious clusters, we are just interested in
detecting whether at least one of the signals {fv,i(k)}i∈φ(v)
is active. As a consequence the conditions for solvability of
the observer-based diagonal FDI problem can be expressed
as follows.
Lemma 4: Given a MCN M and a set V¯ =
{v1, . . . , vr} ⊆ VR ∪ VO of faulty nodes, define F¯ =
! ! {fv,i} the set of all malicious signals. The
v∈V¯ i∈φ(v)
observer-based diagonal FDI problem is generically solvable
for malicious clusters in Mλ if and only if, for any v¯ ∈ V¯
and any ¯i ∈ φ(v¯), there exists an (|F¯| − |φ(v¯)| + 1)-linking
from F¯ \ ! {fv¯,i} to Y in (VMλ , EMλ ).
i∈φ(v¯)\{¯i}
The above lemma shows that isolating failures/attacks of any
2 nodes belonging both to the controllability network is possible
only for trivial network topologies, namely when all the
graphs GR(ηRi ), i ∈ m consist of a single communication
node, and can be proven similarly for 2 nodes belonging to
the observability graph.
Proposition 5: Given a MCN M and 2 faulty nodes
v1, v2 ∈ VR, the observer-based diagonal FDI problem is
generically solvable for malicious clusters in Mλ only if
φ(v1) ∩ φ(v2) = ∅.
This negative result depends of the fact that a malicious
attack is assumed able to simultaneously inject into a node
v some malicious signals fv,i(k) that are always zero and
some that are non-zero for almost any k. To address this
issue, we assumed in [6] that, when a failure/attack of a
node v occurs, it affects all the input components routed
via v with the same time signal, namely we assumed that
∀i ∈ φ(v), fv,i(k) = fv(k). Note that, with such assumption,
a large class of malicious signals is ruled out.
In this paper we just assume that, when a failure/attack of
a node v occurs, it affects all the input components routed
via v with possibly different time signals that are all non-zero
for almost all time instants.
Assumption 1: We assume that when a failure/attack of a
node v occurs then, for all i ∈ φ(v), fv,i(k) ̸= 0 for almost
+
all k ∈ R0 .
Remark 1: We believe that the above assumption is quite
weak because: (1) it allows modeling failures, because a
malfunction of a node generically affects all components
routed via that node injecting possibly different signals;
(2) a malicious attack that does not satisfy Assumption
1 can be performed only if the attacker is aware of the
scheduling function ηRi , ∀i ∈ m or ηOi , ∀j ∈ ℓ associated
to each component of the actuation/sensing signal, and of the
internal structure of the payload of transmitted packets, in
order to separately affect the bytes corresponding to specific
components. Indeed, from a mathematical point of view, if
[fv,i1 (k), . . . , fv,i|φ(v)| (k)]⊤, where φ(v) = {i1, . . . , i|φ(v)|},
is the malicious vector signal injected into node v, it is
easy to see that Assumption 1 rules out a zero-volume set
of malicious vector signals. On the other hand, we believe
that the set of attack strategies of injecting non-zero signals
only for some components of the routed data is not a zerovolume
set with respect to the set of all attack strategies. As
a consequence, it is controversial to state whether the results
provided in the following of this paper hold generically
1864
or not. To meet the worst case we have made the choice
to state that the following results, which provide necessary
and sufficient conditions that guarantee FDI, hold only if
Assumption 1 holds.
Let us define
∀v ∈ VR, ∀i ∈ ℓ, Γi(v) =. {j ∈ m : (∃v′ ∈ VR, ∃h ∈ Π : (v, v′) ∈ ηRj (h))
and ∃ a path from u˜j to y˜i in (VMλ , EMλ )},
∀v ∈ VO, ∀i ∈ ℓ, Γi(v) =. " {∅i} iofth(e∃rwv′is∈e VO, ∃h ∈ Π : (v, v′) ∈ ηOi (h))
and let us model the effect of all node failures/attacks by
applying, for any i ∈ ℓ, the function
fi(k) =. # (3)
tfv,j,yi (k) ∗ fv,j (k),
v∈VR∪VO,j∈Γi(v)
to the vertex yi of the structured graph representation of Mλ.
Remark 2: Note that fi(k) is given by a sum of convolution
products (operator ∗) of each malicious signal fv,j
with the inverse transform tfv,j ,yi (k) of the transfer function
Tfv,j,yi (z) from fv,j (k) to yi(k). It is easy to see from
Section II that if v ∈ VO then Tfv,j,yi (z) just corresponds to
a delay transfer function, while if v ∈ VR then Tfv,j,yi (z)
is the product of a pure delay transfer function and of the
element i, j of the plant transfer function matrix P (z).
The main idea behind our approach for FDI on the basis
of Assumption 1 can be summarized as follows: since it is
not possible to detect and isolate certain malicious clusters
(proven in Lemma 6), then we sum them up as in Equation
(3), then we generate the residual signals fˆi(k), and we
finally exploit Assumption 1 to detect and isolate malicious
clusters by applying a logic operator to fˆi(k) being a zero
or non-zero signal (proven in Lemma 3 and Corollary 8).
The following lemma shows that the observer-based diagonal
FDI problem is not solvable for any set of malicious
signals that models all node failures/attacks and is defined
differently from Equation (3).
Lemma 6: The observer-based diagonal FDI problem is
not solvable in Mλ for any set of malicious signals that
models the effect of all malicious signals associated to
all node failures/attacks, and that contains separately any
two malicious signals fv,j (k), fv′,j′ (k) such that v, v′ ∈
VR ∪ VO, j ∈ Γi(v), j′ ∈ Γi(v′), for any i ∈ ℓ.
The following lemma proves that, if Assumption 1 holds,
then fi(k) is non-zero for almost any k if and only if at
least one node v such that Γi(v) ̸= ∅ is faulty, and fi(k) =
0, ∀k ≥ 0 if and only if all nodes v such that Γi(v) ̸= ∅ are
not faulty.
Lemma 7: Let Assumption 1 hold, then the following
properties hold generically:
1) fi(k) is non-zero for almost any k if and only if ∃v, j :
v ∈ VR ∪ VO, j ∈ Γi(v) such that fv,j (k) is non-zero
for almost any k.
2) fi(k) = 0, ∀k ≥ 0 if and only if for all v, j : v ∈
VR ∪ VO, j ∈ Γi(v), fv,j (k) = 0, ∀k ≥ 0.
The following corollary directly follows form Lemma 7.
Corollary 8: Given a set V¯ ⊆ 2VR∪VO of admissible
malicious clusters and any combination ω ∈ 2ℓ, the set
¯
Ω( ω) ⊆ 2V of malicious clusters that are possibly active
when the signals fi(k), i ∈ ω are non-zero and the signals
fi(k), i ∈ ℓ \ ω are zero, is given as follows:
Ω( ω) = {ν ∈ V¯ :(∀i ∈ ω, ∃v¯ ∈ ν : Γi(v¯) ̸= ∅) and
(∀v¯ ∈ ν, ∀i ∈ ℓ \ ω, Γi(v¯) = ∅)}
The following theorem provides necessary and sufficient
conditions that guarantee detection and isolation of malicious
clusters on the basis of Assumption 1.
Theorem 9: Let a MCN M and a set V¯ ⊆ 2VR∪VO
of admissible malicious clusters be given. It is possible
to exploit the solution of the observer-based diagonal FDI
problem to detect and isolate each malicious cluster in V¯ if
and only if, for each ν ∈ V¯ there exists a set ω ∈ 2ℓ such
that ν = Ω( ω).
Remark 3: It is worth to remark that the more the number
ℓ of outputs of the system, the easier to design a network
topology, scheduling and routing that enable FDI of an
increasing number of simultaneous failures/attacks. In particular,
the set of possibly distinguishable malicious clusters
increases with the cardinality of the set 2ℓ, which grows very
fast w.r.t. ℓ.
IV. CONCLUSIONS
In this paper we extend the results in [6] by relaxing
the assumption on failure/malicious signals. As we have
illustrated in Remark 1 we believe that our new assumption is
quite weak since it rules out a zero-volume set of malicious
vector signals. As future work we plan to improve the
network model by introducing transient failures (e.g. packet
losses) and to provide optimization techniques for optimal
co-design of controller, network scheduling, routing and
network coding that maximizes a performance metric and
guarantees robust stability with respect to packet losses (see
some initial results [8]).
REFERENCES
[1] M. Andersson, D. Henriksson, A. Cervin, and K.-E. A˚ rze´n. Simulation
of Wireless Networked Control Systems. In Proceedings of the 44th
IEEE CDC-ECC 2005. Seville, Spain, pages 476 - 481, Dec. 2005.
[2] K. Astro¨m and B. Wittenmark. Computer-Controlled Systems: Theory
and Design. Prentice Hall, 1997.
[3] J. Chen and R. Kumar. Online failure diagnosis of stochastic discrete
event systems. In Proc. IEEE Conf. on Computer Aided Control System
Design, Hyderabad, India, pages 194-199, Aug 28-30 2013.
[4] C. Commault, J.-M. Dion, O. Sename, and R. Motyeian. Observerbased
fault detection and isolation for structured systems. IEEE Trans.
on Automatic Control, 47(12):2074-2079, Dec. 2002.
[5] C. Commault and J.-M. Dion. Sensor Location for Diagnosis in Linear
Systems: A Structural Analysis. IEEE Trans. on Automatic Control,
52(2):155-169, Feb. 2007.
[6] A. D'Innocenzo, M.D. Di Benedetto, and F. Smarra. Fault detection
and isolation of malicious nodes in MIMO Multi-hop Control
Networks. In Proc. of 52st IEEE Conf. on Decision and Control,
Firenze, Italy, pages 5276-5281, December 10-13 2013.
[7] A. D'Innocenzo, M.D. Di Benedetto, and E. Serra. Fault tolerant control
of multi-hop control networks. IEEE Transactions on Automatic
Control, 58(6):1377-1389, June 2013.
[8] F. Smarra, A. D'Innocenzo, and M.D. Di Benedetto. Approximation
methods for optimal network coding in a multi-hop control network
with packet losses. In Proceedings of the 14th European Control
Conference (ECC'15), Linz, Austria, July 15-17, 2015.
1865
[9] G.C. Walsh, Hong Ye, and L.G. Bushnell. Stability Analysis of
Networked Control Systems. IEEE Transactions on Control Systems
Technology, 10(3):438-446, 2002.
[10] R.A. Gupta and M.-Y. Chow. Networked Control System: Overview
and Research Trends. IEEE Transactions on Industrial Electronics,
57(7):2527 -2535, July 2010.
[11] V. Gupta, A.F. Dana, J.P. Hespanha, R.M. Murray, and B. Hassibi.
Data transmission over networks for estimation and control. IEEE
Transactions on Automatic Control, 54(8):1807-1819, 2009.
[12] Song Han, Z. Xiuming, K.M. Aloysius, M. Nixon, T. Blevins, and
D. Chen. Control over wirelesshart network. In 36th Annual Conf. on
IEEE Industrial Electronics Society, pages 2114-2119, 2010.
[13] I.F. Akyildiz and I.H. Kasimoglu. Wireless Sensor and Actor Networks:
Research Challenges. Ad Hoc Networks, 2(4):351-367, 2004.
[14] J.-M. Dion, C. Commault, and J. van der Woude. Generic Properties
and Control of Linear Structured Systems: a Survey. Automatica,
39(7):1125 -1144, July 2003.
[15] J.P. Hespanha, P. Naghshtabrizi, and Y. Xu. A Survey of Recent
Results in Networked Control Systems. Proceedings of the IEEE,
95(1):138-162, January 2007.
[16] K.-E. A˚rze´n, A. Bicchi, S. Hailes, K. H. Johansson, and J. Lygeros. On
the design and control of wireless networked embedded systems. In
Proceedings of the 2006 IEEE Conference on Computer Aided Control
Systems Design, Munich, Germany, pages 440-445, October 2006.
[17] M.-A. Massoumnia, G.C. Verghese, and A.S. Willsky. Failure Detection
and Identification. IEEE Transactions on Automatic Control,
34(3):316 -321, March 1989.
[18] M.C.F. Donkers, W.P.M.H. Heemels, Nathan van de Wouw, and
Laurentiu Hetel. Stability Analysis of Networked Control Systems
Using a Switched Linear Systems Approach. IEEE Transactions on
Automatic Control, 56(9):2101 -2115, September 2011.
[19] M.D. Di Benedetto, A. D'Innocenzo, and E. Serra. Fault Tolerant
Stabilizability of Multi-Hop Control Networks. In Proceedings of the
18th IFAC World Congress, Milan, Italy, pages 79-84, 2011.
[20] N. Meskin and K. Khorasani. Actuator Fault Detection and Isolation
for a Network of Unmanned Vehicles. IEEE Transactions on Automatic
Control, 54(4):835 -840, April 2009.
[21] F. Pasqualetti, A. Bicchi, and F. Bullo. Consensus computation in
unreliable networks: A system theoretic approach. IEEE Transactions
on Automatic Control, 57(1):90-104, 2012.
[22] R. Alur, A. D'Innocenzo, K.H. Johansson, G.J. Pappas, and G.
Weiss. Compositional Modeling and Analysis of Multi-Hop Control
Networks. IEEE Transactions on Automatic Control, Special Issue on
Wireless Sensor and Actuator Networks, 56(10):2345-2357, 2011.
[23] F. Smarra, A. D'Innocenzo, and M.D. Di Benedetto. Fault Tolerant
Stabilizability of MIMO Multi-Hop Control Networks. In Proc. 3rd
IFAC Workshop on Estimation and Control of Networked Systems,
Santa Barbara, CA, pages 79-84, Sep 14-15 2012.
[24] S. Sundaram and C.N. Hadjicostis. Distributed function calculation via
linear iterative strategies in the presence of malicious agents. IEEE
Trans. on Automatic Control, 56(7):1495-1508, July 2011.
[25] M. Tabbara, D. Nesˇic´, and A.R. Teel. Stability of Wireless and Wireline
Networked Control Systems. IEEE Transactions on Automatic
Control, 52(7):1615-1630, September 2007.
[26] W. Zhang, M.S. Branicky, and S.M. Phillips. Stability of Networked
Control Systems. IEEE Control Systems Magazine, 21(1):84-99, Feb
2001.
[27] Y. Wang, S.X. Ding, H. Ye, and G. Wang. A New Fault Detection
Scheme for Networked Control Systems Subject to Uncertain TimeVarying
Delay. IEEE Transactions on Signal Processing, 56(10):5258
-5268, October 2008.
[28] G. Weiss, A. D'Innocenzo, R. Alur, K.H. Johansson, and G.J. Pappas.
Robust Stability of Multi-Hop Control Networks. In Proceedings of
the 48th IEEE Conference on Decision and Control. Shangai, China,
pages 2210-2215, December 16-18, 2010.