<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
  <front>
    <journal-meta />
    <article-meta>
      <title-group>
        <article-title>Linking Software Development and Business Strategy through Measurement</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author">
          <string-name>Victor R. Basili</string-name>
          <xref ref-type="aff" rid="aff0">0</xref>
          <xref ref-type="aff" rid="aff1">1</xref>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Mikael Lindvall</string-name>
          <xref ref-type="aff" rid="aff0">0</xref>
          <xref ref-type="aff" rid="aff1">1</xref>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Myrna Regardie</string-name>
          <xref ref-type="aff" rid="aff0">0</xref>
          <xref ref-type="aff" rid="aff1">1</xref>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Carolyn Seaman</string-name>
          <xref ref-type="aff" rid="aff0">0</xref>
          <xref ref-type="aff" rid="aff1">1</xref>
        </contrib>
        <aff id="aff0">
          <label>0</label>
          <institution>Fraunhofer Center for Experimental Software Engineering</institution>
        </aff>
        <aff id="aff1">
          <label>1</label>
          <institution>Jens Heidrich</institution>
          ,
          <addr-line>Jürgen Münch, Dieter Rombach, and Adam Trendowicz</addr-line>
        </aff>
      </contrib-group>
      <pub-date>
        <year>2010</year>
      </pub-date>
      <fpage>57</fpage>
      <lpage>65</lpage>
      <abstract>
        <p>Fraunhofer Institute for Experimental Software Engineering The GQM+Strategies approach extends the goal/question/metric paradigm for measuring the success or failure of goals and strategies, adding enterprise-wide support for determining action on the basis of measurement results. An organization can thus integrate its measurement program across all levels.</p>
      </abstract>
    </article-meta>
  </front>
  <body>
    <sec id="sec-1">
      <title>-</title>
      <p>ost organizations that develop software try
to retain their competitive edge by reducing
software-related risks. Effective risk
management requires aligning business goals
with development strategies and
translating the results into a quantitative project management
plan. In addition, organizations must also justify cost and
resources for software and system development and other
IT services. Often, such justicfiation demands a concrete
demonstration of how such development will contribute
to the organization’s overall business goals—the top-level
goals the organization desires to accomplish.</p>
      <p>Working against both alignment and justification is the
lack of methods for linking business goals and
softwarerelated efforts. Without a deep understanding of how
software development fits into their organization’s business
objectives, decision makers can neither plan development
nor evaluate the organization-wide success of
development strategies.</p>
      <p>To address this need, we have developed GQM+Strategies,
which uses measurement to link goals and strategies on all
organizational levels. The approach is based on rationales for
deciding when and how to transform goals into operations
and how to evaluate the success of strategies with respect
to those goals. The “Why Business Alignment?” sidebar
describes our motivation for developing this approach.</p>
      <p>As the name implies, GQM+Strategies is based on the
goal/question/metric (GQM) paradigm1 but adds the ability
to create measurement programs that ensure alignment
between goals and strategies from the highest strategic
business levels to individual development projects and vice
versa.2 Although we derived the approach from software
development experiences, it is not necessarily applicable
solely to this domain.</p>
    </sec>
    <sec id="sec-2">
      <title>GOAL-ORIENTED APPROACHES</title>
      <p>Software development organizations often encounter
problems when instituting measurement programs, such</p>
      <p>WHY BUSINESS ALIGNMENT?
W ith the increasing dependence on software and other
information technology (IT) has come a commensurate
growth in software system size and complexity. This growth in
turn has magnified the cost, schedule, and quality concerns
that have always plagued software development. For
decades, software engineering researchers and practitioners
have attempted to reduce development cost, shorten
development time, and increase quality. Although great strides
have been made in all three areas, software growth along all
dimensions (size, complexity, pervasiveness, criticality, and so
on) has outpaced the ability to control all the
developmentrelated factors.</p>
      <p>Eforts to define and understand these relationships have made
one notion crystal clear: Issues related to software cost, schedule,
and quality are inextricably linked with the larger issues that face
the businesses developing the software—regardless of the specific
business objectives. Some businesses sell what they develop,
either as contracted custom software or as commercial
shrinkwrapped applications. Others sell a product or service, of which
software is a significant component. Still others might develop
software only to support their organizational IT infrastructure so
that they can develop and market products more efectively.
Finally, some have no commercial interest at all, such as nonprofit
organizations, government entities, or educational institutions.</p>
      <p>Although all these organizational configurations challenge their
development projects in diferent ways, the point is that all have a
larger business context, which encompasses larger business goals,
strategies, and success measures. All software development
projects must consider context factors—the variables that
represent the organizational environment and afect the kind of models
and data the project can use.</p>
      <p>The problem is not that businesses fail to achieve their
objectives, but rather that they do not always state these objectives
explicitly or clearly enough to verify that they have indeed achieved
those objectives. It is even less clear how a business translates its
objectives into its lower organizational levels and into individual
projects. At present, no methodology bridges the gap between
business strategies and their project-level implementation.</p>
      <p>Quantitative data is a prerequisite to understanding the
relationships between the business and project-level goals and
verifying the achievement of objectives—one reason that software
development maturity requires the use of quantitative measures.
However, popular software improvement strategies, such as
Capability Maturity Model Integration and the IT Infrastructure Library,
are not directly and explicitly linked to business value.
Consequently, the investment in collecting data does not result in the
expected benefits, and the contribution of project performance to
the achievement of strategic goals remains unclear.
as collecting too much data, failing to gather useful or
correct data, and not having a mechanism for analyzing the
data in a way that contributes to sound strategic decisions.
This leads to numerous problems, including decreased
cost-effectiveness of the measurement program and
disillusionment about metrics on the part of developers and
managers. The end result is often the eventual failure of
the measurement program as a whole.</p>
      <p>To address these problems, researchers have
developed goal-oriented approaches—so called because they
use goals, objectives, strategies, or other mechanisms to
guide the choice of data to be collected and systematically
analyzed. The GQM approach, for example, provides a
method for an organization or a project to define goals,
refine those goals into specifications of the data to be
collected, and then analyze and interpret the resulting data in
light of the original goals. Implicit in the GQM approach is
the use of interpretation models, which help practitioners
interpret the resulting data in a specific context. The GQM
approach has served the software industry for several
decades in defining measurement programs, but it does not
explicitly provide support for motivating and integrating
the measurement of goals at various organizational levels,
such as project goals, business objectives, and corporate
strategies. It also does not encourage users to explicitly
document assumptions, estimated unknowns that can
affect data interpretation.</p>
      <p>Another goal-oriented approach, Balanced Scorecard
(BSC),3 links strategic objectives and measures through a
scorecard, which consists of four perspectives: financial,
customer, internal business processes, and learning and
growth. BSC does not dictate a static set of measures, but
rather serves as a framework for strategic measurement
and management. As such, it is a tool for defining strategic
goals from multiple perspectives beyond a purely financial
focus, but it does not address lower-level goal setting.</p>
      <p>Practical Software Measurement (PSM)4 offers detailed
guidance on software measurement, including providing
a catalog of specific measures and information on how an
organization can apply those measures in projects. PSM
also includes a process for choosing measures according
to the issues and objectives relevant to a software
development project. For the most part, however, approaches such
as BSC and PSM do not support the alignment of objectives
at different organizational levels, or this is simply not the
focus of these approaches.</p>
      <p>Researchers have also proposed various combinations
of GQM, BSC, and PSM5-8 that recognize the need to link
higher- and lower-level goals. However, because these
approaches do not support different goals at explicitly
linked organizational levels, it is difficult to feed
analytical results and interpretations back up the chain. In
contrast, GQM+Strategies creates mappings between the
data related to goals at different levels so that insights
gained relative to one goal at one level—whether project
or departmental, or a business objective—can support and
contribute to satisfying goals at other organizational levels
without requiring that each level share the same goals.</p>
      <p>Some application domains have specific requirements
that emphasize the need to link business goals to
lowerlevel properties. Organizations are becoming increasingly
aware, for example, that the IT infrastructure itself
im</p>
      <sec id="sec-2-1">
        <title>Goal+Strategies element</title>
        <p>in uences</p>
        <sec id="sec-2-1-1">
          <title>Context/ assumption in uences Goal</title>
          <p>realized
by a
set of
Strategy
leads to
a set of
&gt; made
measurable
through
&lt; measures
achievement
of</p>
        </sec>
      </sec>
      <sec id="sec-2-2">
        <title>GQM graph</title>
        <sec id="sec-2-2-1">
          <title>GQM goal</title>
        </sec>
      </sec>
      <sec id="sec-2-3">
        <title>Goal+Strategies element</title>
      </sec>
      <sec id="sec-2-4">
        <title>GQM graph</title>
        <p>made measurable through</p>
        <sec id="sec-2-4-1">
          <title>Question</title>
        </sec>
        <sec id="sec-2-4-2">
          <title>Question</title>
          <p>is part of</p>
        </sec>
        <sec id="sec-2-4-3">
          <title>Interpretation model</title>
        </sec>
        <sec id="sec-2-4-4">
          <title>Metric</title>
        </sec>
        <sec id="sec-2-4-5">
          <title>Metric</title>
        </sec>
        <sec id="sec-2-4-6">
          <title>Metric</title>
          <p>poses significant risks, which has led to several regulatory
constraints in both the IT governance and IT service
domains, such as the Sarbanes-Oxley Act in the US.9</p>
          <p>The solutions proposed by models in these domains
offer connections between predefined sets of goals and
attributes of the IT infrastructure. They are sharply focused
on a particular domain, such as IT governance, and define
a very detailed model that fits that domain quite well. To
apply such an approach, however, the organization must
strictly follow the prescribed model. Release 4 of the
Control Objectives for Information and Related Technology
(CoBIT) standard (www.isaca.org), for example, is based
on a process model that subdivides IT into four domains
and 34 processes.</p>
          <p>Approaches such as CoBIT and the IT Infrastructure
Library (ITIL) provide no mechanism for adapting and
tailoring the solution, nor do they support addressing the
specific context or documenting inherent assumptions.
No clearly defined interpretation model indicates if an
overall strategy is working or has to be changed to avoid
business failure.</p>
        </sec>
      </sec>
    </sec>
    <sec id="sec-3">
      <title>COMPONENTS OF AN INTEGRATED APPROACH</title>
      <p>GQM+Strategies aims to address the weaknesses of
existing goal-oriented approaches by providing both explicit
links among organizational levels and the flexibility to
tailor the approach to the organization’s specific needs and
objectives. Eight conceptual components form the basis for
constructing a consistent model. Figure 1 illustrates how
these components interrelate.
• Business goals: goals the organization wishes to
accomplish in general to achieve its strategic objectives.
• Context factors: environmental variables that
represent the organizational environment and affect the
kind of models and data that can be used.
• Assumptions: estimated unknowns that can affect the
interpretation of the data.
• Strategies: a set of possible approaches for achieving a
goal that may be refined by a set of concrete activities.
• Level i goals: a set of lower-level goals inherited from
the previous level’s (i - 1) goals as part of the previous
level’s goal strategy—an example is a goal related to
a project that is part of a selected software strategy.
• Interpretation models: models that help interpret
data to determine if the goals at all levels have been
achieved.
• Goal+Strategies element: a single goal and derived
strategies (including a set of concrete activities), as
well as all context information and assumptions that
explain how the goal and corresponding strategies
are linked.
• GQM graph: a single GQM goal that measures a
Goal+Strategies element and its corresponding
questions, metrics, and interpretation models.</p>
      <p>All organizations have business goals, such as
improving customer satisfaction, garnering market share, and
reducing production costs, and they devise strategies
to deal with them, taking into account the context and
making explicit any assumptions. Strategies specify how
to achieve the goal and should, in turn, define lower-level
l
e
v
e
l
s
s
e
n
i
s
u
B
l
e
v
e
l
e
r
a
w
ft
o
S
l
e
v
e
lt
c
e
jr
o
P</p>
      <p>GQM+Strategies elements
Goal 1: Increase pro t
from software service usage</p>
      <sec id="sec-3-1">
        <title>Strategy 1: Deliver</title>
        <p>added functionality</p>
        <p>Goal 2: Deliver 5% new
functionality every 6 months
within 10% of budget</p>
      </sec>
      <sec id="sec-3-2">
        <title>Strategy 2: Use MoSCoW</title>
        <p>and Cocomo</p>
        <p>Goal 3: Apply MoSCoW
and Cocomo e ectively</p>
      </sec>
      <sec id="sec-3-3">
        <title>Strategy 3: Conduct</title>
        <p>training, determine tools,
perform pilot study</p>
        <p>GQM goals</p>
        <p>Questions</p>
        <p>Metrics Interpretation model
G1: Evaluate
trend in pro t
G2: Evaluate
functional
growth of each</p>
        <p>release
G3: Evaluate
e ectiveness
of MoSCow
and Cocomo</p>
        <p>Q1: What is
the current</p>
        <p>pro t?
Q2: What is
the pro t for
year 2 and
year 3?
Q3: How
many M
requirements
in each release?</p>
        <p>Q4: How
long between
releases?
Q5: Cost
estimation
accuracy?
Q6: How
extensive
was the
training?
Q7: What is
cost of
training?</p>
        <p>P0: current
annual
pro t
PX: annual
pro t for
year x
MR: number
of
customerrequested
requirements</p>
        <p>(M)
implemented
RD: release
duration
BV: budget
variance
NT: number
of trainees
TC: hours
spent in
training</p>
        <p>If P2 &gt; 1.1 • P0</p>
        <p>and
P3 &gt; 1.1 • P2</p>
        <p>and …
then goal is
satis ed
…
…
goals for various parts of the organization, such as
software, hardware, and marketing. An organization might
devise a separate set of strategies to deal with these
lowerlevel goals. The number of goal and strategy levels depends
on the organization’s internal structure.</p>
        <p>Assumptions and context information about the
organization strongly influence the definition of goals and
strategies. Measuring the effectiveness and the
accomplishment of goals and the effectiveness of strategies at
all levels is critical for business success. And making goals
connected and transparent at all levels helps in
communicating and achieving them. What most organizations need
is support for these concepts.</p>
        <p>The components in Figure 1 provide this support by
allowing multiple goal levels and multiple strategies for each
goal (a GQM+Strategies element), as well as a measurement
plan (GQM graph). The GQM+Strategies element provides
the basic components for deriving the goals and strategies
as influenced by the context; the basic known facts about
the market, the organization, the product, and so on; and
the assumptions—factors that are assumed or guessed
but not known for sure. A key element is making the
context and assumptions explicit so that they can be verified.
The relevant context and assumptions aid in defining the
rationale for choosing specific goals and strategies. A set
of predefined goals and strategies can become part of an
organization-specific experience base and allow different
parts of the organization to select and adapt predefined
goals and strategies.</p>
        <p>Associated with each GQM+Strategies element is a
measurement plan that uses the GQM approach
measurement and evaluation framework to specify how to
evaluate the goal, what data to collect, and how to
interpret that data. The nodes of each GQM graph consist of
a measurement goal, which describes what knowledge
needs to be gained from the measurement activity; a set
of questions to be answered; the metrics and data items
required to answer the questions; and an
interpretation model that specifies how the data items are to be
combined and what the criteria are for determining the
goal’s success.</p>
        <p>The nodes are related semihierarchically. A goal can
have several associated measurement goals, each of
which is the basis for an entire GQM graph. However,
different GQM structures are likely to use some of the same
questions and metrics, and interpretation models might
combine data from different GQM structures, thus
optimizing metrics collection. The results of the lower-level
interpretation models feed into the higher-level ones to
provide feedback on lower-level goal achievement.</p>
        <p>With the complete model, an organization can
not only define measurement consistent with
larger, upper-level organizational concerns, but
also interpret and roll up the resulting
measurement data at each level.</p>
      </sec>
    </sec>
    <sec id="sec-4">
      <title>AN APPLICATION</title>
      <p>To illustrate the features of our approach, we
consider a fictitious but representative type of
organization, ABC, which provides information
services to its customers through the Web.
Customers do not buy the software, but rather pay a
service fee for access to information and to
software that searches, analyzes, and presents that
information. Thus, the business model implies that
the number of customer accesses to ABC’s system
determines the company’s revenue. Figure 2
represents a model of this application.</p>
    </sec>
    <sec id="sec-5">
      <title>Business goals</title>
      <p>Although the approach is flexible enough to
accommodate several different entry points, the starting point of the
GQM+Strategies process in this example is a business goal.
As Goal 1 shows, one of ABC’s business goals is to increase
profit from software service use. The GQM+Strategies
approach enforces the explicit documentation of the relevant
context factors and assumptions necessary for
understanding and evaluating each goal. For Goal 1, one such
context factor is that how often customers access ABC
software products determines the amount of revenue
generated at ABC.</p>
      <p>The GQM+Strategies goal template documents other
details. Each template includes the desired magnitude of
improvement, the time frame for achieving the goal, the
scope of responsibility for achieving the goal, and any
constraints or conflicting goals as well as relationships to
other goals. Figure 3 shows a partial template for Goal 1.</p>
      <p>The GQM graph in Figure 2 is based on the
measurement goal, G1. In full GQM notation, G1 is</p>
      <p>Analyze the trend in profit for the purpose of evaluation
with respect to a 10 percent increase in annual income per
year from the point of view of ABC’s management in the
context of the ABC organization.</p>
      <p>This goal leads to questions Q1 and Q2: What is the
current profit (measured by P0), and what is the profit for each
succeeding year (as measured by Px)? The decision maker
analyzes the results using the criteria incorporated in the
interpretation model (far right), which says that</p>
      <p>Starting in year 2, if the profit for the current year (P2) is
at least 10 percent (1.1 times) higher than the profit for the
initial preceding year (P1), then the goal has been satisfied.</p>
      <sec id="sec-5-1">
        <title>Activity:</title>
      </sec>
      <sec id="sec-5-2">
        <title>Focus:</title>
      </sec>
      <sec id="sec-5-3">
        <title>Object:</title>
      </sec>
      <sec id="sec-5-4">
        <title>Magnitude:</title>
      </sec>
      <sec id="sec-5-5">
        <title>Time frame:</title>
      </sec>
      <sec id="sec-5-6">
        <title>Scope:</title>
      </sec>
      <sec id="sec-5-7">
        <title>Constraints:</title>
      </sec>
      <sec id="sec-5-8">
        <title>Relations:</title>
        <sec id="sec-5-8-1">
          <title>Increase</title>
          <p>Net income
ABC Web services
10% per year
Annually, beginning in 2 years
Development groups assessed at CMMI level 2 or higher
Available resources, ability to sustain CMMI levels</p>
          <p>CMMI-related goals</p>
          <p>The full interpretation model, not shown for simplicity,
includes an “else” part related to the effectiveness of the
chosen strategies.</p>
          <p>The strategies associated with each goal come from a
list of potential strategies that the GQM+Strategies user
has enumerated, taking into account influencing context
factors. Possible strategies for meeting Goal 1 are to
deliver added capabilities to encourage heavier system use,
increase rates charged to customers, or reduce
development costs. The user opted for the strategy of delivering
added functionality in the product releases at regular and
frequent intervals. At this point, the user must also make
explicit the assumption that this added functionality will
lead to increased customer satisfaction, which will in turn
lead to heavier use.</p>
          <p>The assumption is that ABC has enough projects with
a Capability Maturity Model Integration maturity level
greater than 1 that, if just those projects provide a 15
percent improvement, ABC will see a 10 percent improvement
overall. In general, all context information and
assumptions are attached to goals, strategies, and their relations
(as Figure 1 shows) and are documented in a corresponding
graph (not shown).</p>
        </sec>
      </sec>
    </sec>
    <sec id="sec-6">
      <title>Software-development goals</title>
      <p>At the next level down in the model is a goal derived
from the strategy (or strategies) chosen at the top level.
Goal 2 is to deliver a new release of the software every six
months that incorporates at least 5 percent more
functionality than the previous release and to keep the cost
of this increased functionality to within 10 percent of the
current budget.</p>
      <p>These are really two interrelated but separate software
goals, so the user defines them in separate GQM+Strategies
goal templates. Figure 4 elaborates the first of these goals
(increasing functionality by 5 percent). At this level, the
goal is specific to software development, so it is treated as</p>
      <sec id="sec-6-1">
        <title>Object:</title>
      </sec>
      <sec id="sec-6-2">
        <title>Magnitude:</title>
      </sec>
      <sec id="sec-6-3">
        <title>Time frame:</title>
      </sec>
      <sec id="sec-6-4">
        <title>Scope:</title>
      </sec>
      <sec id="sec-6-5">
        <title>Constraints:</title>
      </sec>
      <sec id="sec-6-6">
        <title>Relations:</title>
        <sec id="sec-6-6-1">
          <title>Deliver</title>
          <p>More usable functionality, for example, M (must) type requirements
from the backlog of customer-requested requirements
Each release of ABC Web services software
5% more functionality than the prior release
Every 6 months, beginning in 2 years
Web services development projects with CMMI level 2 or higher
Available resources, ability to sustain CMMI levels, ability to estimate
cost, and schedule for a release
Achievement of cost and schedule estimate accuracy, ability to improve
CMMI levels of development groups
a goal at the software level, as opposed to one at the
business level. In general, the name accorded the lower levels
depends on the organization applying GQM+Strategies and
the number of levels to be modeled.</p>
          <p>The software goal template asks for the same
categories of information as the business goal template in Figure
3. The user defines the measurement and interpretation
model for this goal and refines the interpretation model
for the business goal. As Figure 5 shows, the refinement of
Figure 2’s interpretation model involves adding an “else”
part that recognizes that full interpretation depends on the
lower-level goals. For example, if the functionality was not
increased by 5 percent, perhaps the strategy associated
with Goal 2 was not effective. The interpretation model
becomes increasingly detailed, with more conditional logic,
at each lower level in the overall GQM+Strategies model.</p>
          <p>The organization must decide to develop and carry out a
strategy for accomplishing a software goal. The strategy for
Goal 2 in Figure 2 is to adopt an approach such as rating the
importance of different requirements, as in the MoSCoW
prioritization approach10 for requirements and release
planning, and to adopt the Constructive Cost Model (Cocomo)11
for cost estimation. The user must explicitly document an</p>
          <p>This goal leads to questions Q3 and Q4: How many new
requirements of must (M) importance were included in
each release? How much time elapsed between releases?
The interpretation of this software goal’s achievement is</p>
          <p>If, at each six-month milestone, the growth in
functionality of a release is 5 percent, then the level 2 goal is
satisfied for this release; else, assumptions about MoSCoW
are incorrect or we have not chosen the correct strategy.</p>
          <p>At this point, the user can also further refine the
business goal’s interpretation. If the business goal is satisfied
(ABC’s profit increased by 10 percent), but Goal 2 is not,
then the assumptions are wrong. The delivery of a
particular requirement alone might have caused the gain, for
example.</p>
        </sec>
      </sec>
    </sec>
    <sec id="sec-7">
      <title>Project-specific goals</title>
      <p>The last goal level in Figure 2 consists of goals derived
from the previous level’s strategy that apply to a
particular software development group or project. In the sample
application, Goal 3 is to apply the MoSCoW and Cocomo
approaches effectively. The relevant development group
has developed a strategy for this goal that involves training
personnel, acquiring tools that will assist in applying these
methods, and piloting these methods on a single project. A
relevant assumption is that training for these approaches
can be targeted to a few specific individuals, so the impact
of the training on cost and schedule is reasonable.</p>
      <p>The GQM graph at this level, only part of which is shown
in Figure 2, involves evaluating the effectiveness of using
MoSCoW and Cocomo and of the training and other tools.
The GQM+Strategies user then uses these results to revisit
the interpretation of higher-level goals. Some of the
questions and metrics defined at the second level are reusable
at subsequent levels—a benefit of basing GQM+Strategies
on the GQM approach.</p>
      <p>SUPPORTING STRATEGIC MEASUREMENT</p>
      <p>In all cases, specifying a strategy for goal achievement
creates explicit links among goals at the various levels, from
business objectives to project operations, which is critical
to strategic measurement. In the example, the highest-level
goal was to increase profit, the next-level goal was to
provide new functionality in short releases, and the lowest-level
goal was to use specific application methods to achieve the
previous level goals. The linking strategy specified that ABC
will achieve its increased profit goal by providing customers
with more functionality. Often such links are implicit, but
making them explicit has many benefits.</p>
    </sec>
    <sec id="sec-8">
      <title>Templates</title>
      <p>Templates also support strategic measurement by
guiding users in defining all goal types at the necessary detail
level. In the example, the full template for the business
goal partially described in Figure 3 includes more
extensive information about the target increase in income,
the time frame, and any constraints or conflicting goals.
GQM+Strategies includes templates for all goal types in the
measurement model.</p>
    </sec>
    <sec id="sec-9">
      <title>Tracking assumptions</title>
      <p>Although the ABC example did not show it, our
approach also builds in the ability to track context factors
and assumptions at each level (through the requirement
to document them along with all strategy
documentation) so that users can more easily assess the effects of
changes in either context or assumptions. In the example,
the approach required that users document the
assumption about the training required for MoSCoW and Cocomo
so that, if the assumption turns out to be false, the model
will indicate what elements the assumption affects and,
consequently, what requires reevaluating.</p>
    </sec>
    <sec id="sec-10">
      <title>Interpretation models</title>
      <p>Interpretation models tie together measurement goals,
context factors, assumptions, and data, thus making it
easier to correctly and usefully interpret measurement
results. This idea stems from the original GQM approach,
but we have broadened it to allow interpretation models
at each level to inform not only that level, but also higher
levels as the data is aggregated and rolled up. In the ABC
example, the results of applying the interpretation model
at the lowest level will yield information about how the
piloting of MoSCoW and Cocomo went, as well as
information about the training and tools. The information from the
lower level can help diagnose any problems encountered at
the next level up. Further, the results of the interpretation
at the second level can inform the analysis at the top level.
At the top level, if profit does not increase as expected, the
analytical results from the second level will help determine
if the problem is due to higher costs, inadequate
functionality delivered, late releases, or some other cause.</p>
      <p>Our approach explicitly links goals
at different levels, from business
objectives to project operations,
which is critical to strategic
measurement.</p>
    </sec>
    <sec id="sec-11">
      <title>Flexibility</title>
      <p>Our approach is flexible enough to accommodate other
software measurement approaches and business strategy
approaches. ABC might have used BSC to define its
business goals and strategies and then used that description as
a starting point for applying GQM+Strategies. PSM might
have been useful later in applying our approach, when ABC
needed to define the metrics.</p>
      <p>Shared measurement planning and experience</p>
      <p>Because all goal levels are linked, measurement
planning and results are organization-wide rather than limited
to a single project or department. Often the results are
lower costs and better return on the investment in a
measurement program, greater likelihood that the program
will succeed, more effective risk identification and
management, and greater compliance with software process
improvement models such as CMMI.</p>
      <p>A substantial benefit is that sharing makes it more
feasible to build a measurement experience base that
can become a valuable corporate asset. Such a base can
make project measurement and planning easier over time
and consequently decrease project costs. It might begin
with the set of generic experiences already available in
GQM+Strategies and add value as the organization
populates it with organization-specific models.</p>
      <p>Business
Domain</p>
      <p>Any part of the ABC model in Figure 2 is reusable. The
assumptions and context factors are particularly
important because they capture the properties that might not
hold when the organization reuses the model for a different
situation. However, because the model requires the explicit
capture of assumptions and context factors and links these
to particular goals and strategies, the organization can
clearly see which parts of the model need to be
reevaluated when an assumption or context factor changes. The
result is the flexibility to adapt goals and strategies to
particular market needs and to analyze the consequences to
the organization.</p>
    </sec>
    <sec id="sec-12">
      <title>APPLICATION SCENARIOS</title>
      <p>We have already taken steps to apply the GQM+Strategies
approach in various industrial settings. Although our
approach focuses on software development, it is finding
equal utility in broader contexts, as the applications in
Table 1 illustrate.</p>
      <p>A few studies are ongoing to get more insights into
the deployment of GQM+Strategies. So far, most of the
studies have reached the phase of initially setting up a
GQM+Strategies grid, but they have not yet progressed to
the point of using and maintaining it.</p>
      <p>T software measurement program that is
consisthe GQM+Strategies approach provides many
features for organizations that want to create a
ent with and contributes to the achievement of
goals at all organizational levels. Our sample
application illustrates the use of GQM+Strategies in a
single context with three goal levels. Other situations
might call for additional levels, but generally the
process of capturing multilevel goals includes a business goal
level, a set of lower-level goals, and a project-specific goal
level. Each of these levels, in turn, can have multiple peer
goals. Regardless of how many levels the organization</p>
      <p>Application
Drive strategic improvement programs, support paradigm
shift toward purpose-driven metrics
Support CMMI’s Measurement and Analysis process area
Evaluate cost, benefit, and schedule for modernizing
existing product suite
Increase the visibility at all organizational levels of how
strategic decisions impact operations
Align strategies and goals for new business domain
Increase visibility of goals and strategies and derived
measurement goals to enhance supplier collaboration
requires, all levels must be based on well-defined goals,
each with an associated strategy, documented context
factors and assumptions, and a measurement and
evaluation framework.</p>
      <p>The most important benefit of applying GQM+Strategies
is the resulting transparency of measurement motivations
and goals at different organizational levels, which makes
it easier to identify goal relationships and conflicts and
facilitates communication for organizational segments,
such as marketing and software development. In the ABC
example, without the GQM+Strategies model, project
personnel might have misdirected their training efforts or
chosen the wrong tools. The model helped project
personnel understand why they were being asked to implement
MoSCoW and Cocomo, which was likely to produce more
focused training or tailoring. This is one of the many
benefits of using our approach in a short development cycle.</p>
    </sec>
    <sec id="sec-13">
      <title>Acknowledgments</title>
      <p>G Q M+S t r a t e g i e s i s r e g i s t e r e d t r a d e m a r k N o.
302008021763 at the German Patent and Trade Mark
Office; international registration number IR992843.</p>
      <p>Victor R. Basili is a professor in the Department of
Computer Science at the University of Maryland and chief
scientist of the Fraunhofer Center for Experimental
Software Engineering. His research interests include
measuring, evaluating, and improving the software process
and product via empirical studies. Basili received a PhD in
computer science from the University of Texas. Contact him
at basili@fc-md.umd.edu.</p>
      <p>Mikael Lindvall is a senior scientist and division
director at the Fraunhofer Center for Experimental Software
Engineering. His research interests include agile methods,
software process improvement, software architectures, and
experience and knowledge management. Lindvall received
a PhD in computer science from Linköping University,
Sweden. Contact him at mikli@fc-md.umd.edu.
Myrna Regardie is a senior engineer at the Fraunhofer
Center for Experimental Software Engineering. Her
research interests include software process improvement,
measurement, and project and knowledge management.
Regardie received a BS in mathematics from Juniata
College, Huntingdon, Pennsylvania. Contact her at mregardie@
fc-md.umd.edu.</p>
      <p>Carolyn Seaman is an associate professor of information
systems at the University of Maryland, Baltimore County,
and a scientist at the Fraunhofer Center for
Experimental Software Engineering. Her research interests include
software evolution, management of software projects,
and qualitative research methods in software
engineering. Seaman received a PhD in computer science from the
University of Maryland. Contact her at cseaman@fc-md.
umd.edu.</p>
      <p>Jens Heidrich is a department head at the Fraunhofer
Institute for Experimental Software Engineering. His research
interests include project management, quality assurance,
and measurement. Heidrich received a PhD in computer
science from the University of Kaiserslautern, Germany.
Contact him at jens.heidrich@iese.fraunhofer.de.
Jürgen Münch is division manager for quality management
at the Fraunhofer Institute for Experimental Software
Engineering. His research interests include quality assurance,
process management, and measurement. Münch received
a PhD in computer science from the University of
Kaiserslautern. Contact him at juergen.muench@iese.fraunhofer.
de.</p>
      <p>Dieter Rombach is a professor and chair of the Software
Engineering Department at the University of
Kaiserslautern and executive director of the Fraunhofer Institute
for Experimental Software Engineering. His research
interests include software methodologies, modeling and
measurement of the software process and resulting
products, software reuse, and distributed systems. Rombach
received a PhD in computer science from the University
of Kaiserslautern. Contact him at dieter.rombach@iese.
fraunhofer.de.</p>
      <p>Adam Trendowicz is a researcher at the Fraunhofer
Institute for Experimental Software Engineering. His research
interests include software cost modeling, measurement,
and process improvement. Trendowicz received a PhD in
computer science from the University of Kaiserslautern.
Contact him at adam.trendowicz@iese.fraunhofer.de.</p>
      <p>Selected CS articles and columns are available for free at
http://ComputingNow.computer.org.</p>
      <p>Join the</p>
      <p>IEEE
Computer Society</p>
    </sec>
  </body>
  <back>
    <ref-list>
      <ref id="ref1">
        <mixed-citation>
          1.
          <string-name>
            <given-names>V.</given-names>
            <surname>Basili</surname>
          </string-name>
          , G. Caldiera, and
          <string-name>
            <given-names>D.</given-names>
            <surname>Rombach</surname>
          </string-name>
          , “Goal, Question, Metric Paradigm,”
          <source>Encyclopedia of Software Engineering</source>
          , vol. 1,
          <string-name>
            <surname>J.J</surname>
          </string-name>
          . Marciniak, ed., John Wiley &amp; Sons,
          <year>1994</year>
          , pp.
          <fpage>528</fpage>
          -
          <lpage>532</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref2">
        <mixed-citation>
          2.
          <string-name>
            <given-names>V.</given-names>
            <surname>Basili</surname>
          </string-name>
          et al.,
          <source>“Bridging the Gap between Business Strategy and Software Development,” Proc. Int'l Conf. Information Systems</source>
          , Association for Information Systems Electronic Library; http://aisel.aisnet.org/icis2007/25.
        </mixed-citation>
      </ref>
      <ref id="ref3">
        <mixed-citation>
          3.
          <string-name>
            <given-names>R.</given-names>
            <surname>Kaplan</surname>
          </string-name>
          and
          <string-name>
            <given-names>D.</given-names>
            <surname>Norton</surname>
          </string-name>
          , “
          <article-title>The Balanced Scorecard-Measures That Drive Performance,” Harvard Business Rev</article-title>
          .,
          <string-name>
            <surname>Jan</surname>
          </string-name>
          .-Feb.
          <year>1992</year>
          , p.
          <fpage>71</fpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref4">
        <mixed-citation>
          4. US Dept.
          <article-title>of Defense and US Army, Practical Software and Systems Measurement: A Foundation for Objective Project Management</article-title>
          , v.
          <volume>4</volume>
          .0c,
          <string-name>
            <surname>Mar</surname>
          </string-name>
          .
          <year>2003</year>
          ; www.psmsc.com.
        </mixed-citation>
      </ref>
      <ref id="ref5">
        <mixed-citation>
          5.
          <string-name>
            <given-names>S.A.</given-names>
            <surname>Becker and M.L. Bostelman</surname>
          </string-name>
          , “
          <article-title>Aligning Strategic and Project Measurement Systems</article-title>
          ,” IEEE Software, May/June 1999, pp.
          <fpage>46</fpage>
          -
          <lpage>51</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref6">
        <mixed-citation>
          6.
          <string-name>
            <given-names>L.</given-names>
            <surname>Buglione</surname>
          </string-name>
          and
          <string-name>
            <given-names>A.</given-names>
            <surname>Abran</surname>
          </string-name>
          , “
          <article-title>Balanced Scorecards and GQM: What Are the Differences?</article-title>
          ”
          <source>Proc. 3rd European Software Measurement Conf., Federation of European Software Measurement Assoc.</source>
          ,
          <year>2000</year>
          , pp.
          <fpage>18</fpage>
          -
          <lpage>20</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref7">
        <mixed-citation>
          7.
          <string-name>
            <given-names>A.J.</given-names>
            <surname>Bianchi</surname>
          </string-name>
          , “
          <article-title>Management Indicators Model to Evaluate Performance of IT Organizations,”</article-title>
          <source>Proc. Int'l Conf. Management of Engineering and Technology</source>
          , vol.
          <volume>2</volume>
          , IEEE Press,
          <year>2001</year>
          , pp.
          <fpage>217</fpage>
          -
          <lpage>229</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref8">
        <mixed-citation>
          8.
          <string-name>
            <given-names>D.</given-names>
            <surname>Card</surname>
          </string-name>
          , “
          <source>Integrating Practical Software Measurement and the Balanced Scorecard,” Proc. 27th Ann. Int'l Computer Software and Applications Conf</source>
          ., IEEE CS Press,
          <year>2003</year>
          , p.
          <fpage>362</fpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref9">
        <mixed-citation>
          9.
          <string-name>
            <surname>Sarbanes-Oxley Act</surname>
          </string-name>
          of
          <year>2002</year>
          , Public Law No.
          <fpage>107</fpage>
          -
          <issue>204</issue>
          , 116 Stat. 745, codified in
          <source>sections of 11</source>
          , 15,
          <issue>18</issue>
          , 28, and 29 in US Code,
          <issue>30</issue>
          <year>July 2002</year>
          .
        </mixed-citation>
      </ref>
      <ref id="ref10">
        <mixed-citation>
          10.
          <string-name>
            <given-names>D.</given-names>
            <surname>Clegg</surname>
          </string-name>
          and
          <string-name>
            <given-names>R.</given-names>
            <surname>Barker</surname>
          </string-name>
          ,
          <article-title>Case Method Fast-Track: A RAD Approach</article-title>
          ,
          <string-name>
            <surname>Addison-Wesley Professional</surname>
          </string-name>
          ,
          <year>1994</year>
          .
        </mixed-citation>
      </ref>
      <ref id="ref11">
        <mixed-citation>
          11.
          <string-name>
            <given-names>B.W.</given-names>
            <surname>Boehm</surname>
          </string-name>
          et al.,
          <source>Software Cost Estimation with COCOMO II</source>
          ,
          <string-name>
            <surname>Prentice</surname>
            <given-names>Hall</given-names>
          </string-name>
          ,
          <year>2000</year>
          .
        </mixed-citation>
      </ref>
    </ref-list>
  </back>
</article>